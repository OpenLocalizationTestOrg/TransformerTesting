<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="2-eda-in-databricks.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1931010" tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2-eda-in-databricks.db93d67690bec0a5078eea6ce12c9ee0fb419d0b.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0df133fd23f560a4cfe94ac327c13292b61052bb</xliffext:ms.openlocfilehash><xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/13/2019</xliffext:ms.lasthandoff><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\databricks\perform-exploratory-data-analysis-with-azure-databricks\includes\2-eda-in-databricks.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Azure Databricks supports different techniques for doing basic and advanced exploratory data analysis (EDA) on your dataset.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Basic EDA</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>With Azure Databricks, you can do basic EDA actions, such as data cleansing, handling of missing values, and correlation analysis.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To start, you need to import your datasets.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>There are many options to import your data within Azure Databricks:</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Directly import small datasets into tables by using the Azure Databricks UI.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Mount blob storage accounts and data lakes.</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Connect to external databases.</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Use an orchestrator, like Azure Data Factory.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>After you have access to the data, you can load it into Spark DataFrames for simplified processing.</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can also use Pandas DataFrames.</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Azure Databricks allows you to easily convert from one DataFrame type to the other, as needed.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Advanced EDA</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Azure Databricks allows you to harness the power of Apache Spark to conduct advanced EDA.</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can also use a number of languages, such as Python, R, SQL, and Scala.</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For additional functionality, load custom-built libraries or select from a wide variety of Python, Maven, and R libraries.</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This lab explores the following features that allow you to do advanced EDA with your dataset:</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Parsimonious models:<ept id="p1">**</ept> A parsimonious model shows you the predictive capability of your data by using a minimum number of variables.</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To help you visually represent the results of your model in graphs, Azure Databricks notebooks have built-in capabilities to plot data from a DataFrame.</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>One-hot encoding and feature scaling:<ept id="p1">**</ept> In machine-learning literature, one-hot encoding is an approach to encoding categorical integer features by using a one-hot or one-of-K scheme.</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Every distinct value of the categorical integer feature becomes a new column.</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Each new column has a binary value of either 0 or 1, depending on whether that value exists for the category.</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Converting a dataset into the one-hot format makes it easier for machines to read and process.</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For example, suppose you're working on the following dataset, which contains prices for different brands of cars:</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Brand</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Categorical value</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Price</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Nissan</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>1</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>20000</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Nissan</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>1</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>50000</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Nissan</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>1</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>80000</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Toyota</source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>2</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>20000</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Hyundai</source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>3</source>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>25000</source>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>When this dataset goes through the one-hot process, it's converted into the following structure:</source>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Nissan</source>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Toyota</source>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Hyundai</source>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Price</source>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>1</source>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit><trans-unit id="150" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit><trans-unit id="151" translate="yes" xml:space="preserve">
          <source>20000</source>
        </trans-unit><trans-unit id="152" translate="yes" xml:space="preserve">
          <source>1</source>
        </trans-unit><trans-unit id="153" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit><trans-unit id="154" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit><trans-unit id="155" translate="yes" xml:space="preserve">
          <source>50000</source>
        </trans-unit><trans-unit id="156" translate="yes" xml:space="preserve">
          <source>1</source>
        </trans-unit><trans-unit id="157" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit><trans-unit id="158" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit><trans-unit id="159" translate="yes" xml:space="preserve">
          <source>80000</source>
        </trans-unit><trans-unit id="160" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit><trans-unit id="161" translate="yes" xml:space="preserve">
          <source>1</source>
        </trans-unit><trans-unit id="162" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit><trans-unit id="163" translate="yes" xml:space="preserve">
          <source>20000</source>
        </trans-unit><trans-unit id="164" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit><trans-unit id="165" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit><trans-unit id="166" translate="yes" xml:space="preserve">
          <source>1</source>
        </trans-unit><trans-unit id="167" translate="yes" xml:space="preserve">
          <source>25000</source>
        </trans-unit><trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Dimensionality reduction:<ept id="p1">**</ept> Dimensionality reduction transforms data with <bpt id="p2">*</bpt>n<ept id="p2">*</ept> dimensions to a representation of the data in <bpt id="p3">*</bpt>m<ept id="p3">*</ept> dimensions, where <bpt id="p4">*</bpt>m<ept id="p4">*</ept> is less than <bpt id="p5">*</bpt>n<ept id="p5">*</ept>.</source>
        </trans-unit></group></body></file></xliff>