<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="4-transactions.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1931010" tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4-transactions.b653c2e3642ccc7b12026dcf6d07ce8eeb2b29f1.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7d5527fa12e4a405e871c26bf1dc338879afdbee</xliffext:ms.openlocfilehash><xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/13/2019</xliffext:ms.lasthandoff><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\choose-storage-approach-in-azure\includes\4-transactions.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Applications may need to group a series of data updates together, because a change to one piece of data needs to result in a change to another piece of data.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Transactions enable you to group these updates so that if one event in a series of updates fails, the entire series can be rolled back, or undone.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>For example, as an online retailer you might use a transaction for the placement of an order and payment verification.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The grouping of the related events ensures that you don't reduce your inventory levels until an approved form of payment is received.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Here, you'll learn about transactions and whether they're required for your data.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>What is a transaction?</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A transaction is a logical group of database operations that execute together.</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Here's the question to ask yourself regarding whether you need to use transactions in your application: Will a change to one piece of data in your dataset impact another?</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If the answer is yes, then you'll need support for transactions in your database service.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Transactions are often defined by a set of four requirements, referred to as ACID guarantees.</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>ACID stands for <bpt id="p1">**</bpt>A<ept id="p1">**</ept>tomicity, <bpt id="p2">**</bpt>C<ept id="p2">**</ept>onsistency, <bpt id="p3">**</bpt>I<ept id="p3">**</ept>solation, and <bpt id="p4">**</bpt>D<ept id="p4">**</ept>urability:</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Atomicity<ept id="p1">**</ept> means that either all the operations in the transaction are executed, or none of them are.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Consistency<ept id="p1">**</ept> ensures that if something happens partway through the transaction, a portion of the data isn't left out of the updates.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Across the board, the transaction is applied consistently or not at all.</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Isolation<ept id="p1">**</ept> ensures that one transaction is not impacted by another transaction.</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Durability<ept id="p1">**</ept> means that the changes made due to the transaction are permanently saved in the system.</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Committed data is saved by the system so that even in the event of a failure and system restart, the data is available in its correct state.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When a database offers ACID guarantees, these principles are applied to any transactions in a consistent manner.</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>OLTP vs OLAP</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Transactional databases are often called OLTP (Online Transaction Processing) systems.</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>OLTP systems commonly support lots of users, have quick response times, and handle large volumes of data.</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>They are also highly available (meaning they have very minimal downtime), and typically handle small or relatively simple transactions.</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>On the contrary, OLAP (Online Analytical Processing) systems commonly support fewer users, have longer response times, can be less available, and typically handle large and complex transactions.</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The terms OLTP and OLAP aren't used as frequently as they used to be, but understanding them makes it easier to categorize the needs of your application.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Now that you're familiar with transactions, OLTP, and OLAP, let's walk through each of the data sets in the online retail scenario, and determine the need for transactions.</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Product catalog data</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Product catalog data should be stored in a transactional database.</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When users place an order and the payment is verified, the inventory for the item should be updated.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Likewise, if the customer's credit card is declined, the order should be rolled back, and the inventory should not be updated.</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>These relationships all require transactions.</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Photos and videos</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Photos and videos in a product catalog don't require transactional support.</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>These files are changed only when an update is made or new files are added.</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Even though there is a relationship between the image and the actual product data, it's not transactional in nature.</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Business data</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For the business data, because all of the data is historical and unchanging, transactional support is not required.</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The business analysts working with the data also have unique needs in that they often require working with aggregates in their queries, so that they can work with the totals of other smaller data points.</source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Summary</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Ensuring that your data is in the correct state is not always an easy task.</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Transactions can help by enforcing data integrity requirements on your data.</source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If your data benefits from ACID principles, then choose a storage solution that supports transactions.</source>
        </trans-unit></group></body></file></xliff>