<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="4-exercise-create-redis-cache.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff"  tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4-exercise-create-redis-cache.122655.abd955a8d90a9129a2b9cbc7428359ae3f2cf7c2.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">abd955a8d90a9129a2b9cbc7428359ae3f2cf7c2</xliffext:ms.openlocfilehash><xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba7e452ac39d7f09a5646044b44de0e1cdc54982</xliffext:ms.sourcegitcommit><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\optimize-your-web-apps-with-redis\includes\4-exercise-create-redis-cache.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Let's create an Azure Cache for Redis instance to store and return commonly used values.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Create a Redis cache in Azure</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Sign into the <bpt id="p1">[</bpt>Azure portal<ept id="p1">](https://portal.azure.com/learn.docs.microsoft.com?azure-portal=true)</ept> using the same account you activated the sandbox with.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Create a resource<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>Databases<ept id="p2">**</ept>, and click <bpt id="p3">**</bpt>Redis Cache<ept id="p3">**</ept>.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The following screenshot shows the Redis Cache location within the various database resource options on the Azure portal.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Screenshot showing the Azure portal database options, with the Create a resource, Database, and Redis Cache options highlighted.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Configure your cache</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Apply the following settings on the cache.</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>DNS Name:<ept id="p1">**</ept> Create a globally unique name such as <bpt id="p2">**</bpt>ContosoSportsApp[nnn]<ept id="p2">**</ept>, where <ph id="ph1">`[nnn]`</ph> is replaced with random numbers.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Subscription:<ept id="p1">**</ept> Select the Concierge subscription.</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Resource group:<ept id="p1">**</ept> Select <bpt id="p2">&lt;rgn&gt;</bpt>[sandbox resource group name]<ept id="p2">&lt;/rgn&gt;</ept> for the Resource Group.</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Location:<ept id="p1">**</ept> Normally, you would select a location near your customers - in this case, the East Coast.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Pricing tier:<ept id="p1">**</ept> Select <bpt id="p2">**</bpt>Basic C0<ept id="p2">**</ept>.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This is the lowest tier you can use.</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Production apps would likely want to store more data and utilize some of the Premium features such as clustering which would require a higher tier selection.</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Azure will create and deploy the Redis Cache instance for you.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Usually, the Redis cache resource will be created and viewable in the Azure portal very quickly, but the cache itself will not be available for a few minutes.</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The next steps show how to check the status of your cache.</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Verify your data</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">**</bpt>Console<ept id="p1">**</ept> feature in the Azure portal to issue commands to your Redis cache instance after it has been created.</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Locate your Redis cache through the <bpt id="p1">**</bpt>Notification<ept id="p1">**</ept> popup when it finishes deployment, or by selecting <bpt id="p2">**</bpt>All Resources<ept id="p2">**</ept> in the left-hand sidebar and using the filter box on the left to select Redis Cache instances.</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use the search box at the top and type the name of the cache.</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Select your Redis cache instance.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Check the value of the "Status" field.</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The cache is not ready until the status is "Running".</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You might have to wait for a few minutes before proceeding.</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Once the cache is running, Click the <ph id="ph1">`&gt;_ Console`</ph> button in the toolbar on the <bpt id="p1">**</bpt>Overview<ept id="p1">**</ept> blade for your Redis Cache.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This will open a Redis console, which allows you to enter low-level Redis commands.</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Try some of the following:</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Switch back to the <bpt id="p1">**</bpt>Overview<ept id="p1">**</ept> panel either through the breadcrumb bar on the top, or use the scrollbar to slide the view back to the left.</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Retrieve the access keys and host name</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Settings<ept id="p1">**</ept><ph id="ph1"> &gt; </ph><bpt id="p2">**</bpt>Access keys<ept id="p2">**</ept>.</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Copy the <bpt id="p1">**</bpt>Primary connection string (StackExchange.Redis)<ept id="p1">**</ept> to a safe place, you will need it for the next exercise.</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This key includes your primary key and host name in a complete connection string for use within your application settings for the <bpt id="p1">**</bpt>StackExchange.Redis<ept id="p1">**</ept> package we are going to use.</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Next, let's learn about some of the commands we can use to interrogate the cache.</source>
        </trans-unit></group></body></file></xliff>