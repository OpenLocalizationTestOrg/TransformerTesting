<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="2-connect-to-storage-metrics.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1931010" tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2-connect-to-storage-metrics.9f2767756bfbcb833a734f508cc2dec65b7de3bf.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a2a4fca64de36860ccc339ae85b48f0fcb707d84</xliffext:ms.openlocfilehash><xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/13/2019</xliffext:ms.lasthandoff><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\access-blob-storage-metrics-from-code\includes\2-connect-to-storage-metrics.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>In your video analysis company, you use Azure Blob Storage for storing daily rushes.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Performance is a key consideration, and you want to ensure your administrators can see how the system behaves and whether it responds optimally to users.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>To do that, you must understand how your Storage Account sends information to Azure Monitor and how to access that information.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Overview of Azure Monitor</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Azure Monitor is a solution that can gather and store information from many different types of application components, and it includes a wide range of tools for analyzing, visualizing, and responding to this data.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>As such, Azure Monitor is a single tool that you can use to watch and optimize all the components of your system wherever they run.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Azure Monitor overview</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Azure Monitor collects two types of data:</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Data Type</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Metrics<ept id="p1">**</ept></source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>These are numerical values that describe some aspect of a component at a point in time.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For example, an Average Server Response Time metric measures how long a component has taken to respond to users on average over the last few minutes.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">**</bpt>Metrics Explorer<ept id="p1">**</ept> to show how these metrics vary over time.</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Logs<ept id="p1">**</ept></source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>These are records of the behavior of a component, and they may contain telemetry such as events and traces.</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In the Azure portal, you can use the <bpt id="p1">**</bpt>Log Analytics<ept id="p1">**</ept> page to drill into this data and find individual events that interest you.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>By default, you can access 93 days of data in Azure Monitor.</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you need to retain data for a longer period, you can archive it to an Azure Storage account.</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In addition to using the Azure portal to view and analyze Azure Monitor data, you can also use Application Programming Interfaces (APIs) to examine logs and metrics in code:</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>API</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Azure Monitor REST API<ept id="p1">**</ept></source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A REST API is a web service that you can call from your code over HTTP and port 80.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The responses are usually in the JSON format.</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Azure Monitor .NET API<ept id="p1">**</ept></source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The .NET API is a set of .NET classes that you can add to any .NET project such as a desktop application, a mobile app, or an ASP.NET web app.</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The .NET API is slightly easier to use and requires fewer lines of code for typical operations.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>However, you can only use this API in .NET projects.</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If you want to use Node.js, for example, you cannot use the .NET API.</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The REST API can be called from any code that can make HTTP requests.</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If you complete the optional exercise in the next unit, you'll use the <bpt id="p1">**</bpt>curl<ept id="p1">**</ept> command-line tool to make REST requests.</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Azure Monitor and Azure Storage</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When you create a Storage Account in Azure, it is automatically configured to send storage metrics to Azure Monitor for later display and analysis.</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Storage account metrics and classic storage metrics</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Originally, Azure Storage collected metrics and stored them in <bpt id="p1">**</bpt>$Metric<ept id="p1">**</ept> tables within the same storage account.</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>These metrics are known as old metrics or classic metrics, and they included capacity measurements for blob storage, and transaction measurements for blob, table, file, and queue storage.</source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In the Azure portal, classic storage metrics are shown on pages with <bpt id="p1">**</bpt>(classic)<ept id="p1">**</ept> appended to the title:</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Classic metrics pages in the Azure portal</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Old storage metrics still work, but they are deprecated, and support for them is likely to end in the future.</source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If you're using old metrics, you should migrate them to the new storage metrics as soon as possible.</source>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For new storage metrics, Azure Storage sends the data to the Azure Monitor backend in order to unify the metrics from Azure Storage with those of other Azure services.</source>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You get the same monitoring experience regardless of the data source in Azure Monitor, and you can integrate metrics from different sources into the same displays.</source>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This module discusses new Azure Storage metrics, but bear in mind: when you read about storage metrics, both old and new metrics exist.</source>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>(Some third-party articles may not be entirely clear about which metrics they discuss.)</source>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source>How to use curl to make queries against the REST API</source>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>curl<ept id="p1">**</ept> is a command-line tool that is available in the Azure Cloud Shell, which you can use to make requests through the HTTP protocol.</source>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Because a REST API works over port 80, you can use <bpt id="p1">**</bpt>curl<ept id="p1">**</ept> to make test requests.</source>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This is a helpful technique to learn about the REST API you are using, and to examine its behavior in order to help you write code to implement it.</source>
        </trans-unit><trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Many REST APIs, including the Azure Monitor API, require you to authenticate before you can make requests in order to ensure security.</source>
        </trans-unit><trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To authenticate, you can use the <bpt id="p1">**</bpt>az<ept id="p1">**</ept> command to retrieve an authentication token:</source>
        </trans-unit><trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Now you can use the <bpt id="p1">**</bpt>curl<ept id="p1">**</ept> tool and pass the authentication token:</source>
        </trans-unit><trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The above command pipes the response to the <bpt id="p1">**</bpt>jq<ept id="p1">**</ept> utility, which helps to present the JSON data in a more readable format.</source>
        </trans-unit><trans-unit id="154" translate="yes" xml:space="preserve">
          <source>How to formulate the correct URL for a request to the Azure Monitor REST API</source>
        </trans-unit><trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Any request to a REST API requires you to formulate the correct URL.</source>
        </trans-unit><trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Because functional APIs like the Azure Monitor API are often complex, the URL can be long and complex.</source>
        </trans-unit><trans-unit id="157" translate="yes" xml:space="preserve">
          <source>To request the list of Azure Storage metrics from the Azure Monitor, use a URL like the one that is illustrated in the following example:</source>
        </trans-unit><trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Where you will need to identify the following values using the Azure portal, and substitute them for the placeholders in the URL above:</source>
        </trans-unit><trans-unit id="159" translate="yes" xml:space="preserve">
          <source>URL Component</source>
        </trans-unit><trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit><trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This is the GUID for the Azure subscription where your storage account is located.</source>
        </trans-unit><trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This is the name of the resource group where your storage account is located.</source>
        </trans-unit><trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This is the name of your Azure Storage account.</source>
        </trans-unit><trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Once you have retrieved a list of the Azure Storage metrics, you can query for the values of specific metrics over a time period.</source>
        </trans-unit><trans-unit id="165" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit><trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If you perform the optional exercise in the next unit, you'll execute queries by using this method.</source>
        </trans-unit></group></body></file></xliff>