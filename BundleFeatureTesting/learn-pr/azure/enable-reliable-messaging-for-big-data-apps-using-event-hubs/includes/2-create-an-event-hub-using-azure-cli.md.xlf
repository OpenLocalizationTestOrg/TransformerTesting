<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="2-create-an-event-hub-using-azure-cli.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff"  tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2-create-an-event-hub-using-azure-cli.589661.77001c2463f1227664b78203258fa75b1d228342.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">77001c2463f1227664b78203258fa75b1d228342</xliffext:ms.openlocfilehash><xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba7e452ac39d7f09a5646044b44de0e1cdc54982</xliffext:ms.sourcegitcommit><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\enable-reliable-messaging-for-big-data-apps-using-event-hubs\includes\2-create-an-event-hub-using-azure-cli.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Your team has decided to leverage the capabilities of the Azure Event Hubs to manage and process the increasing transaction volumes coming through your system.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>An Event Hub is an Azure resource, so your first step is to create a new hub in Azure and configure it to meet the specific requirements of your applications.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>What is an Azure Event Hub?</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Azure Event Hubs is a cloud-based, event-processing service that's capable of receiving and processing millions of events per second.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Event Hubs acts as a front door for an event pipeline, where it receives incoming data and stores it until processing resources are available.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>An entity that sends data to the Event Hubs is called a <bpt id="p1">*</bpt>publisher<ept id="p1">*</ept> and an entity that reads data from the Event Hubs is called a <bpt id="p2">*</bpt>consumer<ept id="p2">*</ept> or a <bpt id="p3">*</bpt>subscriber<ept id="p3">*</ept>.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Azure Event Hubs sits between these two entities to divide the production (from publisher) and consumption (to subscriber) of an event stream.</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This decoupling helps to manage scenarios where the rate of event production is much higher than the consumption.</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following illustration shows the role of an Event Hub.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>An illustration showing an Azure Event Hub placed between four publishers and two subscribers.</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The Event Hub receives multiple events from the publishers, serializes the events into data streams, and makes the data streams available to subscribers.</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Events</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">**</bpt>event<ept id="p1">**</ept> is a small packet of information (a <bpt id="p2">*</bpt>datagram<ept id="p2">*</ept>) that contains a notification.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Events can be published individually, or in batches, but a single publication (individual or batch) can't exceed 256 KB.</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Publishers and subscribers</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Event publishers are any application or device that can send out events using either HTTPS or Advanced Message Queuing Protocol (AMQP) 1.0.</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For publishers that send data frequently, AMQP has the better performance.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>However, it has a higher initial session overhead, because a persistent bidirectional socket and transport level security (TLS) or SSL/TLS has to be set up first.</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For more intermittent publishing, HTTPS is the better option.</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Though HTTPS requires additional overhead for each request, there isn’t the session initialization overhead.</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Existing Kafka-based clients, using Apache Kafka 1.0 and newer client versions, can also act as Event Hubs publishers.</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Event subscribers are applications that use one of two supported programmatic methods to receive and process events from an Event Hub.</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>EventHubReceiver<ept id="p1">**</ept> - A simple method that provides limited management options.</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>EventProcessorHost<ept id="p1">**</ept> - An efficient method that we’ll use later in this module.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Consumer groups</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An Event Hub <bpt id="p1">**</bpt>consumer group<ept id="p1">**</ept> represents a specific view of an Event Hub data stream.</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>By using separate consumer groups, multiple subscriber applications can process an event stream independently, and without affecting other applications.</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>However, the use of multiple consumer groups is not a requirement, and for many applications, the single default consumer group is sufficient.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Pricing</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>There are three pricing tiers for Azure Event Hubs: Basic, Standard, and Dedicated.</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The tiers differ in terms of supported connections, number of available Consumer groups, and throughput.</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When using Azure CLI to create an Event Hubs namespace, if you don't specify a pricing tier, the default of <bpt id="p1">**</bpt>Standard<ept id="p1">**</ept> (20 Consumer groups, 1000 Brokered connections) is assigned.</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Creating and configuring a new Azure Event Hubs</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>There are two main steps when creating and configuring a new Azure Event Hubs.</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The first step is to define an Event Hubs <bpt id="p1">**</bpt>namespace<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The second step is to create an Event Hub in that namespace.</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Defining an Event Hubs namespace</source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An Event Hubs namespace is a containing entity for managing one or more Event Hubs.</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Creating an Event Hubs namespace typically involves the following:</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Defining namespace-level settings.</source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Certain settings such as namespace capacity (configured using <bpt id="p1">**</bpt>throughput units<ept id="p1">**</ept>), pricing tier, and performance metrics are defined at the namespace level.</source>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>These are applicable for all the Event Hubs within that namespace.</source>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If you don't define these settings, a default value is used: <bpt id="p1">*</bpt>1<ept id="p1">*</ept> for capacity and <bpt id="p2">*</bpt>Standard<ept id="p2">*</ept> for pricing tier.</source>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You cannot change the throughput unit once you set it.</source>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You must balance your configuration against your Azure budget expectations.</source>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source>You might consider configuring different Event Hubs for different throughput requirements.</source>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, if you have a sales data application and you are planning for two Event Hubs, one for high throughput collection of real-time sales data telemetry and one for infrequent event log collection, it would make sense to use a separate namespace for each hub.</source>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This way you only need to configure (and pay for) high throughput capacity on the telemetry hub.</source>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Selecting a unique name for the namespace.</source>
        </trans-unit><trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The namespace is accessible through this url: <bpt id="p1">*</bpt><bpt id="p2">_</bpt>namespace<ept id="p2">_</ept>.servicebus.windows.net<ept id="p1">*</ept></source>
        </trans-unit><trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Defining the following optional properties:</source>
        </trans-unit><trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Enable Kafka.</source>
        </trans-unit><trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This option enables Kafka applications to publish events to the Event Hub.</source>
        </trans-unit><trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Make this namespace zone redundant.</source>
        </trans-unit><trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Zone-redundancy replicates data across separate data centers with their own independent power, networking, and cooling infrastructures.</source>
        </trans-unit><trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Enable Auto-Inflate, and Auto-Inflate Maximum Throughput Units.</source>
        </trans-unit><trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Auto-Inflate provides an automatic scale-up option, by increasing the number of throughput units up to a maximum value.</source>
        </trans-unit><trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This is useful to avoid throttling in situations when incoming or outgoing data rates exceed the currently set number of throughput units.</source>
        </trans-unit><trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Azure CLI commands for creating an Event Hubs namespace</source>
        </trans-unit><trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To create a new Event Hubs namespace, you will use the <ph id="ph1">`az eventhubs namespace`</ph> commands.</source>
        </trans-unit><trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Here's a brief description of the sub-commands we will use in the exercise.</source>
        </trans-unit><trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Command</source>
        </trans-unit><trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit><trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Create the Event Hubs namespace.</source>
        </trans-unit><trans-unit id="165" translate="yes" xml:space="preserve">
          <source>All Event Hubs within the same Event Hubs namespace share common connection credentials.</source>
        </trans-unit><trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You will need these credentials when you configure applications to send and receive messages using the Event Hub.</source>
        </trans-unit><trans-unit id="167" translate="yes" xml:space="preserve">
          <source>This command returns the connection string for your Event Hubs namespace.</source>
        </trans-unit><trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Configuring a new Event Hub</source>
        </trans-unit><trans-unit id="169" translate="yes" xml:space="preserve">
          <source>After the Event Hubs namespace has been created, you can create an Event Hub.</source>
        </trans-unit><trans-unit id="170" translate="yes" xml:space="preserve">
          <source>When creating a new Event Hub, there are several mandatory parameters.</source>
        </trans-unit><trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The following parameters are required to create an Event Hub:</source>
        </trans-unit><trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Event Hub name<ept id="p1">**</ept> - Event Hub name that is unique within your subscription and:</source>
        </trans-unit><trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Is between 1 and 50 characters long</source>
        </trans-unit><trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Contains only letters, numbers, periods, hyphens, and underscores</source>
        </trans-unit><trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Starts and ends with a letter or number</source>
        </trans-unit><trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Partition Count<ept id="p1">**</ept> -  The number of partitions required in an Event Hub (between 2 and 32).</source>
        </trans-unit><trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This should be directly related to the expected number of concurrent consumers.</source>
        </trans-unit><trans-unit id="178" translate="yes" xml:space="preserve">
          <source>This cannot be changed after the hub has been created.</source>
        </trans-unit><trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The partition separates the message stream, so that consumer or receiver applications only need to read a specific subset of the data stream.</source>
        </trans-unit><trans-unit id="180" translate="yes" xml:space="preserve">
          <source>If not defined, this defaults to <bpt id="p1">*</bpt>4<ept id="p1">*</ept>.</source>
        </trans-unit><trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Message Retention<ept id="p1">**</ept> - The number of days (between 1 and 7) that messages will remain available, if the data stream needs to be replayed for any reason.</source>
        </trans-unit><trans-unit id="182" translate="yes" xml:space="preserve">
          <source>If not defined, this defaults to <bpt id="p1">*</bpt>7<ept id="p1">*</ept>.</source>
        </trans-unit><trans-unit id="183" translate="yes" xml:space="preserve">
          <source>You can also optionally configure an Event Hub to stream data to an Azure Blob storage or Azure Data Lake Store account.</source>
        </trans-unit><trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Azure CLI commands for creating an Event Hub</source>
        </trans-unit><trans-unit id="185" translate="yes" xml:space="preserve">
          <source>To create a new Event Hub with the Azure CLI, you will use the <ph id="ph1">`az eventhubs eventhub`</ph> command set.</source>
        </trans-unit><trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Here's a brief description of the sub-commands we will be using:</source>
        </trans-unit><trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Command</source>
        </trans-unit><trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit><trans-unit id="189" translate="yes" xml:space="preserve">
          <source>This creates the Event Hub in a specified namespace.</source>
        </trans-unit><trans-unit id="190" translate="yes" xml:space="preserve">
          <source>This displays the details of your Event Hub.</source>
        </trans-unit><trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Summary</source>
        </trans-unit><trans-unit id="192" translate="yes" xml:space="preserve">
          <source>To deploy Azure Event Hubs, you must configure an Event Hubs namespace and then configure the Event Hub itself.</source>
        </trans-unit><trans-unit id="193" translate="yes" xml:space="preserve">
          <source>In the next section, you will go through the detailed configuration steps to create a new namespace and Event Hub.</source>
        </trans-unit></group></body></file></xliff>