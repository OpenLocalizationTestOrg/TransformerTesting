<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="4-create-configure-application-gateway.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff"  tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4-create-configure-application-gateway.9b9391.d76c026138d7d0c6e4d75b85073175770654feda.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d76c026138d7d0c6e4d75b85073175770654feda</xliffext:ms.openlocfilehash><xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba7e452ac39d7f09a5646044b44de0e1cdc54982</xliffext:ms.sourcegitcommit><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\load-balance-web-traffic-with-application-gateway\includes\4-create-configure-application-gateway.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Application Gateway comprises a series of components that combine to route requests to a pool of web servers and to check the health of these web servers.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Let's take a look at how these components are related and what role they play in an Application Gateway.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Visualization of the components of Application Gateway</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Front-end IP address</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Client requests are received through a <bpt id="p1">*</bpt>front-end IP address<ept id="p1">*</ept>.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can configure Application Gateway to have a public IP address, a private IP address, or both.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Application Gateway can't have more than one public and one private IP address.</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Listeners</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Application Gateway uses one or more <bpt id="p1">*</bpt>listeners<ept id="p1">*</ept> to receive incoming requests.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A listener accepts traffic arriving on a specified combination of protocol, port, host, and IP address.</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Each listener routes requests to a back-end pool of servers following routing rules that you specify.</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A listener can be <bpt id="p1">*</bpt>Basic<ept id="p1">*</ept> or <bpt id="p2">*</bpt>Multi-site<ept id="p2">*</ept>.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A Basic listener only routes a request based on the path in the URL.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A Multi-site listener can also route requests using the hostname element of the URL.</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Listeners also handle SSL certificates for securing your application between the user and Application Gateway.</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Routing rules</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>routing rule<ept id="p1">*</ept> binds a listener to the back-end pools.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A rule specifies how to interpret the hostname and path elements in the URL of a request, and direct the request to the appropriate back-end pool.</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A routing rule also has an associated set of HTTP settings.</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>These settings indicate whether (and how) traffic is encrypted between Application Gateway and the back-end servers, and other configuration information such as:</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Protocol (HTTP or HTTPS).</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Session stickiness, to pass all requests in a client session to the same web server rather than distributing them across servers with load balancing.</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Connection draining, to enable the graceful removal of servers from a back-end pool.</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Request timeout period, in seconds.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Health probes, specifying a probe URL, time out periods, and other parameters used to determine whether a server in the back-end pool is available.</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Back-end pools</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>back-end pool<ept id="p1">*</ept> references a collection of web servers.</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You provide the IP address of each web server and the port on which it listens for requests when configuring the pool.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Each pool can specify a fixed set of virtual machines, a virtual machine scale-set, an app hosted by Azure App Services, or a collection of on-premises servers.</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Each back-end pool has an associated load balancer that distributes work across the pool</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Web application firewall</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>web application firewall<ept id="p1">*</ept> (WAF) is an optional component that handles incoming requests before they reach a listener.</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The web application firewall checks each request for many common threats, based on the <bpt id="p1">*</bpt>Open Web Application Security Project<ept id="p1">*</ept> (OWASP).</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>These include:</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>SQL-injection</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Cross-site scripting</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Command injection</source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>HTTP request smuggling</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>HTTP response splitting</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Remote file inclusion</source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Bots, crawlers, and scanners</source>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>HTTP protocol violations and anomalies</source>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>OWASP has defined a set of generic rules for detecting attacks.</source>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>These rules are referred to as the Core Rule Set (CRS).</source>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The rule sets are under continuous review as attacks evolve in sophistication.</source>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source>WAF supports two rule sets, CRS 2.2.9 and CRS 3.0.</source>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source>CRS 3.0 is the default and more recent of these rule sets.</source>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If necessary, you can opt to select only specific rules in a rule set, targeting certain threats.</source>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Additionally, you can customize the firewall to specify which elements in a request to examine, and limit the size of messages to prevent massive uploads from overwhelming your servers.</source>
        </trans-unit><trans-unit id="150" translate="yes" xml:space="preserve">
          <source>WAF is enabled on your Application Gateway by selecting the <ph id="ph1">`WAF`</ph> tier when you create a gateway.</source>
        </trans-unit><trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Health probes</source>
        </trans-unit><trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Health probes are an important part in assisting the load balancer to determine which servers are available for load balancing in a back-end pool.</source>
        </trans-unit><trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Application Gateway uses a health probe to send a request to a server.</source>
        </trans-unit><trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If the server returns an HTTP response with a status code between 200 and 399, the server is deemed healthy.</source>
        </trans-unit><trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If you don't configure a health probe, Application Gateway creates a default probe that waits for 30 seconds before deciding that a server is unavailable.</source>
        </trans-unit><trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Application Gateway network requirements</source>
        </trans-unit><trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Application Gateway requires a virtual network in which to operate.</source>
        </trans-unit><trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You must create this virtual network and a dedicated subnet before setting up Application Gateway.</source>
        </trans-unit><trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Application Gateway uses a number of private addresses for internal use and for communicating with each instance if the gateway scales out. For example, If you plan on scaling out to four instances, create a /28 size subnet.</source>
        </trans-unit><trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If you're likely to scale to more instances, then create a bigger subnet.</source>
        </trans-unit><trans-unit id="161" translate="yes" xml:space="preserve">
          <source>You can expose the Application Gateway through a public IP address, or you can or keep it private by only giving it a private IP inside virtual network.</source>
        </trans-unit><trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This is useful if you have internal sites that you would like to use Application Gateway to provide load balancing.</source>
        </trans-unit><trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Application Gateway options</source>
        </trans-unit><trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You can create an Application Gateway on the <bpt id="p1">*</bpt>Standard<ept id="p1">*</ept> tier or the <bpt id="p2">*</bpt>WAF<ept id="p2">*</ept> tier.</source>
        </trans-unit><trans-unit id="165" translate="yes" xml:space="preserve">
          <source>You also have a choice of three sizes with varying performance, pricing, and scalability: Small, Medium, and Large.</source>
        </trans-unit><trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>Standard<ept id="p1">*</ept> and <bpt id="p2">*</bpt>WAF<ept id="p2">*</ept> tiers are available in two versions, V1 and V2.</source>
        </trans-unit><trans-unit id="167" translate="yes" xml:space="preserve">
          <source>V2 supports Azure availability zones, but is currently in preview.</source>
        </trans-unit><trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Application Gateway supports manual scaling and autoscaling.</source>
        </trans-unit><trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If you select autoscaling, Application Gateway will scale out and in automatically according to the application traffic.</source>
        </trans-unit><trans-unit id="170" translate="yes" xml:space="preserve">
          <source>You can limit the maximum and minimum number of instances of Application Gateway.</source>
        </trans-unit><trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Create and configure a gateway</source>
        </trans-unit><trans-unit id="172" translate="yes" xml:space="preserve">
          <source>You can create and configure Application Gateway using the Azure portal, Azure PowerShell, or the Azure CLI.</source>
        </trans-unit><trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For Azure CLI, use the <ph id="ph1">`az network application-gateway create`</ph> command to create a new gateway.</source>
        </trans-unit><trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If you prefer PowerShell, you can use the <ph id="ph1">`New-AzApplicationGateway`</ph> cmdlet.</source>
        </trans-unit><trans-unit id="175" translate="yes" xml:space="preserve">
          <source>You can also use the Azure portal to perform most operations.</source>
        </trans-unit><trans-unit id="176" translate="yes" xml:space="preserve">
          <source>You can examine and modify the configuration of the components in a gateway using the <ph id="ph1">`az network application-gateway http-listener`</ph>, <ph id="ph2">`az network application-gateway rule`</ph>, <ph id="ph3">`az network application-gateway address-pool`</ph>, <ph id="ph4">`az network application-gateway http-settings`</ph>, and <ph id="ph5">`az network application-gateway front-end-port`</ph> commands from the Azure CLI.</source>
        </trans-unit><trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Get-AzApplicationGateway*`</ph> and <ph id="ph2">`Set-AzApplicationGateway*`</ph> series of cmdlets provide the same operations for PowerShell.</source>
        </trans-unit><trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Let's create and configure an Application gateway for the motor vehicle department web sites we deployed.</source>
        </trans-unit></group></body></file></xliff>