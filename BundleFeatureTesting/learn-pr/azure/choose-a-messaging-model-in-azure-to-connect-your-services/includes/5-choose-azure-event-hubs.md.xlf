<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="5-choose-azure-event-hubs.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1931010" tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5-choose-azure-event-hubs.3ca28e503efb391eac4badb6bbc635e5cac37483.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc412359d6fe6ce15b2fe86069e41980acb2dd50</xliffext:ms.openlocfilehash><xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/24/2019</xliffext:ms.lasthandoff><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\choose-a-messaging-model-in-azure-to-connect-your-services\includes\5-choose-azure-event-hubs.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>There are certain applications that produce a massive number of events from almost as many sources.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>We often hear the term "Big Data" applied to these situations, and they require unique infrastructure to handle them.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Imagine you work for Contoso Aircraft Engines.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The engines your employer manufactures have hundreds of sensors.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Before an aircraft can be flown each morning, its engines are connected to a test harness and put through their paces.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Additionally, cached in-flight data is streamed when the aircraft is connected to ground equipment.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You want to use historic sensor data to find patterns in the sensor readings that indicate engine failure is likely to happen soon.</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You want the real-time sensor readings to be compared against these failure patterns.</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can then warn users in near real time if an engine is showing worrisome readings.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>What is Azure Event Hubs?</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Event Hubs is an intermediary for the publish-subscribe communication pattern.</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Unlike Event Grid, however, it is optimized for extremely high throughput, a large number of publishers, security, and resiliency.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>What is an Event Hub?</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Whereas Event Grid fits perfectly into the publish-subscribe pattern in that it simply manages subscriptions and routes communications to those subscribers, Event Hubs performs quite a few additional services.</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>These additional services make it look more like a service bus or message queue, than a simple event broadcaster.</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Partitions</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>As Event Hubs receives communications, it divides them into partitions.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Partitions are buffers into which the communications are saved.</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Because of the event buffers, events are not completely ephemeral, and an event isn't missed just because a subscriber is busy or even offline.</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The subscriber can always use the buffer to "catch up."</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>By default, events stay in the buffer for 24 hours before they automatically expire.</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The buffers are called partitions because the data is divided amongst them.</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Every event hub has at least two partitions, and each partition has a separate set of subscribers.</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Capture</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Event Hubs can send all your events immediately to Azure Data Lake or Azure Blob storage for inexpensive, permanent persistence.</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Authentication</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>All publishers are authenticated and issued a token.</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This means Event Hubs can accept events from external devices and mobile apps, without worrying that fraudulent data from pranksters could ruin our analysis.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Using Event Hubs</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Event Hubs has support for pipelining event streams to other Azure services.</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Using it with Azure Stream Analytics, for instance, allows complex analysis of data in near real time, with the ability to correlate multiple events and look for patterns.</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In this case, Stream Analytics would be considered a subscriber.</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For our aircraft engines, we'll set up our architecture so that Event Hubs will authenticate the communications from our engines.</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>We will then have it use capture to save all the data to Data Lake.</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Later, we can use all that data to retrain and improve our machine learning models.</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Finally, our event streams will be picked up by Stream Analytics subscribers.</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Stream Analytics will use our machine learning model to look for patterns in the sensor data that might indicate problems.</source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Because we have several partitions, and each engine sends all its data to only one partition, each instance of our Stream Analytics subscriber only need deal with a subset of our overall data.</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>It does not have to filter and correlate over all of it.</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Which service should I choose?</source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Just like our queue choice, selecting between these two event delivery services can seem tricky at first.</source>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Both support <bpt id="p1">*</bpt>At Least Once<ept id="p1">*</ept> semantics.</source>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Choose Event Hubs if:</source>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You need to support authenticating a large number of publishers.</source>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You need to save a stream of events to Data Lake or Blob storage.</source>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source>You need aggregation or analytics on your event stream.</source>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source>You need reliable messaging or resiliency.</source>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Otherwise, if you need a simple event publish-subscribe infrastructure, with trusted publishers (for instance, your own web server), you should choose Event Grid.</source>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Event Hubs lets you build a big data pipeline capable of processing millions of events per second with low latency.</source>
        </trans-unit><trans-unit id="150" translate="yes" xml:space="preserve">
          <source>It can handle data from concurrent sources and route it to a variety of stream-processing infrastructures and analytics services.</source>
        </trans-unit><trans-unit id="151" translate="yes" xml:space="preserve">
          <source>It enables real-time processing and supports repeated replay of stored raw data.</source>
        </trans-unit></group></body></file></xliff>