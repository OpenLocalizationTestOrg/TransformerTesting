<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="1-introduction.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1931010" tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1-introduction.d4bc394f002a0da14619873c254f3b6e0ce1b9ed.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">74a81db7c5794a5a768b21e45183b5aa2630ac26</xliffext:ms.openlocfilehash><xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/24/2019</xliffext:ms.lasthandoff><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\choose-a-messaging-model-in-azure-to-connect-your-services\includes\1-introduction.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Many applications consist of programs that run on several different computers or devices.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>In such distributed applications, messages must be sent between the components across networks and long distances.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Even on the same server or in the same data center, loosely coupled architectures require mechanisms for components to communicate.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Reliable messaging is often a critical problem.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Suppose you work at a software company that develops a music-sharing application.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Musicians can upload music they create to your platform by using a web front end or a mobile app.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>They can listen to and comment on other members' work.</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The application consists of a website that runs at your ISP, a mobile app that runs on users' mobile devices, a web API that runs in Azure, and an Azure SQL Database where data is stored.</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You have observed that at times of high demand, some music files are not successfully uploaded, and some comments are not posted.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Your testing shows that these issues are caused by dropped messages between front-end components and the web API.</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You plan to solve these issues by using one or more of the following technologies: Azure Storage queues, Azure Event Hubs, Azure Event Grid, and Azure Service Bus.</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Here, you will learn how to choose the right messaging technology in Azure for each communication task in a distributed application.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Learning objectives</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In this module, you will:</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Describe events and messages, and the challenges you can use them to solve in a distributed application.</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Identify scenarios in which Storage queue is the best messaging technology for an application.</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Identify scenarios in which Event Grid is the best messaging technology for an application.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Identify scenarios in which Event Hubs is the best messaging technology for an application.</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Identify scenarios in which Service Bus is the best messaging technology for an application.</source>
        </trans-unit></group></body></file></xliff>