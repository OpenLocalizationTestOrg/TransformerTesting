<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="5-exercise-optimistic-concurrency.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff"  tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5-exercise-optimistic-concurrency.c734b7.43287e7721c1c69300f67d345f27c78ac53ebd57.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">43287e7721c1c69300f67d345f27c78ac53ebd57</xliffext:ms.openlocfilehash><xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba7e452ac39d7f09a5646044b44de0e1cdc54982</xliffext:ms.sourcegitcommit><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\support-concurrency-blob-storage\includes\5-exercise-optimistic-concurrency.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>In the previous exercise, you saw how the newsroom chief only saw Reporter A's edit.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The app allowed reporters to overwrite Reporter B's story.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You'll implement the optimistic approach to resolving concurrency so that Reporter B doesn't lose their work.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In this exercise you will:</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Change the <ph id="ph1">`SimulateReporter`</ph> method to use an ETag</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Test the updated app</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Add optimistic concurrency to the existing code</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Open <bpt id="p1">**</bpt>Program.cs<ept id="p1">**</ept>:</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In the code editor, add the code to capture the current ETag value.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Scroll down to the <ph id="ph1">`SimulateReporter`</ph> method and find the line of code that reads <ph id="ph2">`Console.WriteLine($"{authorName} begins writing their story...");`</ph>.</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Immediately before this line, insert the following code:</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This modifies the simulated news editor application to record the ETag of the blob at the time it is read.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">`SimulateReporter`</ph>, change the call to <ph id="ph2">`UploadTextAsync`</ph> to use an access condition to confirm the ETag before saving the changes.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This modifies the simulated news editor application to enforce optimistic concurrency.</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Remove<ept id="p1">**</ept> the following code from the method:</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>and replace it with this code::</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`AccessCondition.GenerateIfMatchCondition(currentETag)`</ph> check asks blob storage to check the current value of the ETag for the report, if the two values match then the write operation will succeed.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If some other process has updated the blob storage, then the value for the ETag in Azure will be different, and a <ph id="ph1">`StorageException`</ph> will be raised.</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Save your changes (CTRL+S) and close the code editor (CTRL+Q).</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Test the new app</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In the Cloud Shell, build and run the app with this command.</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The results are:</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This time, when Reporter A has finished writing the story and tries to save their changes, the app doesn't let them.</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The save fails because the file has been changed by Reporter B since the last time they viewed it.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If you have been unable to complete this unit, you can find a fully working version in the OptimisticNewsEditor directory.</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can run the app with <ph id="ph1">`dotnet run`</ph>.</source>
        </trans-unit></group></body></file></xliff>