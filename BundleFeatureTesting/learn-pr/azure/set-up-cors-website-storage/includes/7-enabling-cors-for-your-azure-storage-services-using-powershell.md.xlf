<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="7-enabling-cors-for-your-azure-storage-services-using-powershell.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff"  tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7-enabling-cors-for-your-azure-storage-services-using-powershell.20ab50.307d91facfd35a9eb6abea22efa82bca4d1c2784.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">307d91facfd35a9eb6abea22efa82bca4d1c2784</xliffext:ms.openlocfilehash><xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba7e452ac39d7f09a5646044b44de0e1cdc54982</xliffext:ms.sourcegitcommit><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\set-up-cors-website-storage\includes\7-enabling-cors-for-your-azure-storage-services-using-powershell.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Using the REST API or the Azure CLI to configure CORS for Azure storage are two ways to configure CORS for your storage resources.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>However, in the utilities company scenario, one of your IT teams has extensive experience using PowerShell to manage their assets.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>With that in mind, you decide to examine how to enable CORS using PowerShell.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In this unit, you'll learn how to use PowerShell to enable CORS for Azure storage.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Enable CORS using PowerShell</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`Set-AzureStorageCORSRule`</ph> cmdlet to enable CORS rules for a storage account.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This cmdlet sets the CORS rules for a single type of Azure Storage service, and overwrites any existing rules.</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The storage service types are Blob, Table, Queue, and File.</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The format of this command is:</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The important parameters for this command are listed in :</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This parameter specifies an Azure Storage context.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To obtain a context, use the <ph id="ph1">`New-AzureStorageContext`</ph> cmdlet.</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This parameter specifies  an array of CORS rules to apply to the storage account.</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can retrieve the existing rules using the <ph id="ph1">`Get-AzureStorageCORSRule`</ph> cmdlet.</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This parameter specifies the Azure Storage service type for which this cmdlet assigns rules.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The acceptable values for this parameter are:</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Blob</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Table</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Queue</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>File</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The example below enables CORS for the blob storage account specified by <bpt id="p1">*</bpt><ph id="ph1">&amp;lt;</ph>account-name<ph id="ph2">&amp;gt;</ph><ept id="p1">*</ept>.</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The CORS rule permits HTTP GET and PUT requests from the <bpt id="p1">*</bpt>www.fabrikam.com<ept id="p1">*</ept> and <bpt id="p2">*</bpt>www.contoso.com<ept id="p2">*</ept> domains.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Another useful command is <ph id="ph1">`Get-AzureStorageCORSRule`</ph>, which allows you to view the CORS rules that have been set for a Storage service type.</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The following example lists the CORS rules for the same storage account that you used in the previous example:</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Clear CORS rules using PowerShell</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`Remove-AzureStorageCORSRule`</ph> cmdlet to remove the CORS rules for a storage account.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The format of this command is:</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The important parameters for this command are listed in :</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This parameter specifies an Azure Storage context.</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To obtain a context, use the <ph id="ph1">`New-AzureStorageContext`</ph> cmdlet.</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This parameter specifies the Azure Storage service type for which this cmdlet assigns rules.</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The acceptable values for this parameter are:</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Blob</source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Table</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Queue</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>File</source>
        </trans-unit></group></body></file></xliff>