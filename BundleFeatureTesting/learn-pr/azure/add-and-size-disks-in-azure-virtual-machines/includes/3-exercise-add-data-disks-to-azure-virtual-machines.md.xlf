<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="3-exercise-add-data-disks-to-azure-virtual-machines.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1931010" tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3-exercise-add-data-disks-to-azure-virtual-machines.a615b31c5b68b0d93f86e146a4d94b189f5a58b2.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6bdb8045fe7ee428cd73c4982b8c8555b091fe6d</xliffext:ms.openlocfilehash><xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/24/2019</xliffext:ms.lasthandoff><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\add-and-size-disks-in-azure-virtual-machines\includes\3-exercise-add-data-disks-to-azure-virtual-machines.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Your law firm is expanding its case load and you have been tasked with creating a new Linux web server to store critical documents from a variety of sources - clients, other law firms, and law enforcement offices.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The web server enables users to upload documents and store them on disk.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This exercise uses Linux as the example, but the basic process of creating VMs and adding disks is the same for Windows.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The primary difference would be in partitioning and formatting the disk.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>On Windows, you can connect to your VM over Remote Desktop and use the built-in Disk Management tools or deploy a PowerShell script that's similar to the Bash script you'll use here.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Your goal here is to create a Linux VM and attach a new virtual hard disk (VHD) named <bpt id="p1">**</bpt>uploadDataDisk1<ept id="p1">**</ept> to store the <ph id="ph1">`/uploads`</ph> directory.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Set Azure CLI default values</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The Azure CLI enables you to set default values so you don't have to repeat them each time you run a command.</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Here you'll specify the default Azure location, or region.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This is the location where your Azure VM will be placed.</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Ideally this would be close to your clients.</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In this case, select the closest region to you from the locations available to the Azure sandbox.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Run <ph id="ph1">`az configure`</ph> to set the default location you want to use.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Replace <bpt id="p1">**</bpt>eastus<ept id="p1">**</ept> with the location chosen in the step above.</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Set the default resource group name to the pre-configured resource group created for you through the Azure sandbox: <bpt id="p1">**</bpt><bpt id="p2">&lt;rgn&gt;</bpt>[sandbox resource group]<ept id="p2">&lt;/rgn&gt;</ept><ept id="p1">**</ept></source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Create a Linux VM</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Here you create a Linux VM to host your web server.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Run this <ph id="ph1">`az vm create`</ph> command to create an Ubuntu Linux VM.</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The VM's name is <bpt id="p1">**</bpt>support-web-vm01<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Its size is <bpt id="p1">**</bpt>Standard_DS2_v2<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The admin username is <bpt id="p1">**</bpt>azureuser<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In practice, this name can be whatever you like.</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`--generate-ssh-keys`</ph> argument generates an SSH keypair for you, enabling you to connect to your VM over SSH.</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The VM takes a few minutes to come up.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When the VM is ready, you see information about it in JSON format.</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Here's an example.</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In this lesson you're using this VM to learn how to manage disks.</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In practice, you might also install web server and other software and then run <ph id="ph1">`az vm open-port`</ph> to make the ports you need available to the outside world.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Add an empty data disk to your VM</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Here you'll create an empty data disk and attach it to your VM.</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Your data disk will initially be 64 GB in size.</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Later, you'll mount this disk to the <ph id="ph1">`/uploads`</ph> directory on your VM.</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For learning purposes you're creating the VM and data disk as separate steps.</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In practice, you can specify the <ph id="ph1">`--data-disk-sizes-gb`</ph> argument to the <ph id="ph2">`az vm create`</ph> command to add data disks when the VM is created.</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Run the following <ph id="ph1">`az vm disk attach`</ph> command to add a new empty disk to the VM.</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This command:</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Names the disk <bpt id="p1">**</bpt>uploadDataDisk1<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Set its size to be 64 GB.</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Specifies to use premium storage with local redundancy.</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To use the disk, you'll need to partition and format it.</source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You'll do that next.</source>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Initialize and format your data disk</source>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Your empty data drive needs to be initialized and formatted.</source>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The process to do that is the same as for a physical disk.</source>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For one-time tasks, you might manually connect to your VM over SSH and run the commands you need.</source>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To make the process more repeatable and less error-prone, you can use a Bash script (or a PowerShell script where available) that specifies the commands you need.</source>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Using a script to automate the process has an added benefit <ph id="ph1">&amp;ndash;</ph> your script serves as documentation for how the process is performed.</source>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Others can read your script to understand how the system is configured.</source>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If you need to change the process, you can simply modify your script and test it on a temporary scratch VM before you deploy your change to production.</source>
        </trans-unit><trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To automate the process in this lesson, you'll use the <bpt id="p1">_</bpt>Custom Script Extension<ept id="p1">_</ept>.</source>
        </trans-unit><trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The Custom Script Extension is an easy way to download and run scripts on your Azure VMs.</source>
        </trans-unit><trans-unit id="152" translate="yes" xml:space="preserve">
          <source>It's just one of the many ways you can configure the system once your VM is up and running.</source>
        </trans-unit><trans-unit id="153" translate="yes" xml:space="preserve">
          <source>You can store your scripts in Azure storage or in a public location such as GitHub.</source>
        </trans-unit><trans-unit id="154" translate="yes" xml:space="preserve">
          <source>You can run scripts manually or as part of a more automated deployment.</source>
        </trans-unit><trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Here, you'll run an Azure CLI command to download a pre-made Bash script from GitHub and execute it on your VM.</source>
        </trans-unit><trans-unit id="156" translate="yes" xml:space="preserve">
          <source>For learning purposes, here you'll also run a few commands on your VM to verify that the VM is configured as you expect.</source>
        </trans-unit><trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Run <ph id="ph1">`az vm show`</ph> to get your VM's public IP address and save the IP address as a Bash variable.</source>
        </trans-unit><trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Run the following <ph id="ph1">`ssh`</ph> command to run the <ph id="ph2">`lsblk`</ph> command on your VM over an SSH connection using the <ph id="ph3">`ipaddress`</ph> variable data you just created.</source>
        </trans-unit><trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Recall that <ph id="ph1">`azureuser`</ph> was the admin username we used when we created the VM.</source>
        </trans-unit><trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If you chose a different name, use that instead.</source>
        </trans-unit><trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Enter "yes" when prompted.</source>
        </trans-unit><trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The output of this command should look like the following.</source>
        </trans-unit><trans-unit id="163" translate="yes" xml:space="preserve">
          <source>You see the 64 GB drive, <ph id="ph1">`sdc`</ph>, that you just created.</source>
        </trans-unit><trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You see that it's not mounted.</source>
        </trans-unit><trans-unit id="165" translate="yes" xml:space="preserve">
          <source>That's because it's hasn't yet been initialized.</source>
        </trans-unit><trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Run the following <ph id="ph1">`az vm extension set`</ph> command to run the pre-made Bash script on your VM.</source>
        </trans-unit><trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The script modifies <ph id="ph1">`/etc/fstab`</ph>.</source>
        </trans-unit><trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Improperly modifying the <ph id="ph1">`/etc/fstab`</ph> file could result in an unbootable system.</source>
        </trans-unit><trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Always test configuration changes on a temporary scratch system before you deploy to production.</source>
        </trans-unit><trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Refer to your distribution's documentation to learn how to properly modify this file.</source>
        </trans-unit><trans-unit id="171" translate="yes" xml:space="preserve">
          <source>In production, we also recommend that you create a backup of this file so you can restore the configuration if needed.</source>
        </trans-unit><trans-unit id="172" translate="yes" xml:space="preserve">
          <source>While the command runs, you can <bpt id="p1">[</bpt>examine the Bash script<ept id="p1">](https://raw.githubusercontent.com/MicrosoftDocs/mslearn-add-and-size-disks-in-azure-virtual-machines/master/add-data-disk.sh?azure-portal=true)</ept> from a separate browser tab if you'd like.</source>
        </trans-unit><trans-unit id="173" translate="yes" xml:space="preserve">
          <source>To summarize, the script:</source>
        </trans-unit><trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Partitions the drive <ph id="ph1">`/dev/sdc`</ph>.</source>
        </trans-unit><trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Creates an ext4 filesystem on the drive.</source>
        </trans-unit><trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Create the <ph id="ph1">`/uploads`</ph> directory, which we use as our mount point.</source>
        </trans-unit><trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Attaches the disk to the mount point.</source>
        </trans-unit><trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Updates <ph id="ph1">`/etc/fstab`</ph> so that the drive is mounted automatically after the system reboots.</source>
        </trans-unit><trans-unit id="179" translate="yes" xml:space="preserve">
          <source>To verify the configuration, run the same <ph id="ph1">`ssh`</ph> command as you did previously to run the <ph id="ph2">`lsblk`</ph> command on your VM over an SSH connection.</source>
        </trans-unit><trans-unit id="180" translate="yes" xml:space="preserve">
          <source>You see that <ph id="ph1">`sdc/sdc1`</ph> is partitioned and mounted to the <ph id="ph2">`/uploads`</ph> directory as you expect.</source>
        </trans-unit><trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Some Linux kernels support TRIM to discard unused blocks on disks.</source>
        </trans-unit><trans-unit id="182" translate="yes" xml:space="preserve">
          <source>This feature is available on Azure disks and can save you money if you create large files and then delete them.</source>
        </trans-unit><trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Learn how to <bpt id="p1">[</bpt>turn this feature on<ept id="p1">](https://docs.microsoft.com/azure/virtual-machines/linux/attach-disk-portal#trimunmap-support-for-linux-in-azure?azure-portal=true)</ept> in the Azure documentation.</source>
        </trans-unit><trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Summary</source>
        </trans-unit><trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Here, you created a data disk and attached it to your VM.</source>
        </trans-unit><trans-unit id="186" translate="yes" xml:space="preserve">
          <source>You used the Custom Script Extension to run a pre-made Bash script on your VM to make the process more repeatable.</source>
        </trans-unit><trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The Bash script partitions, formats, and mounts your disk so that your web server can write to it.</source>
        </trans-unit><trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Now that you've prepared the data disk on your VM, let's explore a bit more about the various types of disks you can create.</source>
        </trans-unit><trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Your primary decision is whether to choose Standard or Premium storage.</source>
        </trans-unit></group></body></file></xliff>