<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="2-manage-blob-data-using-properties-and-metadata.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff"  tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2-manage-blob-data-using-properties-and-metadata.6e93b4.675173f3493806e3c126c6b83046bc6db46d03f2.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">675173f3493806e3c126c6b83046bc6db46d03f2</xliffext:ms.openlocfilehash><xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba7e452ac39d7f09a5646044b44de0e1cdc54982</xliffext:ms.sourcegitcommit><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\organize-blobs-properties-metadata\includes\2-manage-blob-data-using-properties-and-metadata.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Blobs in Azure Storage have various properties that you can use to classify the blob data, and you can also add your own custom metadata.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>As lead developer for Trey Research, you know there are several years of safety records in Azure blob storage.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You now need to provide ways for your users to find all the records from the research department that are ready for external audit.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You also want to set a flag on each document to indicate that it has been retrieved.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In this unit, you will compare the property types that you can retrieve from a blob.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You'll also learn how to use your own custom metadata to help manage blob data.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Overview</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>There are several types of Azure Blobs, and this module covers <bpt id="p1">**</bpt>Block<ept id="p1">**</ept> blobs.</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Blobs have properties that contain information about each blob, and they can also have metadata that contains additional information.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The names of properties are system-defined, whereas metadata consists of name-value pairs that are user-defined.</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Some properties are read-only, while others are read-write, and all metadata is user-defined.</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Properties and metadata are stored with the blob or container.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>So, if your storage is replicated, this information is also copied.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Properties</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Blob properties have system-defined names, and the values of properties are often set by system processes.</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The values of some blob properties are read-only (<bpt id="p1">*</bpt>derived<ept id="p1">*</ept>), system-generated information about a blob.</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For example, the <ph id="ph1">`LastModified`</ph> property of a blob is read-only.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The values of other properties are read-write (<bpt id="p1">*</bpt>user-defined<ept id="p1">*</ept>).</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example, you can specify the <ph id="ph1">`ContentType`</ph> property, which is useful when you are classifying your blobs.</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For instance, if you are storing movie files, you can set the <ph id="ph1">`ContentType`</ph> property to <ph id="ph2">`video/mp4`</ph>.</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The following list provides additional details about these types of properties:</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Read-write properties<ept id="p1">**</ept></source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Default properties<ept id="p1">**</ept>: These properties include the date the object was created or modified (<ph id="ph1">`LastModified`</ph>).</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>URI properties<ept id="p1">**</ept>: These properties are the locations of the primary and secondary storage for the container.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Other read-only properties include: <ph id="ph1">`BlobType`</ph>, <ph id="ph2">`RemainingDaysBeforePermanentDelete`</ph>, <ph id="ph3">`Length`</ph> and <ph id="ph4">`SnapshotTime`</ph>.</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Read-write properties<ept id="p1">**</ept></source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>These properties are used by clients when reading and writing blobs, and can be updated by applications.</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For example, you can specify the <ph id="ph1">`StreamMinimumReadSizeInBytes`</ph> and <ph id="ph2">`StreamWriteSizeInBytes`</ph> properties.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Metadata</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Blob metadata is user-defined information, consisting of name-value pairs, and only ASCII characters are allowed.</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Metadata can be returned in HTTP headers, so you must make sure that your metadata strings are acceptable in HTTP headers.</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You'll need to use URL encoding or Base64 encoding if any of your names or values are likely to contain non-ASCII characters.</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>There is no limit on length of metadata strings, although your web server may have a limit for total HTTP header length.</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For example, if you wanted to use metadata to classify your documents that are stored in blob storage, you might use this name-value scheme:</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>docType<ept id="p1">**</ept></source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>safety-report<ept id="p1">*</ept></source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>docType<ept id="p1">**</ept></source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>test-report<ept id="p1">*</ept></source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>docType<ept id="p1">**</ept></source>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>product-guide<ept id="p1">*</ept></source>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>docClass<ept id="p1">**</ept></source>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>public<ept id="p1">*</ept></source>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>docClass<ept id="p1">**</ept></source>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>confidential<ept id="p1">*</ept></source>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If you add metadata as files are uploaded to blob storage, they can be automatically indexed by Azure Search using the metadata to build the index.</source>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This can be useful for image files, where conventional content indexing can be difficult.</source>
        </trans-unit></group></body></file></xliff>