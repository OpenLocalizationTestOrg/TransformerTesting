# Archived Unit

Your company wants to test a new version of the application with a subset of users. You plan to deploy the new version of the application in a secondary App Service Web App, and route a small amount of traffic to the new version. If the new release works fine for a defined test period, you'll increase the volume of traffic and monitor it again until you reach a level where you have confidence in the new version. Once you get to that point, you can then deploy the updated version to the primary App Service Web App to complete a full roll-out.

To enable you to meet the above requirements, you'll learn how to use weighted average routing to direct application traffic to specific endpoints.

## Weighted routing

Recall from earlier that in the Weighted traffic-routing method, you assign a weight to each endpoint in the Traffic Manager profile configuration. For each DNS query received, Traffic Manager randomly chooses an available endpoint. The probability of choosing an endpoint is based on the weights assigned to all available endpoints.

In the example above, three endpoints are available to route traffic to. One has twice the weighting (**50**) of the other two (**25**). Traffic Manager randomly distributes the traffic using the weighting, so effectively around 50% of requests will go to the first endpoint. The other 50% will be split equally between the other endpoints.

![Example of Traffic Manager routing traffic to three endpoints depending on their weighting](../resources/6-weighted-example.png)

To complete the testing of the new version of the app, that endpoint will be given a smaller weighting. If 1% of requests should go to the new app, set its endpoint weighting to 1. All the other endpoints should have a value of 100.

## Geographic routing

A separate Chinese version of the App Service Web App needs to be released, and all Chinese traffic routed to that deployment. Your company is running a Chinese New Year marketing campaign that should only be seen in the China region, see how to use geo-fencing to direct traffic to specific endpoints, based on a users geographic location.

![Example of routing traffic to an endpoint for Chinese users and traffic from other locations to a separate endpoint](../resources/6-geographic-example.png)

Azure Traffic Manager **geographic** routing can be used to direct users to specific endpoints based on which geographic location their DNS query originates from. Geographic routing makes supporting scenarios where knowing a user's geographic region and routing them based on it possible. Other cases where this routing type can be used include following data sovereignty mandates, localization of content, and measuring traffic from different regions.

When a profile is configured for geographic routing, each endpoint associated with that profile needs to have a set of geographic regions assigned to it. A geographic region can be at following levels of granularity:

- **All (World)**: any region
- **Region**: for example, Africa, Middle East, or Australia/Pacific
- **Country/Region**: for example, Ireland, Peru, or Hong Kong
- **State/Province**: for example, USA-California, Australia-Queensland, or Canada-Alberta

> [!NOTE]
> The **State/Province** granularity level is supported only for states / provinces in Australia, Canada, and the USA.

Taking Washington as an example, you would select North America / Central America / Caribbean (**Regional grouping**) ➡ United States (**Country/Region**) ⮕ Washington (**State/Province**).

When a region, or a set of regions, are assigned to an endpoint any requests from those regions gets routed to that endpoint. Traffic Manager uses the source IP address of the DNS query to determine the region from which a user is querying from - usually the IP address of the local DNS resolver doing the query on behalf of the user.

To route your companies Chinese users to their version of the app, set up the endpoint in the Asia region, and set the country to China.

## Nested routing

If you needed to support both the above scenarios, you'll see that nesting Traffic Managers can satisfy all the requirements.

![A setup to solve the routing requirements of the units scenario](../media/6-nested-example.png)

The above shows how nesting Traffic Manager profiles correctly routes traffic for both requirements, a small percentage of traffic to a new app and a Chinese version of the app.

The primary Traffic Manager profile is configured to use geographical routing, with Chinese uses being directed to their endpoint. All the other regional traffic is routed to a nested Traffic Manager profile configured with weighted routing. The new app is hosted on the endpoint with a weighting of 1, and as the other endpoint is set to 100, the new app will receive approximately 1% of all non-chinese traffic.