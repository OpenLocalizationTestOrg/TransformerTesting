<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="2-install-application-insights-sdk.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1931010" tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2-install-application-insights-sdk.5494e03d10cb26339675c8948c9060612744821a.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">14eb98bd43763c061f95cae287519bdf71fca74b</xliffext:ms.openlocfilehash><xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/13/2019</xliffext:ms.lasthandoff><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\instrument-web-app-code-with-application-insights\includes\2-install-application-insights-sdk.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>To use the Application Insights SDK, you need to reference a package or library and add configuration and code to your app.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>In the example of the video-sharing app, stakeholders have authorized the use of the Application Insights SDK to get more information about the application.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In this unit, you'll learn about the Application Insights SDK and how to add it to an app.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>What is the Application Insights SDK?</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The Application Insights SDK is a software package you reference and use in your application's code.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The SDK hooks into the web application framework that powers your app and automatically captures detailed runtime information, including data about HTTP requests, system metrics, service dependencies, and exceptions.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>It also lets you add code to record information about events and metrics that are specific to the business domain of your app.</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The SDK sends this telemetry data to an Application Insights resource in Azure.</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The Application Insights service processes and aggregates the data into a form that's easy to query and visualize.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Use of the SDK is not limited to web applications.</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can instrument any kind of service or component for which you want to record telemetry, though most of the data that the SDK can record automatically is specific to web apps.</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>And the SDK isn't limited to applications that are deployed to Azure.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Application Insights architecture</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Why install the SDK?</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The Application Insights SDK provides these benefits:</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Comprehensive data collection<ept id="p1">**</ept>: Data like user retention, unique users, and unique sessions is available in Application Insights only when you use the Application Insights SDK.</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Custom telemetry<ept id="p1">**</ept>: With the SDK, you can add code to your application to capture events and metrics that are specific to your app and its business domain.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Advanced features<ept id="p1">**</ept>: Some Application Insights features are available only when you use the SDK.</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example, Live Metrics Stream lets you watch and drill down into metrics in real time.</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Local telemetry in Visual Studio<ept id="p1">**</ept>: Telemetry data from applications instrumented with the SDK can be viewed locally in Visual Studio when you run the app in the debugger.</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Azure App Service lets you enable Application Insights for an application without adding the SDK to your code.</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This feature, called <bpt id="p1">*</bpt>runtime instrumentation<ept id="p1">*</ept>, doesn't offer deep insight into your app the way the SDK can.</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Runtime instrumentation is also an Azure-specific feature and is available only for Windows-based web apps.</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The SDK can be used to instrument any application, service, or component running anywhere.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Customized insights</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When you configure and initialize the SDK in your code, it tracks the kinds of events and metrics that are common to all web applications, like request and response metrics, HTTP queue lengths, and performance counters like CPU and memory utilization.</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>But most applications will have domain-specific events and metrics that you'll be interested in.</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For your video sharing app, it would help to know something about how customers use the videos.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>How often do users watch the whole video?</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>How often do users stop the video before the end?</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>How often does buffering interrupt a video?</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>On average, how many videos are being viewed at the same time during each hour of the day?</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You can add code to your app that uses the SDK to record these events in Application Insights.</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You can then monitor these events and present summaries about them in Application Insights.</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>How to use the SDK</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Assuming you already have a web app and an Application Insights resource in Azure, to install the SDK in your web app project, you need to:</source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Reference the SDK in your app.</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Configure your app with the instrumentation key of your Application Insights resource.</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Initialize the SDK in code to begin generating telemetry.</source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The exact steps you'll need to take depends on the tools, programming language, and application framework you're using.</source>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>In this module, we'll complete these steps for an ASP.NET Core application from the command line.</source>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Install the SDK package</source>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The following <ph id="ph1">`dotnet`</ph> command adds a reference to the <ph id="ph2">`Microsoft.ApplicationInsights.AspNetCore`</ph> NuGet package to an ASP.NET Core app from the command line.</source>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This package includes the base Application Insights SDK and libraries that make it easy to use from ASP.NET Core applications.</source>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Configure the instrumentation key</source>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Every Application Insights resource in Azure is uniquely identified by a GUID <bpt id="p1">*</bpt>instrumentation key<ept id="p1">*</ept>.</source>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Applications that use the SDK to send telemetry data need to be configured with the instrumentation key of the Application Insights resource to which the data should be sent.</source>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve">
          <source>You can find the instrumentation key for an Application Insights resource in the Azure portal, in the overview panel of the resource.</source>
        </trans-unit><trans-unit id="150" translate="yes" xml:space="preserve">
          <source>You can also retrieve it via the Azure CLI by using this command:</source>
        </trans-unit><trans-unit id="151" translate="yes" xml:space="preserve">
          <source>After you have the key, the ASP.NET Core version of the SDK supports two methods of configuring it:</source>
        </trans-unit><trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Configuration file<ept id="p1">**</ept>: In the <ph id="ph1">`appsettings.json`</ph> file for your application, create a section called <ph id="ph2">`ApplicationInsights`</ph> and add a new configuration value called <ph id="ph3">`InstrumentationKey`</ph>, like so:</source>
        </trans-unit><trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Environment variable<ept id="p1">**</ept>: Create an environment variable called <ph id="ph1">`APPINSIGHTS_INSTRUMENTATIONKEY`</ph> that contains the value of the key.</source>
        </trans-unit><trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This value needs to be present in the environment when the application is started.</source>
        </trans-unit><trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For apps deployed to Azure App Service, you create an environment variable by configuring an application setting.</source>
        </trans-unit><trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If you enable runtime instrumentation in an App Service web app, Azure will automatically create the setting with the correct value.</source>
        </trans-unit><trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The best practice is to use a different instrumentation key and Application Insights resource for each environment in which your application runs to prevent unrelated telemetry from being grouped together.</source>
        </trans-unit><trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For this reason, it's often simpler to use an environment variable and include this configuration as part of the setup of your app's deployment environment.</source>
        </trans-unit><trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Initialize the SDK in code</source>
        </trans-unit><trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Finally, you must initialize Application Insights in your web app.</source>
        </trans-unit><trans-unit id="161" translate="yes" xml:space="preserve">
          <source>ASP.NET Core applications start up by calling <ph id="ph1">`CreateWebHostBuilder()`</ph> in <bpt id="p1">*</bpt>Program.cs<ept id="p1">*</ept>.</source>
        </trans-unit><trans-unit id="162" translate="yes" xml:space="preserve">
          <source>You can configure many aspects of the application and the runtime by chaining additional method calls here, including Application Insights.</source>
        </trans-unit><trans-unit id="163" translate="yes" xml:space="preserve">
          <source>A call to <ph id="ph1">`UseApplicationInsights()`</ph> will load your instrumentation key from configuration, trigger the SDK to automatically generate telemetry about many application events, and enable access to a <ph id="ph2">`TelemetryClient`</ph> object from controllers and other components for custom event and metric tracking.</source>
        </trans-unit><trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Here's what the relevant section of <bpt id="p1">*</bpt>Program.cs<ept id="p1">*</ept> will look like after you initialize Application Insights:</source>
        </trans-unit></group></body></file></xliff>