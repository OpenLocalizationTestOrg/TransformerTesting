<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="7-summary.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff"  tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7-summary.2a3f2b.ccb32e7b80be0604e7ab7a6c0723e6084bea0b92.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ccb32e7b80be0604e7ab7a6c0723e6084bea0b92</xliffext:ms.openlocfilehash><xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba7e452ac39d7f09a5646044b44de0e1cdc54982</xliffext:ms.sourcegitcommit><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\manage-secrets-with-azure-key-vault\includes\7-summary.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>In this module, you secured an app's secret configuration in Azure Key Vault.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Our app code authenticates to the vault with a managed identity and automatically loads the secrets from the vault into memory at startup.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>To cleanup your Cloud Shell storage, delete the <ph id="ph1">`KeyVaultDemoApp`</ph> directory.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Next steps</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If this was a real app, what would come next?</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Put all your app secrets in your vaults!</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>There's no longer any reason to have them in configuration files.</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Continue to develop the application.</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Your production environment is all set up, so for future deployments to it you don't need to repeat all the setup.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To support development, create a development-environment vault that contains secrets with the same names but different values.</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Grant permissions to the development team and configure the vault name in the app's development-environment configuration file.</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Configuration depends on your implementation: for ASP.NET Core, <ph id="ph1">`AddAzureKeyVault`</ph> will automatically detect local installations of Visual Studio and the Azure CLI and use Azure credentials configured in those applications to sign in and access the vault.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For Node.js, you can create a development-environment service principal with permissions to the vault and have the app authenticate using <ph id="ph1">`loginWithServicePrincipalSecret`</ph>.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Create additional environments for purposes like user acceptance testing.</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Separate vaults across different subscriptions and/or resource groups to isolate them.</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Grant access to other environment vaults to the appropriate people.</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Further reading</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Key Vault documentation<ept id="p1">](https://docs.microsoft.com/azure/key-vault/)</ept></source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>More about AddAzureKeyVault and its advanced options<ept id="p1">](https://docs.microsoft.com/aspnet/core/security/key-vault-configuration?view=aspnetcore-2.1&amp;tabs=aspnetcore2x)</ept></source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>This tutorial<ept id="p1">](https://docs.microsoft.com/azure/key-vault/key-vault-use-from-web-application)</ept> walks through using <ph id="ph1">`KeyVaultClient`</ph>, including manually authenticating it to Azure Active Directory using a client secret instead of using a managed identity.</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Managed identities for Azure resources token service documentation<ept id="p1">](https://docs.microsoft.com/azure/app-service/app-service-managed-service-identity#using-the-rest-protocol)</ept>, for implementing the authentication workflow yourself.</source>
        </trans-unit></group></body></file></xliff>