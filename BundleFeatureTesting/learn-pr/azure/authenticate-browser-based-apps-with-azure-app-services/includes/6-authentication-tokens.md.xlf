<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="6-authentication-tokens.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1931010" tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6-authentication-tokens.8a5660727d794b25a82af58449af2e6fd897158f.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a54439d00743f4361097968fbfb239a127f90950</xliffext:ms.openlocfilehash><xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/24/2019</xliffext:ms.lasthandoff><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\authenticate-browser-based-apps-with-azure-app-services\includes\6-authentication-tokens.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>As the web administrator for an online store, you have now determined that the authentication services provided by the App Service are a good fit for your company.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>However, you are concerned that your customers may have worries around data privacy, so you want to ensure that your apps do not collect unnecessary information.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You want to be sure that the authentication process is robust, but it is also easy to troubleshoot.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Your apps are written in a range of languages, including .NET languages, Node, and Python, and you need your developers to be able to programmatically determine the type of authentication that is active for the current browser session.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>We will take a look at how web apps can request user information during authentication, and how you can control this behavior.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You will also look at authentication tokens, how they are used, and how you can use code in your apps to check for, and respond to, these tokens.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Authentication tokens</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>An authentication or security token is a method for authenticating user requests to access resources.</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>After authenticating to an identity service, a token is generated, and this token is then presented to any secure resource that the user wants to access.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The resource checks with the identity service that the security token is valid before processing the user request.</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The token may include information on which resources the user is permitted to access.</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>As an analogy, a security token is a bit like an employee's security pass; the employee has to first pass security checks in order to obtain the pass (authenticate), and then presents the pass (token) to obtain access to particular rooms or workplace areas.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>At any time, security personnel may check back with the issuer of the pass, in order to confirm its validity.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>App Service Tokens</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The security tokens used by the Azure App Service are in <bpt id="p1">**</bpt>JSON Web Token<ept id="p1">**</ept> (JWT) format.</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>JWT is an open standard, and is used to create tokens that assert one or more <bpt id="p1">**</bpt>claims<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For example, if you are a web server administrator, when you authenticate to the server, a token might be generated that includes a claim <bpt id="p1">*</bpt>authenticated as server admin<ept id="p1">*</ept>. Your browser, or other client, then presents this token whenever it needs to assert or prove that it has <bpt id="p2">*</bpt>admin<ept id="p2">*</ept> authority.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To verify that tokens are legitimate, they are signed by the identity provider's private key; the resource that the user attempts to access will have the provider's public key, and can therefore check that the token has been issued by the provider.</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Because JWT tokens are text files, in JSON format, parts of the token may also be encrypted using these keys to protect their content.</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The App Service uses specific tokens for particular purposes, so there are distinct tokens for verifying a user ID (<bpt id="p1">**</bpt>ID token<ept id="p1">**</ept>), asserting access permissions (<bpt id="p2">**</bpt>access token<ept id="p2">**</ept>), and after a token has expired then been refreshed (<bpt id="p3">**</bpt>refresh token<ept id="p3">**</ept>).</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Token store</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The Azure App Service includes a <bpt id="p1">**</bpt>token store<ept id="p1">**</ept>, which can be used to hold tokens associated with your web app users.</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This store is enabled by default when you enable authentication with any provider.</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The token store caches tokens for use during the lifetime of an authenticated session only, and tokens are only accessible by the user that is associated with the token.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In order to make use of the token store, you need to include code in your web app so that the app can retrieve, store, and refresh tokens.</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The token store can be disabled, if your app doesn't use tokens.</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Claims and Headers</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In your web app, you might want to make use of the user claims within a token, such as <bpt id="p1">*</bpt>authenticated as admin<ept id="p1">*</ept>, <bpt id="p2">*</bpt>user principal name<ept id="p2">*</ept>, or <bpt id="p3">*</bpt>user email address<ept id="p3">*</ept>.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>One way to achieve this is through the HTTP request headers.</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For all supported language frameworks, the Azure App Service makes these claims available to your code by injecting them into the request headers; for example:</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You can view the available claims by using a web browser, and going to your app's <ph id="ph1">`/.auth/me`</ph> endpoint.</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You should now be able to see various elements in the token, including:</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>access_token</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>expires_on</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>provider_name</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>user_claims</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>user_id</source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If you expand <bpt id="p1">**</bpt>user_claims<ept id="p1">**</ept>, you'll see a list of the claims that have been returned; these claims might include:</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>nameidentifier</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>name</source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>givenname</source>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>surname</source>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>microsoft account: locale</source>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>microsoft account:ID</source>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>microsoft account: name</source>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For browser-based apps, your app code can also check for the existence of an <bpt id="p1">**</bpt>AppServiceAuthSession<ept id="p1">**</ept> cookie; this cookie is only set after a successful authentication.</source>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source>How you can use this information in your app depends on what app environment you are using.</source>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For example, when using Node.js, there are various JSON packages that you can use with your app to query header, token, and cookie information.</source>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If you are using .NET, or Python, you can use code to query authentication tokens.</source>
        </trans-unit><trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Procedures for Working with Authentication Tokens</source>
        </trans-unit><trans-unit id="151" translate="yes" xml:space="preserve">
          <source>There are several common procedures that you can use to help manage, test, and configure how your apps use authentication tokens.</source>
        </trans-unit><trans-unit id="152" translate="yes" xml:space="preserve">
          <source>View Authentication Token in a Browser</source>
        </trans-unit><trans-unit id="153" translate="yes" xml:space="preserve">
          <source>When using Node.js, you can return the authentication token by using the following app code:</source>
        </trans-unit><trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The token is now displayed in the browser:</source>
        </trans-unit><trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>JSON raw view of authentication token<ept id="p1">]</ept><bpt id="p2">(../media/6-raw-token.png "</bpt>JSON raw view of authentication token<ept id="p2">")</ept></source>
        </trans-unit><trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To view the token in an easier to read format, you can use a JSON viewer service, Visual Studio tools, or browser dev tools:</source>
        </trans-unit><trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>JSON formatted view of authentication token<ept id="p1">]</ept><bpt id="p2">(../media/6-formatted-token.png "</bpt>JSON formatted view of authentication token<ept id="p2">")</ept></source>
        </trans-unit><trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Configure Provider Scope</source>
        </trans-unit><trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The Microsoft authentication provider has a configurable scope, which enables you to select whether your app can request access to the following information:</source>
        </trans-unit><trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Basic profile info, including contacts list.</source>
        </trans-unit><trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Birthday info including birth day, month, and year.</source>
        </trans-unit><trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Calendars and events.</source>
        </trans-unit><trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Birth day and birth month of a user's contacts.</source>
        </trans-unit><trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Media, such as photos, videos, and audio, and their associated comments and tags.</source>
        </trans-unit><trans-unit id="165" translate="yes" xml:space="preserve">
          <source>OneDrive files that other users have shared with the user.</source>
        </trans-unit><trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Personal, preferred, and business email addresses.</source>
        </trans-unit><trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Personal, business, and mobile phone numbers.</source>
        </trans-unit><trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Postal addresses.</source>
        </trans-unit><trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Employer and work position information.</source>
        </trans-unit><trans-unit id="170" translate="yes" xml:space="preserve">
          <source>OneNote notebooks stored in OneDrive.</source>
        </trans-unit><trans-unit id="171" translate="yes" xml:space="preserve">
          <source>To protect user information from potential app access, either restrict the items in the scope, or turn off the scope completely.</source>
        </trans-unit><trans-unit id="172" translate="yes" xml:space="preserve">
          <source>To configure the Microsoft provider scope, so that your app can request additional user information, use the Azure portal, and select the <bpt id="p1">**</bpt>Microsoft<ept id="p1">**</ept> provider.</source>
        </trans-unit><trans-unit id="173" translate="yes" xml:space="preserve">
          <source>You can now select the <bpt id="p1">**</bpt>Scope<ept id="p1">**</ept> checkbox, and choose the elements that you app can request permission to access.</source>
        </trans-unit><trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Depending on how much information the user entered in their Microsoft Account profile, when you now view the JSON token, there may be additional items, such as <bpt id="p1">**</bpt>emailaddress<ept id="p1">**</ept> available.</source>
        </trans-unit><trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Use Dev Tools to View the AppServiceAuthSession Cookie</source>
        </trans-unit><trans-unit id="176" translate="yes" xml:space="preserve">
          <source>You can use your browser's developer tools to check for the AppServiceAuthSession cookie; this cookie is only set after successful authentication.</source>
        </trans-unit><trans-unit id="177" translate="yes" xml:space="preserve">
          <source>For Microsoft Edge, Internet Explorer, and Chrome, press F12 to open the developer tools console.</source>
        </trans-unit><trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Then, in the developer tools console, look for the cookies option; for example, in Microsoft Edge, cookies are an option when the network is selected.</source>
        </trans-unit><trans-unit id="179" translate="yes" xml:space="preserve">
          <source>When you successfully authenticate to the web app (<bpt id="p1">**</bpt>200 OK<ept id="p1">**</ept> message), the <bpt id="p2">**</bpt>AppServiceAuthSession<ept id="p2">**</ept> cookie will be created.</source>
        </trans-unit><trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Using developer tools in Microsoft Edge to check setting of AppServiceAuthSession Cookie<ept id="p1">]</ept><bpt id="p2">(../media/6-cookies.png "</bpt>AppServiceAuthSession Cookie<ept id="p2">")</ept></source>
        </trans-unit><trans-unit id="181" translate="yes" xml:space="preserve">
          <source>In this Unit, you looked at authentication tokens, how they are used, and how you can use code in your apps to check for, and respond to, these tokens.</source>
        </trans-unit><trans-unit id="182" translate="yes" xml:space="preserve">
          <source>You also looked at how web apps can request user information during authentication, and how you can restrict the amount of information an app can request to access.</source>
        </trans-unit><trans-unit id="183" translate="yes" xml:space="preserve">
          <source>In the next Unit, you'll work with your app to manage tokens, as well as managing the scope of user claims for the Microsoft provider.</source>
        </trans-unit></group></body></file></xliff>