<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="9-exercise-secure-webhook-payloads-with-secret.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff"  tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9-exercise-secure-webhook-payloads-with-secret.9beff5.f2a39853e851a84cc9ac5d44fb63d32a4e68ba62.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f2a39853e851a84cc9ac5d44fb63d32a4e68ba62</xliffext:ms.openlocfilehash><xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba7e452ac39d7f09a5646044b44de0e1cdc54982</xliffext:ms.sourcegitcommit><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\monitor-github-events-with-a-function-triggered-by-a-webhook\includes\9-exercise-secure-webhook-payloads-with-secret.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>In this exercise, you'll protect your webhook payload with a secret, and learn how to validate payloads from GitHub inside an Azure Function.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Get Key for your Azure Function</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In the Azure portal, return to your function app that you created from the first exercise in the module.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Expand <bpt id="p1">**</bpt>Functions<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Select the function that you created.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Manage<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Function Keys<ept id="p1">**</ept> section, click <bpt id="p2">**</bpt>Click to show<ept id="p2">**</ept> next to the <bpt id="p3">**</bpt>default<ept id="p3">**</ept> key.</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>It should look like:</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Under <bpt id="p1">**</bpt>Actions<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>Copy<ept id="p2">**</ept>.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Select you function again, and in the <bpt id="p1">**</bpt>index.js<ept id="p1">**</ept> JavaScript file, add a reference to the <bpt id="p2">**</bpt>crypto-js<ept id="p2">**</ept> library at the start of the file, above the <ph id="ph1">`module.exports`</ph> statement.</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In the body of the function, after the <ph id="ph1">`context.log`</ph> statement, add the following code.</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Replace *<ph id="ph1">\&lt;</ph>default key<ph id="ph2">\&gt;</ph> with the default key that you copied to the clipboard earlier:</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This code computes the hash of the key, using the same mechanism as GitHub.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Add <ph id="ph1">`sha1=`</ph> to the start of the key, so that it matches the format of <ph id="ph2">`X-Hub-Signature`</ph> in the request header.</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Add the following code to your function.</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Add the following code to retrieve the GitHub signature from the request header:</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Compare the two strings.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If they match, process the request, as follows:</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If the strings don't match, return an HTTP 401 (Unauthorized) response, with a message telling the sender that the signatures don't match.</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Save<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The completed function should look like this:</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Update the webhook secret</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Switch to your GitHub account in the GitHub portal.</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Select your repository.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Settings<ept id="p1">**</ept> tab.</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Webhooks<ept id="p1">**</ept> in the navigation panel.</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Edit<ept id="p1">**</ept> button next to your webhook.</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Secret<ept id="p1">**</ept> text box, enter the default key from your function.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>At the bottom of the page, click <bpt id="p1">**</bpt>Update webhook<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Test the webhook and the Azure Function</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>On the webhooks page, scroll down to the <bpt id="p1">**</bpt>Recent Deliveries<ept id="p1">**</ept> section.</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Select the latest delivery entry by clicking the ellipsis (...) button.</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Redeliver<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>Yes, redeliver this payload<ept id="p2">**</ept>.</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This action simulates you changing your Wiki page again.</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In the header, you'll see the <ph id="ph1">`X-Hub-Signature`</ph>.</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You'll also see that the response code is 200, indicating that the request was processed successfully.</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Test an invalid signature</source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In the GitHub portal, on the webhooks page, scroll up to the <bpt id="p1">**</bpt>Secret<ept id="p1">**</ept> test box and then click <bpt id="p2">**</bpt>Edit<ept id="p2">**</ept>.</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Enter a random string, scroll down, and then click <bpt id="p1">**</bpt>Update webhook<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The key used by the webhook should no longer match that expected by the Azure function.</source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Scroll down to the <bpt id="p1">**</bpt>Recent Deliveries<ept id="p1">**</ept> section.</source>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Select the latest delivery entry by clicking the ellipsis (...) button.</source>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Redeliver<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>Yes, redeliver this payload<ept id="p2">**</ept>.</source>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This time, you'll see that the response code is 401, indicating that the request was not authorized.</source>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Response<ept id="p1">**</ept> tab, and verify that the message "Signatures don't match" appears as the body of the response.</source>
        </trans-unit></group></body></file></xliff>