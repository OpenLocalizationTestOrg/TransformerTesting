<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="7-summary.yml" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff"  tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7-summary.c59c83.d8b5a187e9c4353b2b27407c2a3264e1b032bed7.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d8b5a187e9c4353b2b27407c2a3264e1b032bed7</xliffext:ms.openlocfilehash><xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba7e452ac39d7f09a5646044b44de0e1cdc54982</xliffext:ms.sourcegitcommit><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\build-cosmos-db-app-with-vscode\7-summary.yml</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve" uid="learn.cosmos-db-app-with-vscode.7-summary">
          <source>Summary</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve" uid="learn.cosmos-db-app-with-vscode.7-summary">
          <source>Summary</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve" uid="learn.cosmos-db-app-with-vscode.7-summary">
          <source>Summary</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve" uid="learn.cosmos-db-app-with-vscode.7-summary">
          <source>Check your knowledge</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve" uid="learn.cosmos-db-app-with-vscode.7-summary">
          <source>Suppose you are using Visual Studio Code to develop a .NET Core application that accesses Azure Cosmos DB.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve" uid="learn.cosmos-db-app-with-vscode.7-summary">
          <source>You need to include the connection string for your database in your application configuration.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve" uid="learn.cosmos-db-app-with-vscode.7-summary">
          <source>What is the most convenient way to get this information into your project?</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve" uid="learn.cosmos-db-app-with-vscode.7-summary">
          <source>Directly from Visual Studio Code</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve" uid="learn.cosmos-db-app-with-vscode.7-summary">
          <source>The Azure Cosmos DB extension lets you administer and create Azure Cosmos DB accounts and databases from within Visual Studio Code.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve" uid="learn.cosmos-db-app-with-vscode.7-summary">
          <source>From the Azure portal</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve" uid="learn.cosmos-db-app-with-vscode.7-summary">
          <source>The Azure portal does provide this information, but if you're already in Visual Studio Code, going to the portal is unlikely to be the most convenient choice.</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve" uid="learn.cosmos-db-app-with-vscode.7-summary">
          <source>Using the Azure CLI</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve" uid="learn.cosmos-db-app-with-vscode.7-summary">
          <source>While this is a good choice, especially since Visual Studio Code has a built-in terminal, it does require knowledge of the required commands.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve" uid="learn.cosmos-db-app-with-vscode.7-summary">
          <source>This may not be as convenient as the Visual Studio Code extension.</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve" uid="learn.cosmos-db-app-with-vscode.7-summary">
          <source>When working with Azure Cosmos DB's SQL API, which of these can be used to perform CRUD operations?</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve" uid="learn.cosmos-db-app-with-vscode.7-summary">
          <source>LINQ</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve" uid="learn.cosmos-db-app-with-vscode.7-summary">
          <source>LINQ and SQL are two of the valid methods for querying the SQL API.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve" uid="learn.cosmos-db-app-with-vscode.7-summary">
          <source>Apache Cassandra client libraries</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve" uid="learn.cosmos-db-app-with-vscode.7-summary">
          <source>Apache Cassandra libraries can work with Azure Cosmos DBâ€™s Cassandra API but not with the SQL API.</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve" uid="learn.cosmos-db-app-with-vscode.7-summary">
          <source>Azure Table Storage libraries</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve" uid="learn.cosmos-db-app-with-vscode.7-summary">
          <source>Azure Table Storage libraries can work with Azure Cosmos DB's Table API but not with the SQL API.</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve" uid="learn.cosmos-db-app-with-vscode.7-summary">
          <source>When working with the Azure Cosmos DB Client SDK's DocumentClient class, you use a NOSQL model.</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve" uid="learn.cosmos-db-app-with-vscode.7-summary">
          <source>How would you use this class to change the FirstName field of a Person Document from 'Ann' to 'Fran'?</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve" uid="learn.cosmos-db-app-with-vscode.7-summary">
          <source>Call UpdateDocumentAsync with FirstName=Fran</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve" uid="learn.cosmos-db-app-with-vscode.7-summary">
          <source>The DocumentClient class doesn't have an UpdateDocumentAsync method.</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve" uid="learn.cosmos-db-app-with-vscode.7-summary">
          <source>Updating a single field is not consistent with the document-style NOSQL approach.</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve" uid="learn.cosmos-db-app-with-vscode.7-summary">
          <source>Call UpsertDocumentAsync with an updated Person object</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve" uid="learn.cosmos-db-app-with-vscode.7-summary">
          <source>While this would work, it isn't the minimum necessary access to meet our requirements.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve" uid="learn.cosmos-db-app-with-vscode.7-summary">
          <source>Upsert operations will replace a document if its key already exists or add a new document if not.</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve" uid="learn.cosmos-db-app-with-vscode.7-summary">
          <source>We don't want to add a new one, so using this method risks introducing subtle, hard to track bugs.</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve" uid="learn.cosmos-db-app-with-vscode.7-summary">
          <source>Call ReplaceDocumentAsync with an updated Person object</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve" uid="learn.cosmos-db-app-with-vscode.7-summary">
          <source>ReplaceDocumentAsync will replace the existing document with the new one.</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve" uid="learn.cosmos-db-app-with-vscode.7-summary">
          <source>In this case we'd intend the old and new to be the same other than FirstName.</source>
        </trans-unit></group></body></file></xliff>