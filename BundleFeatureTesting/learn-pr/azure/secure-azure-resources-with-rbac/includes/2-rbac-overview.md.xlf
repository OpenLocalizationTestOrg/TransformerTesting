<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="2-rbac-overview.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1931010" tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2-rbac-overview.bdca02909c9201ec9fbd45854e76af96350cabe8.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3db7be79d14e78d181b65bf2329e23a77bca344b</xliffext:ms.openlocfilehash><xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/24/2019</xliffext:ms.lasthandoff><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\secure-azure-resources-with-rbac\includes\2-rbac-overview.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Suppose you need to manage access to resources in Azure for the development, engineering, and marketing teams.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>You’ve started to receive access requests, and you need to quickly learn how access management works for Azure resources.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>What is RBAC?</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Role-based access control (RBAC) is an authorization system built on Azure Resource Manager that provides fine-grained access management of resources in Azure.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Azure has lots of resources, but a few examples include virtual machines, websites, networks, and storage.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>What is role-based access control?</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>What can I do with RBAC?</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>RBAC allows you to grant access to Azure resources that you control.</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Here are some examples:</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Allow one user to manage virtual machines in a subscription and another user to manage virtual networks</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Allow a database administrator group to manage SQL databases in a subscription</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Allow a user to manage all resources in a resource group, such as virtual machines, websites, and subnets</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Allow an application to access all resources in a resource group</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>RBAC in the Azure portal</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In several areas in the Azure portal, you'll see a blade named <bpt id="p1">**</bpt>Access control (IAM)<ept id="p1">**</ept>, also known as identity and access management.</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>On this blade, you can see who has access to that area and their role.</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Using this same blade, you can grant or remove access.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The following shows an example of the Access control (IAM) blade for a resource group.</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In this example, Alain Charon has been assigned the Backup Operator role for this resource group.</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Screenshot of the Azure portal showing the Access control-Role assignment blade with the Backup operator section highlighted</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>How does RBAC work?</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You control access to resources using RBAC by creating role assignments, which control how permissions are enforced.</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To create a role assignment, you need three elements: a security principal, a role definition, and a scope.</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You can think of these elements as "who", "what", and "where".</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>1. Security principal (who)</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>security principal<ept id="p1">*</ept> is just a fancy name for a user, group, or application that you want to grant access to.</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An illustration showing security principal including user, group, and service principal.</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>2. Role definition (what you can do)</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>role definition<ept id="p1">*</ept> is a collection of permissions.</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>It's sometimes just called a role.</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A role definition lists the permissions that can be performed, such as read, write, and delete.</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Roles can be high-level, like Owner, or specific, like Virtual Machine Contributor.</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>An illustration listing different built-in and custom roles with zoom-in on the definition for the contributor role.</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Azure includes several built-in roles that you can use.</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The following lists four fundamental built-in roles:</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Owner - Has full access to all resources, including the right to delegate access to others.</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Contributor - Can create and manage all types of Azure resources, but can’t grant access to others.</source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Reader - Can view existing Azure resources.</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>User Access Administrator - Lets you manage user access to Azure resources.</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If the built-in roles don't meet the specific needs of your organization, you can create your own custom roles.</source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>3. Scope (where)</source>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Scope<ept id="p1">*</ept> is where the access applies to.</source>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This is helpful if you want to make someone a Website Contributor, but only for one resource group.</source>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In Azure, you can specify a scope at multiple levels: management group, subscription, resource group, or resource.</source>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Scopes are structured in a parent-child relationship.</source>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source>When you grant access at a parent scope, those permissions are inherited by the child scopes.</source>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, if you assign the Contributor role to a group at the subscription scope, that role is inherited by all resource groups and resources in the subscription.</source>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>An illustration showing a hierarchical representation of different Azure levels to apply scope.</source>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The hierarchy, starting with the highest level, is in this order: Management group, subscription, resource group, and resource.</source>
        </trans-unit><trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Role assignment</source>
        </trans-unit><trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Once you have determined the who, what, and where, you can combine those elements to grant access.</source>
        </trans-unit><trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>role assignment<ept id="p1">*</ept> is the process of binding a role to a security principal at a particular scope, for the purpose of granting access.</source>
        </trans-unit><trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To grant access, you create a role assignment.</source>
        </trans-unit><trans-unit id="154" translate="yes" xml:space="preserve">
          <source>To revoke access, you remove a role assignment.</source>
        </trans-unit><trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The following example shows how the Marketing group has been assigned the Contributor role at the sales resource group scope.</source>
        </trans-unit><trans-unit id="156" translate="yes" xml:space="preserve">
          <source>An illustration showing a sample role assignment process for Marketing group, which is a combination of security principal, role definition, and scope.</source>
        </trans-unit><trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The Marketing group falls under the Group security principal and has  a Contributor role assigned for  the Resource group scope.</source>
        </trans-unit><trans-unit id="158" translate="yes" xml:space="preserve">
          <source>RBAC is an allow model</source>
        </trans-unit><trans-unit id="159" translate="yes" xml:space="preserve">
          <source>RBAC is an allow model.</source>
        </trans-unit><trans-unit id="160" translate="yes" xml:space="preserve">
          <source>What this means is that when you are assigned a role, RBAC allows you to perform certain actions, such as read, write, or delete.</source>
        </trans-unit><trans-unit id="161" translate="yes" xml:space="preserve">
          <source>So, if one role assignment grants you read permissions to a resource group and a different role assignment grants you write permissions to the same resource group, you will have write permissions on that resource group.</source>
        </trans-unit><trans-unit id="162" translate="yes" xml:space="preserve">
          <source>RBAC has something called <ph id="ph1">`NotActions`</ph> permissions.</source>
        </trans-unit><trans-unit id="163" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`NotActions`</ph> is not a deny rule – it is simply a convenient way to create a set of allowed permissions when specific permissions need to be excluded.</source>
        </trans-unit><trans-unit id="164" translate="yes" xml:space="preserve">
          <source>In this unit, you learned the basics of how RBAC works.</source>
        </trans-unit><trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Now that you have the RBAC fundamentals out of the way, you can get your hands dirty by starting to use RBAC.</source>
        </trans-unit><trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The easiest way to get started is to use the Azure portal.</source>
        </trans-unit><trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The rest of this module has you perform hands-on exercises related to RBAC.</source>
        </trans-unit></group></body></file></xliff>