<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="2-create-a-web-app-in-the-azure-portal.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1931010" tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2-create-a-web-app-in-the-azure-portal.70195a4971bdfaa4db0eb860a41dafce939f7a11.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0f50918fe26fe619d72b41e636d21c1c915ed0d3</xliffext:ms.openlocfilehash><xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/24/2019</xliffext:ms.lasthandoff><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\host-a-web-app-with-azure-app-service\includes\2-create-a-web-app-in-the-azure-portal.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Here, you'll learn how to create an Azure App Service web app using the Azure portal.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Why use the Azure portal?</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The first step in hosting your web application is to create a web app (an App Service app) inside your Azure subscription.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>There are several ways you can create a web app.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can use the Azure portal, the Azure CLI, a script, or an IDE.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Here, we are going to use the portal because it's a graphical experience, which makes it a great learning tool.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The portal helps you discover available features, add additional resources, and customize existing resources.</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>What is Azure App Service?</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Azure App Service is a fully managed computing platform within the Azure environment that is optimized for hosting web apps, REST APIs, and mobile back ends.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This platform as a service (PaaS) offered by Microsoft Azure allows you to focus on the build side of things while Azure takes care of the infrastructure to run and scale your applications.</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>How to create a web app</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When it's time to host your own app, you visit the Azure portal and create a <bpt id="p1">**</bpt>Web App<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>By creating a <bpt id="p1">**</bpt>Web App<ept id="p1">**</ept> in the Azure portal, you are actually creating a set of hosting resources in App Service, which you can use to host any web-based application that is supported by Azure, whether it be ASP.NET Core, Node.js, PHP, etc. The figure below shows how easy it is to configure the framework/language used by the app.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Screenshot of the application settings to configure the web application</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The Azure portal provides a template to create a web app.</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This template requires the following fields:</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>App name<ept id="p1">**</ept>: The name of the web app.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Subscription<ept id="p1">**</ept>: A valid and active subscription.</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Resource group<ept id="p1">**</ept>: A valid resource group.</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The sections below explain in detail what a resource group is.</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>OS<ept id="p1">**</ept>: The operating system.</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The options are: Windows, Linux, and Docker containers.</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>On Windows, you can host any type of application from a variety of technologies.</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The same applies to Linux hosting, though on Linux, any ASP.NET apps must be ASP.Net Core on the .NET Core framework.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The final option is Docker containers, where you can deploy your containers directly over containers hosted and maintained by Azure.</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>App Service plan/location<ept id="p1">**</ept>: A valid Azure App Service plan.</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The sections below explain in detail what an App Service plan is.</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Applications Insights<ept id="p1">**</ept>: You can turn on the Azure Application Insights option and benefit from the monitoring and metric tools that the Azure portal offers to help you keep an eye on the performance of your apps.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The Azure portal gives you the upper hand in managing, monitoring, and controlling your web app through the many available tools.</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Deployment slots</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Using the Azure portal, you can easily add <bpt id="p1">**</bpt>deployment slots<ept id="p1">**</ept> to an App Service web app.</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For instance, you can create a <bpt id="p1">**</bpt>staging<ept id="p1">**</ept> deployment slot where you can push your code to test on Azure.</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Once you are happy with your code, you can easily <bpt id="p1">**</bpt>swap<ept id="p1">**</ept> the staging deployment slot with the production slot.</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You do all this with a few simple mouse clicks in the Azure portal.</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Screenshot of the staging deployment slot to test the deployments</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Continuous integration/deployment support</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The Azure portal provides out-of-the-box continuous integration and deployment with Azure DevOps, GitHub, Bitbucket, Dropbox, OneDrive, or a local Git repository on your development machine.</source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Connect your web app with any of the above sources and App Service will do the rest for you by auto-syncing code and any future changes on the code into the web app.</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Furthermore, with Azure DevOps, you can define your own build and release process that compiles your source code, runs the tests, builds a release, and finally deploys the release into your web app every time you commit the code.</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>All that happens implicitly without any need to intervene.</source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Screenshot to setup deployment option and choose source for the deployment source code</source>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Integrated Visual Studio publishing and FTP publishing</source>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In addition to being able to set up continuous integration/deployment for your web app, you can always benefit from the tight integration with Visual Studio to publish your web app to Azure via Web Deploy technology.</source>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Also, Azure supports FTP, although you are better off not using FTP for publishing because it lacks some capability in Web Deploy to pick and choose only those files that were changed or added, and not just publish everything to Azure!</source>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Built-in auto scale support (automatic scale-out based on real-world load)</source>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Baked into the web app is the ability to scale up/down or scale out. Depending on the usage of the web app, you can scale your app up/down by increasing/decreasing the resources of the underlying machine that is hosting your web app.</source>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Resources can be number of cores or the amount of RAM available.</source>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Scaling out, on the other hand, is the ability to increase the number of machine instances that are running your web app.</source>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve">
          <source>What is a resource group?</source>
        </trans-unit><trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A resource group is a method of grouping interdependent resources and services such as virtual machines, web apps, databases, and more for a given application and environment.</source>
        </trans-unit><trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Think of it as a <bpt id="p1">**</bpt>folder<ept id="p1">**</ept>, a place to group elements of your app.</source>
        </trans-unit><trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Resource groups allow you to easily manage and delete resources.</source>
        </trans-unit><trans-unit id="153" translate="yes" xml:space="preserve">
          <source>They also provide a way to monitor, control access, provision, and manage billing for collections of resources that are required to run an application or are used by a client.</source>
        </trans-unit><trans-unit id="154" translate="yes" xml:space="preserve">
          <source>What is an App Service plan?</source>
        </trans-unit><trans-unit id="155" translate="yes" xml:space="preserve">
          <source>An App Service plan is a set of physical resources and capacity available to deploy your App Service apps into.</source>
        </trans-unit><trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The Azure portal provides a template to create a new App Service plan.</source>
        </trans-unit><trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This template requires the following basic information:</source>
        </trans-unit><trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Region (West US, Central US, North Europe, etc.)</source>
        </trans-unit><trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Scale count (one, two, three instances, etc.)</source>
        </trans-unit><trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Instance size (Small, Medium, or Large)</source>
        </trans-unit><trans-unit id="161" translate="yes" xml:space="preserve">
          <source>SKU, or pricing tier (Free, Shared, Basic, Standard, Premium, PremiumV2, and Isolated)</source>
        </trans-unit><trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Web apps, mobile apps, and API apps hosted in Azure App Service, as well as Azure Functions, all run in an App Service plan.</source>
        </trans-unit><trans-unit id="163" translate="yes" xml:space="preserve">
          <source>While you can deploy an unlimited number of applications into an App Service plan, the number you use greatly depends on the types of applications deployed and their required resources in CPU utilization.</source>
        </trans-unit><trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You can always use your App Service plan in the Azure portal to visualize your CPU and memory utilization to help determine your needs for scaling or moving applications into another App Service plan.</source>
        </trans-unit></group></body></file></xliff>