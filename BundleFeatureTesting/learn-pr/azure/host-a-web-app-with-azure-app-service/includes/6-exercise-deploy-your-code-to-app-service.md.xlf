<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="6-exercise-deploy-your-code-to-app-service.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1931010" tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6-exercise-deploy-your-code-to-app-service.bf01def662459934a6341dad72b5335c0534919b.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc2844966e6f58d6af51ba6648cf151e28f83c73</xliffext:ms.openlocfilehash><xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/24/2019</xliffext:ms.lasthandoff><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\host-a-web-app-with-azure-app-service\includes\6-exercise-deploy-your-code-to-app-service.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>In this unit, you'll deploy your web application to App Service.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Use a local Git repository as your deployment option</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Next, we'll configure App Service for Git deployment.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This will enable us to deploy new versions of our application by pushing our code to a Git endpoint in Azure.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In the overview page for your App Service web app, click the <bpt id="p1">**</bpt>Deployment Center<ept id="p1">**</ept> menu item on the left-hand navigation.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Click on <bpt id="p1">**</bpt>Local Git<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Continue<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Click on <bpt id="p1">**</bpt>App Service Kudu build server<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Continue<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Review your settings, then click <bpt id="p1">**</bpt>Finish<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Create deployment credentials</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Before you can deploy with Git, App Service requires you to set up a username/password that can be used to authenticate from the Git client.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Deployment Credentials<ept id="p1">**</ept> button.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Click on <bpt id="p1">**</bpt>User Credentials<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If not already populated, set the <bpt id="p1">**</bpt>Username<ept id="p1">**</ept> field.</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This does not have to be the same as your Azure account username.</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Enter a <bpt id="p1">**</bpt>Password<ept id="p1">**</ept> of your choice, and then confirm your password.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Make sure you don't forget your username and password!</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You will need them later when we start uploading and deploying our code to Azure.</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Click on <bpt id="p1">**</bpt>Save Credentials<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Take note of the <bpt id="p1">**</bpt>Git Clone Uri<ept id="p1">**</ept>, which is the Azure Git repository URL that you will use as a <bpt id="p2">**</bpt>remote<ept id="p2">**</ept> for your local application code repository.</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Set up Git on Cloud Shell</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Git is already installed Azure Cloud Shell but you'll want to set your username and email for your cloud shell account.</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In the Cloud Shell on the right, type the following commands, replacing the <ph id="ph1">`[your name]`</ph> and <ph id="ph2">`[your email]`</ph> placeholders with your own name and email (without the braces):</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To verify that your information has been recorded by Git, type the following command:</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You should be seeing the following, with your name and email shown:</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Initialize a local Git repository for your code</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To start using Git, you need to initialize a local Git repository for your .NET Core application code.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Make sure you are in the project folder you created earlier.</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Initialize a new Git repository by issuing the following command:</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If the command is successful, you receive a message like the following:</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Stage all the application files to Git.</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The next step is to let Git know about your application files.</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Do that by adding all the files of the working directory so that they get <bpt id="p1">**</bpt>staged<ept id="p1">**</ept> by Git.</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Type the following command:</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The command above adds all files, represented by the ".", to the staging state of Git.</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Now, you need to commit your changes to Git.</source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Once you stage the files with Git, you need to commit your files to the <bpt id="p1">**</bpt>Git commit history<ept id="p1">**</ept> on your local machine.</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You do that by typing the following command:</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`commit`</ph> command accepts the <ph id="ph2">`-m`</ph> argument to include a message with the commit you are creating.</source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Later on, when you push your code to Azure, you will be able to see the same message stored with this particular commit.</source>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Add a remote for the local Git repository</source>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>At this point, you have successfully initialized a new local Git repository.</source>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In addition, you've committed all of your application files to Git.</source>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>What remains is to add a <bpt id="p1">**</bpt>remote<ept id="p1">**</ept> to connect your local Git repository to that hosted on Azure.</source>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To do so, you need to:</source>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Copy the <bpt id="p1">**</bpt>Git clone url<ept id="p1">**</ept> that you saw above.</source>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Once copied, you go back to the <bpt id="p1">**</bpt>Terminal<ept id="p1">**</ept> window and issue the following Git command with your url:</source>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The above Git command connects your local Git repository to the one hosted on Azure, where <ph id="ph1">`[your-username]`</ph> is the username that you specified when you created your deployment credentials, and <ph id="ph2">`[your-appname]`</ph> is the name of your App Service web app.</source>
        </trans-unit><trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Now you can deploy your code by pushing to it.</source>
        </trans-unit><trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To verify the above command, type the following Git command:</source>
        </trans-unit><trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The command above generates the following output:</source>
        </trans-unit><trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Push your code to Azure</source>
        </trans-unit><trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Now that you have your local Git repository hooked to the remote Git repository on Azure, you will develop and build the app, and then push your application code to Azure.</source>
        </trans-unit><trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Type the following Git command to push your <bpt id="p1">**</bpt>master<ept id="p1">**</ept> branch to the remote Git repository on Azure:</source>
        </trans-unit><trans-unit id="156" translate="yes" xml:space="preserve">
          <source>You will be prompted to enter the password that you noted from the <bpt id="p1">**</bpt>Deployment Credentials<ept id="p1">**</ept> section above.</source>
        </trans-unit><trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Enter your password and hit Enter.</source>
        </trans-unit><trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Git starts uploading your committed files to the Azure remote Git repository.</source>
        </trans-unit><trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Verify the code is uploaded to Azure</source>
        </trans-unit><trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Switch back to the Azure portal.</source>
        </trans-unit><trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Click on the <bpt id="p1">**</bpt>All Resources<ept id="p1">**</ept> menu item on the left-side navigation.</source>
        </trans-unit><trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The Azure portal navigates you to the list of all resources created on Azure so far.</source>
        </trans-unit><trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Click on your web app.</source>
        </trans-unit><trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Once you arrive to the overview page, go to <bpt id="p1">**</bpt>Deployment Center<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="165" translate="yes" xml:space="preserve">
          <source>You will see that your first commit that you have locally on your machine is now uploaded to the Azure portal.</source>
        </trans-unit><trans-unit id="166" translate="yes" xml:space="preserve">
          <source>When you push your code to the remote Git repository in App Service, Azure records this operation.</source>
        </trans-unit><trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Every time you push your code to Azure, you will see a new record, together with the commit message (the string that you supply with the <ph id="ph1">`-m`</ph> argument) that you type when committing your changes.</source>
        </trans-unit><trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><ph id="ph1">![</ph>Screenshot of the Azure portal showing a recent Git repo deployment in the Development options page.<ept id="p1">](../media/7-staging-deployment-slot-after-uploading-files.png)**</ept></source>
        </trans-unit><trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Let's visit the application URL.</source>
        </trans-unit><trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Navigate back to the <bpt id="p1">**</bpt>Overview<ept id="p1">**</ept> page of the web app and click <bpt id="p2">**</bpt>Browse<ept id="p2">**</ept> to open the app in a new browser tab.</source>
        </trans-unit><trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Screenshot showing a web browser view of the staging deployment slot web site.</source>
        </trans-unit><trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Congratulations!</source>
        </trans-unit><trans-unit id="173" translate="yes" xml:space="preserve">
          <source>You have successfully hosted your application on App Service!</source>
        </trans-unit><trans-unit id="174" translate="yes" xml:space="preserve">
          <source>There are two primary ways to upload a <bpt id="p1">**</bpt>.zip<ept id="p1">**</ept> file to an App Service web app.</source>
        </trans-unit><trans-unit id="175" translate="yes" xml:space="preserve">
          <source>First, you can deploy a zipped website up to App Service using a dedicated built-in web page.</source>
        </trans-unit><trans-unit id="176" translate="yes" xml:space="preserve">
          <source>If you navigate to <ph id="ph1">`https://&lt;app_name&gt;.scm.azurewebsites.net/ZipDeployUI`</ph> you are shown a site you can drag/drop the local <bpt id="p1">**</bpt>.zip<ept id="p1">**</ept> file and upload it to your server.</source>
        </trans-unit><trans-unit id="177" translate="yes" xml:space="preserve">
          <source>You need to sign in with the same Azure credentials used to create the site in this case.</source>
        </trans-unit><trans-unit id="178" translate="yes" xml:space="preserve">
          <source>This approach is similar to using FTP to upload to the storage folder mapped to the website host.</source>
        </trans-unit><trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The second approach which we'll use here is the command line.</source>
        </trans-unit><trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The Azure CLI includes the <ph id="ph1">`webapp deployment`</ph> command to upload a ZIP file that contains all the files for the website.</source>
        </trans-unit><trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Use the following command to upload your zip file to your created website.</source>
        </trans-unit><trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Make sure to replace the <ph id="ph1">`&lt;app_name&gt;`</ph> and .zip filename:</source>
        </trans-unit><trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This will respond with a JSON block with the details about the transfer.</source>
        </trans-unit><trans-unit id="184" translate="yes" xml:space="preserve">
          <source>When the command finishes running, open a new browser tab and navigate to <ph id="ph1">`https://&lt;app_name&gt;.azurewebsites.net`</ph>.</source>
        </trans-unit><trans-unit id="185" translate="yes" xml:space="preserve">
          <source>You'll see the "Hello World!"</source>
        </trans-unit><trans-unit id="186" translate="yes" xml:space="preserve">
          <source>message from your app <ph id="ph1">&amp;mdash;</ph> you've deployed successfully!</source>
        </trans-unit><trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Configure deployment credentials</source>
        </trans-unit><trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Most App Service deployment techniques, including the one we'll use here, require a username and password that are separate from your Azure login.</source>
        </trans-unit><trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Every web app comes preconfigured with its own username and a password that can be reset to a new random value, but can't be changed to something you choose.</source>
        </trans-unit><trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Instead of finding those credentials for each one of your apps and storing them somewhere, you can use an App Service feature called User Deployment Credentials to create your own username and password.</source>
        </trans-unit><trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The values you choose will work for deployments on <bpt id="p1">*</bpt>all<ept id="p1">*</ept> App Service web apps that you have permissions to, including new web apps that you create in the future.</source>
        </trans-unit><trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The username and password you select are tied to your Azure login and intended only for your use, so don't share them with others.</source>
        </trans-unit><trans-unit id="193" translate="yes" xml:space="preserve">
          <source>You can change both the username and password at any time.</source>
        </trans-unit><trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The easiest way to create deployment credentials is from the Azure CLI.</source>
        </trans-unit><trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Run the following command in the Cloud Shell to set them up, substituting <ph id="ph1">`&lt;username&gt;`</ph> and <ph id="ph2">`&lt;password&gt;`</ph> with values you choose.</source>
        </trans-unit><trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Deploy the application package with wardeploy</source>
        </trans-unit><trans-unit id="197" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Wardeploy<ept id="p1">**</ept> is an App Service deployment mechanism specifically designed for deploying WAR web application package files to Java web apps.</source>
        </trans-unit><trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Wardeploy is part of the Kudu REST API: an administrative service interface, available on all App Service web apps, that can be accessed over HTTP.</source>
        </trans-unit><trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The simplest way to use wardeploy is with the <ph id="ph1">`curl`</ph> HTTP utility from the command line.</source>
        </trans-unit><trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Run the following commands to deploy your app with wardeploy.</source>
        </trans-unit><trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Replace <ph id="ph1">`&lt;username&gt;`</ph> and <ph id="ph2">`&lt;password&gt;`</ph> with the Deployment User username and password you created above, and replace <ph id="ph3">`&lt;web_app_name&gt;`</ph> with the name of your web app.</source>
        </trans-unit><trans-unit id="202" translate="yes" xml:space="preserve">
          <source>When the command finishes running, open a new browser tab and navigate to <ph id="ph1">`https://&lt;web_app_name&gt;.azurewebsites.net`</ph>.</source>
        </trans-unit><trans-unit id="203" translate="yes" xml:space="preserve">
          <source>You'll see the "Hello World!"</source>
        </trans-unit><trans-unit id="204" translate="yes" xml:space="preserve">
          <source>message from your app <ph id="ph1">&amp;mdash;</ph> you've deployed successfully!</source>
        </trans-unit></group></body></file></xliff>