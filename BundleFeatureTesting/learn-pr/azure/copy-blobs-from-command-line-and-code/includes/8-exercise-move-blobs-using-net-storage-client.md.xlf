<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="8-exercise-move-blobs-using-net-storage-client.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff"  tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8-exercise-move-blobs-using-net-storage-client.788490.7b7738ba20fd78b1a307f0d963fdc917a3bc1356.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7b7738ba20fd78b1a307f0d963fdc917a3bc1356</xliffext:ms.openlocfilehash><xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba7e452ac39d7f09a5646044b44de0e1cdc54982</xliffext:ms.sourcegitcommit><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\copy-blobs-from-command-line-and-code\includes\8-exercise-move-blobs-using-net-storage-client.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The .NET Client library provides support for Azure storage.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>You can use this library to write your own custom applications tha move data around Azure storage.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In this exercise, you'll see how to write an application that can migrate blobs from hot to cool storage.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Setup</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>We'll start by downloading and building an existing .NET Core application.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You may have cloned the sample git repository in a previous exercise.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In the Cloud Shell window, run the following command to download the sample source code.</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Move to the samples folder:</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Build the sample application:</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Examine the ArchiveBlobs application</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Move to the <bpt id="p1">*</bpt>ArchiveBlobs<ept id="p1">*</ept> subdirectory.</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This subdirectory contains the source code for the sample application.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">*</bpt>Program.cs<ept id="p1">*</ept> file using the <ph id="ph1">`Code`</ph> editor.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Look at the first few lines of the application in the <ph id="ph1">`Main`</ph> method:</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>ArchiveBlobs<ept id="p1">*</ept> application takes the following command-line parameters:</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A connection string for accessing the source storage account,</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The name of the container in the source storage account containing the blobs that you want to move,</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A connection string for accessing the destination storage account,</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The name of the container in the destination storage account for holding the blobs after they've been moved</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A date/time string.</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Blobs in the source container that haven't been modified since this date and time will be moved to the destination.</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This application performs no validation or error handling.</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This is to keep the code short and concise.</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In a production system, you should validate all input carefully, and implement error handling for all storage account operations.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Examine the code under the comment <ph id="ph1">`Connect to Azure Storage`</ph>.</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This block of code creates <ph id="ph1">`CloudStorageAccount`</ph> objects for the source and destination accounts, and then creates <ph id="ph2">`CloudBlobClient`</ph> objects that you can use to access blobs in these accounts.</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>sourceBlobContainer<ept id="p1">*</ept> variable is a reference to the container in the source account, containing the blobs to be moved.</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Scroll down to the method <ph id="ph1">`FindMatchingBlobsAsync`</ph>:</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This method takes a blob container and a <ph id="ph1">`DateTime`</ph> object.</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The method iterates through the container to find all blobs that have a last modified date before the value specified in the <ph id="ph1">`DateTime`</ph> object.</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>blobList<ept id="p1">*</ept> collection is populated with a reference to each matching blob.</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When the method finishes, the <bpt id="p1">*</bpt>blobList<ept id="p1">*</ept> collection is passed back to the caller.</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">*</bpt>Main<ept id="p1">*</ept> method, this method is invoked by the following statement:</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Scroll down to the <ph id="ph1">`MoveMatchingBlobsAsync`</ph> method:</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The parameters to this method are the list of blobs to be moved, and the source and destination containers.</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The code iterates through the list of blobs and uses the <ph id="ph1">`StartCopyAsync`</ph> method to start copying each blob in turn.</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Once the copy operation has been initiated, the code queries the status of the destination blob at 0.5-second intervals, displaying the progress of the operation, until the copy is complete.</source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When the blob has been copied, it is removed from the source container.</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`StartCopyAsync`</ph> method call takes a URL containing a SAS token for the source object, as described in the previous unit.</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Test the ArchiveBlobs application</source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Using the <bpt id="p1">[</bpt>Azure portal<ept id="p1">](https://portal.azure.com/learn.docs.microsoft.com?azure-portal=true)</ept>, move to your source storage account.</source>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Under <bpt id="p1">**</bpt>Settings<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>Access keys<ept id="p2">**</ept>.</source>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Make a copy of the connection string for <bpt id="p1">**</bpt>key<ept id="p1">**</ept> in Notepad.</source>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Overview<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Services<ept id="p1">**</ept> section, click <bpt id="p2">**</bpt>Blobs<ept id="p2">**</ept>.</source>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>specifications<ept id="p1">**</ept> container.</source>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In the list of blobs in this container, note the modification date for the blobs.</source>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Select a date and time that is roughly in the middle of the modification date for the blobs (some blobs should have a modification time before your selected date, and others after).</source>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Using the portal, move to your destination storage account.</source>
        </trans-unit><trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Under <bpt id="p1">**</bpt>Settings<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>Access keys<ept id="p2">**</ept>.</source>
        </trans-unit><trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Make a copy of the connection string for <bpt id="p1">**</bpt>key<ept id="p1">**</ept> in Notepad.</source>
        </trans-unit><trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Overview<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Services<ept id="p1">**</ept> section, click <bpt id="p2">**</bpt>Blobs<ept id="p2">**</ept>.</source>
        </trans-unit><trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>+ Container<ept id="p1">**</ept>, and create a new container named <bpt id="p2">**</bpt>archive-test<ept id="p2">**</ept>.</source>
        </trans-unit><trans-unit id="155" translate="yes" xml:space="preserve">
          <source>In the Cloud Shell window, run the following command.</source>
        </trans-unit><trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Replace <bpt id="p1">*</bpt><ph id="ph1">\&lt;</ph>source connection string&gt;<ept id="p1">*</ept> and <bpt id="p2">*</bpt><ph id="ph2">\&lt;</ph>destination connection string&gt;<ept id="p2">*</ept> with the connection strings you recorded in notepad.</source>
        </trans-unit><trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Replace <bpt id="p1">*</bpt><ph id="ph1">\&lt;</ph>selected date and time&gt;<ept id="p1">*</ept> with the date and time for your blobs, in the same format as it appeared in the Azure portal.</source>
        </trans-unit><trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Enclose the connection strings and date/time in double quotes, to prevent them being interpreted by the Bash shell:</source>
        </trans-unit><trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The application should list the name of each matching blob that it finds, and move them.</source>
        </trans-unit><trans-unit id="160" translate="yes" xml:space="preserve">
          <source>When the application has finished, return to the <bpt id="p1">[</bpt>Azure portal<ept id="p1">](https://portal.azure.com/learn.docs.microsoft.com?azure-portal=true)</ept>.</source>
        </trans-unit><trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Move to your destination storage account.</source>
        </trans-unit><trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Browse the <bpt id="p1">**</bpt>archive-test<ept id="p1">**</ept> folder.</source>
        </trans-unit><trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Verify it contains the blobs that were moved.</source>
        </trans-unit><trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Move to your source storage account.</source>
        </trans-unit><trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Browse the <bpt id="p1">**</bpt>specifications<ept id="p1">**</ept> folder.</source>
        </trans-unit><trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Verify the blobs that were transferred have been removed from this folder.</source>
        </trans-unit></group></body></file></xliff>