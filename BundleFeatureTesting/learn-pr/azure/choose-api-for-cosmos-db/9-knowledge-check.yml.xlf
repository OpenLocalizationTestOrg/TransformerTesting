<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="9-knowledge-check.yml" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff"  tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9-knowledge-check.b387d7.5a96eea8aebf05b962650d088800081a3de76d94.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5a96eea8aebf05b962650d088800081a3de76d94</xliffext:ms.openlocfilehash><xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba7e452ac39d7f09a5646044b44de0e1cdc54982</xliffext:ms.sourcegitcommit><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\choose-api-for-cosmos-db\9-knowledge-check.yml</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>Knowledge check</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>Knowledge check</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>Knowledge check</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>Check your knowledge.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>For all of the scenarios listed below, choose the API that best supports the requirements.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>The e-commerce application has a requirement to support a shopping basket.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>Customers can add and remove products, and any discounts (like buy one get one free) need to be kept in the basket.</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>The sales team wants the flexibility to offer different kinds of discounts, and to add or remove different product categories.</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>Core (SQL)</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>This type of data is modeled best by documents.</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>Core (SQL) is the best choice for a new system.</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>MongoDB</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>MongoDB might be a good second choice due to the document nature, but Core (SQL) is the best choice as there is no need to support existing MongoDB data or an existing application.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>Cassandra</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>There isn't a fixed schema, and this isn't a good fit as flexibility is needed.</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>Azure Table Storage</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>This isn't a simple key-value pair.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>Gremlin (graph)</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>There is no requirement to store relationships or metadata on those links between items.</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>The risk department has asked if the new project could implement some form of fraud detection and prevention.</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>The guidance is that the fraud system would need to be able to track the relationship between customers, payment types, billing and delivery addresses, IP address, geolocation, and past purchase history.</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>Anything that doesn't fit into normal behavior should be flagged.</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>Core (SQL)</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>Complex relationships, and needed to store metadata against them is best supported by a graph mode of data.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>MongoDB</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>Complex relationships, and needed to store metadata against them is best supported by a graph mode of data.</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>Cassandra</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>Complex relationships, and needed to store metadata against them is best supported by a graph mode of data.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>Azure Table Storage</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>Complex relationships, and needed to store metadata against them is best supported by a graph mode of data.</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>Gremlin (graph)</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>Complex relationships, and needed to store metadata against them is best supported by a graph mode of data.</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>The sales team would like to offer a chat feature for customers.</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>Messages will have a fixed number of characters and be simple.</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>The schema is fixed, and the sales team has an existing chat app for which they have built up many CQL statements for creating reports.</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>They would like to reuse them if possible.</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>Core (SQL)</source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>The need to reuse existing CQL queries means that Cassandra is the best choice for in this scenario.</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>Core (SQL) would be a good second choice for this scenario.</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>MongoDB</source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>The need to reuse existing CQL queries means that Cassandra is the best choice for in this scenario.</source>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>Cassandra</source>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>The need to reuse existing CQL queries means that Cassandra is the best choice for in this scenario.</source>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>Azure Table Storage</source>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>The need to reuse existing CQL queries means that Cassandra is the best choice for in this scenario.</source>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>Gremlin (graph)</source>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve" uid="learn.azure.choose-the-appropriate-api-for-cosmos-db-storage.9-knowledge-check">
          <source>The need to reuse existing CQL queries means that Cassandra is the best choice for in this scenario.</source>
        </trans-unit></group></body></file></xliff>