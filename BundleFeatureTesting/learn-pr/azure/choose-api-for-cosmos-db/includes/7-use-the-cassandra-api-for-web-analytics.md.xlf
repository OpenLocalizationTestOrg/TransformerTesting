<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="7-use-the-cassandra-api-for-web-analytics.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff"  tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7-use-the-cassandra-api-for-web-analytics.297699.07452981f45eca2ec60f854c5047d737ee4c6fa1.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">07452981f45eca2ec60f854c5047d737ee4c6fa1</xliffext:ms.openlocfilehash><xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba7e452ac39d7f09a5646044b44de0e1cdc54982</xliffext:ms.sourcegitcommit><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\choose-api-for-cosmos-db\includes\7-use-the-cassandra-api-for-web-analytics.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Your web analytics team is using a third-party web analytics application that uses a Cassandra database, and the team has experience writing Cassandra Query Language (CQL) queries to produce their own reports.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Problem analysis</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Your web analytics application is based on Cassandra, and your web analytics team has valuable experience with CQL.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Recommended API: Cassandra</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Based on the existing design of your third-party web analytics application, and the subject expertise that your web analytics team already has with CQL, your easiest path for migreation would be to continue to use the Cassandra API for the immediate future.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Why not any of the other APIs?</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Using the decision matrix from earlier in this learning module, you can see why the other APIs are not a good solution for this scenario:</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>API</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Azure Table<ept id="p1">**</ept></source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This API should only be used to allow existing apps that are based on the Table API access to Cosmos DB.</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Core (SQL)<ept id="p1">**</ept></source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>All of the requirements for your web analytics application can be satisfied by Core (SQL), which makes your decision difficult when chooseing between Core (SQL) and Cassandra.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Since the web team is already using their Cassandra-based application, and because of their prior experience using the Cassandra Query Language (CQL) for some of their reporting, Cassandra is the right choice for this scenario, although Core (SQL) is still a close second choice.</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Gremlin<ept id="p1">**</ept></source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This API isn't a good choice because the data isn't graph based.</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MongoDB<ept id="p1">**</ept></source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The flexibility of a document-based data store is not enough of a reason to use MongoDB.</source>
        </trans-unit></group></body></file></xliff>