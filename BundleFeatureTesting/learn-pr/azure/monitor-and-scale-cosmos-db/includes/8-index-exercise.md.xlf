<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="8-index-exercise.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1931010" tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8-index-exercise.a99597a99b7bd1afdddc9852c6112a5b4f9849cd.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">18661fbd3934c7f9933fa18efab03f6c842b24c6</xliffext:ms.openlocfilehash><xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/24/2019</xliffext:ms.lasthandoff><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\monitor-and-scale-cosmos-db\includes\8-index-exercise.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>To demonstrate index monitoring and tuning, we use the collections that we set up in unit 2 and modify the indexing configuration.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>We'll use the CLI to modify the index configuration.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You can also use the Azure portal, the Cosmos DB REST API, or any of the Cosmos DB SDKs.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>We have provided pre-built index configuration files for your convenience.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can view these files in the <ph id="ph1">`mslearn-monitor-azure-cosmos-db/ExerciseCosmosDB/IndexConfig`</ph> directory.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>RUs for all properties indexed</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>We ran queries in Unit 3 on our collections with all the document properties indexed.</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The Request Units (RUs) used were:</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>~3 RUs to query a 1-KB document within a single partition</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>~13 RUs to add a 1-KB document</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Measure RUs for no index</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Update the <bpt id="p1">**</bpt>Orders<ept id="p1">**</ept> collection to index none of the properties.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If your cloud shell times out, then you need to reset the <ph id="ph1">`ENDPOINT`</ph>, <ph id="ph2">`KEY`</ph>, and  <ph id="ph3">`COSMOS_NAME`</ph> variables.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The console application needs the environment variables to connect to the database.</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If the cloud shell hasn't timed out, you can skip this step.</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can reset the <ph id="ph1">`COSMOS_NAME`</ph> value by running the following command.</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can reset your <ph id="ph1">`ENDPOINT`</ph> and <ph id="ph2">`KEY`</ph> variables by running the following commands.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Make sure you're in the ExerciseCosmosDB directory.</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Run the following command to update the collection index to <ph id="ph1">`none`</ph>.</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This command reads the index configuration from the file <ph id="ph1">`IndexConfig/index-none.json`</ph>.</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can view this and other index configurations in the <ph id="ph1">`IndexConfig`</ph> directory.</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Measure the consumption of adding a document without an index.</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Review the output of this command.</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The write took approximately 5 RUs.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Now measure the consumption of querying the collection without an index.</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Run a query for the <ph id="ph1">`Item.id`</ph> value of the document that you just added into the Orders collection.</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You see that without an index this query's consumption is much higher like 20 to 200 RUs.</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Measure RUs for partial index</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Update the <bpt id="p1">**</bpt>Orders<ept id="p1">**</ept> collection to index on only some of the order properties.</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Measure the consumption of adding a document with partial indexing.</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Review the output of this command.</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The write took 6 to 8 RUs.</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Now measure the consumption of querying the collection with a property that's indexed.</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You see that with an index this query only consumes 3 to 6 RUs.</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Now measure the consumption of querying the collection with a property that isn't indexed.</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You see that the consumption of this query without an index is approximately 10 to 11 RUs.</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The consumption depends on which property is in the query and how long it takes to find it in the collection.</source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For example, if we run a query for a customer <ph id="ph1">`id`</ph> instead of <ph id="ph2">`State`</ph>, the search consumes more RUs.</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Measure RUs for lazy indexing</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>In the previous exercises, the index is set to consistent so it's updated synchronously.</source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>In this exercise, we set the indexing mode to lazy.</source>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The index is updated when the collection isn't being used.</source>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Update the <bpt id="p1">**</bpt>Orders<ept id="p1">**</ept> collection to lazy index on all properties.</source>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Measure the consumption of adding a document with lazy indexing.</source>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Review the output of this command.</source>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The write took approximately 5 RUs.</source>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The RUs used are approximately the same as writing to an unindexed collection.</source>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>With lazy indexing, the index isn't updated immediately.</source>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Now measure the consumption of querying a collection with lazy indexing.</source>
        </trans-unit><trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Run a query on the <ph id="ph1">`Item.id`</ph> value of the document that you just added.</source>
        </trans-unit><trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You see that this query takes approximately 3 RUs.</source>
        </trans-unit><trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The RUs consumed by the query are low because the collection index isn't immediately updated.</source>
        </trans-unit><trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The lazy configuration works well for a collection that isn't used at capacity all the time.</source>
        </trans-unit><trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Comparing RUs across indexing strategies</source>
        </trans-unit><trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The following table summarizes the results we've gotten in previous exercises.</source>
        </trans-unit><trans-unit id="156" translate="yes" xml:space="preserve">
          <source>These results apply to read, query, and insert operations for 1 KB of data that's within a single partition.</source>
        </trans-unit><trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Operation</source>
        </trans-unit><trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Indexing strategy</source>
        </trans-unit><trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Approximate consumption (RUs)</source>
        </trans-unit><trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Read document directly</source>
        </trans-unit><trans-unit id="161" translate="yes" xml:space="preserve">
          <source>N/A</source>
        </trans-unit><trans-unit id="162" translate="yes" xml:space="preserve">
          <source>1</source>
        </trans-unit><trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Query document</source>
        </trans-unit><trans-unit id="164" translate="yes" xml:space="preserve">
          <source>All properties indexed</source>
        </trans-unit><trans-unit id="165" translate="yes" xml:space="preserve">
          <source>3</source>
        </trans-unit><trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Query document by indexed property</source>
        </trans-unit><trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Partial</source>
        </trans-unit><trans-unit id="168" translate="yes" xml:space="preserve">
          <source>3+</source>
        </trans-unit><trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Query document by non-indexed property</source>
        </trans-unit><trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Partial</source>
        </trans-unit><trans-unit id="171" translate="yes" xml:space="preserve">
          <source>10+</source>
        </trans-unit><trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Query document</source>
        </trans-unit><trans-unit id="173" translate="yes" xml:space="preserve">
          <source>No properties indexed</source>
        </trans-unit><trans-unit id="174" translate="yes" xml:space="preserve">
          <source>20+</source>
        </trans-unit><trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Insert document</source>
        </trans-unit><trans-unit id="176" translate="yes" xml:space="preserve">
          <source>All properties indexed</source>
        </trans-unit><trans-unit id="177" translate="yes" xml:space="preserve">
          <source>13</source>
        </trans-unit><trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Insert document</source>
        </trans-unit><trans-unit id="179" translate="yes" xml:space="preserve">
          <source>All properties indexed lazily</source>
        </trans-unit><trans-unit id="180" translate="yes" xml:space="preserve">
          <source>7</source>
        </trans-unit><trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Insert document</source>
        </trans-unit><trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Some properties indexed</source>
        </trans-unit><trans-unit id="183" translate="yes" xml:space="preserve">
          <source>6</source>
        </trans-unit><trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Insert document</source>
        </trans-unit><trans-unit id="185" translate="yes" xml:space="preserve">
          <source>No properties indexed</source>
        </trans-unit><trans-unit id="186" translate="yes" xml:space="preserve">
          <source>5</source>
        </trans-unit><trans-unit id="187" translate="yes" xml:space="preserve">
          <source>You see that as indexing complexity goes up, the write consumption goes down, and the read consumption goes up.</source>
        </trans-unit><trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The indexing strategy that you choose depends on your data and the workloads that it supports.</source>
        </trans-unit></group></body></file></xliff>