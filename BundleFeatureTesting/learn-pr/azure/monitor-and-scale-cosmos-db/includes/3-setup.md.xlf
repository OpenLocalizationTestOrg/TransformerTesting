<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="3-setup.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff"  tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3-setup.579219.2e7d388462acf85faac888800693548786d11ad3.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2e7d388462acf85faac888800693548786d11ad3</xliffext:ms.openlocfilehash><xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba7e452ac39d7f09a5646044b44de0e1cdc54982</xliffext:ms.sourcegitcommit><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\monitor-and-scale-cosmos-db\includes\3-setup.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>In this unit, you'll create a Cosmos DB account and use a console application to populate the database.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Create your database account</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A database account is a container for multiple Cosmos DB databases.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Add a unique name for your database account.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The database account name must be unique across all Cosmos DB instances.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Use the command below to generate a random database account name, using the <bpt id="p1">**</bpt>Bash<ept id="p1">**</ept> <ph id="ph1">`$RANDOM`</ph> variable, and store it in an environment variable to use later.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Create a Cosmos DB account using the following command:</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The database account can take 4-5 minutes to provision.</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Keep reading while the account is being created.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Cosmos DB concepts: resources, partitioning, and indexing</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Cosmos DB resources</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A Cosmos DB account is a container for one or more <bpt id="p1">_</bpt>databases<ept id="p1">_</ept>.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A Cosmos DB database is a container for one or more <bpt id="p1">_</bpt>collections<ept id="p1">_</ept>.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A collection contains <bpt id="p1">_</bpt>documents<ept id="p1">_</ept>.</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A document is an unstructured set of key value pairs, read and written in JSON format.</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Partitioning in Cosmos DB</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">_</bpt>Partitioning<ept id="p1">_</ept> is the distribution and grouping of your data across the underlying resources.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Documents are grouped in a partition based on the value of the partition key.</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You specify the partition key when you create the collection.</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To understand the partition key concept better, let's review the property and values in the following JSON example document.</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Any of these properties, or a combination of them, can be a partition key.</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example, where you defined the partition key as a combination of the properties <bpt id="p1">**</bpt>Category<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Merchant<ept id="p2">**</ept>, any documents that have matching values for <bpt id="p3">**</bpt>Category<ept id="p3">**</ept> and <bpt id="p4">**</bpt>Merchant<ept id="p4">**</ept> are grouped in the same partition.</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>An effective partitioning strategy distributes data and access evenly across partitions, and across time.</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Querying documents from within the same partition is less expensive than across partitions.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You choose how to partition your data at design time.</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The partitioning configuration can't be changed after a collection is provisioned.</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>We examine partitioning concepts and examples in detail in Units 4 and 5.</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Indexing in Cosmos DB</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An index is a catalog of document properties and their values.</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>It includes links to documents that contain properties equal to each property value.</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Indexing makes searching a collection more efficient.</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>But the search efficiency is balanced with the resources required to insert or change a document.</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When a document is inserted or changed, Cosmos DB has to update the index.</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The optimal indexing strategy for your collection depends on your workload.</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Unlike partitioning, you can change indexing at run-time.</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>We look at indexing in Units 6 and 7.</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Set environment variables for endpoint and keys</source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>After the database is created, run the following command to store its endpoint in an environment variable.</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Run the following command to store the access key in an environment variable.</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Create your database and collections</source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Create a database called <ph id="ph1">`mslearn`</ph> in your CosmosDB account.</source>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>We only need one database for these exercises.</source>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Create the first collection.</source>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>We're going to create three collections to compare different partitioning strategies, and workloads.</source>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>We allocate a smaller capacity to this collection to demonstrate overloading it.</source>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The partition key for this collection is the unique identifier of the order.</source>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In this case, the partition isn't important as the collection is smaller than a single partition.</source>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Create the second collection.</source>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This collection uses an Order Item's product <bpt id="p1">**</bpt>category<ept id="p1">**</ept> as the partition key.</source>
        </trans-unit><trans-unit id="150" translate="yes" xml:space="preserve">
          <source>We explore the consequences of this choice as we go through the exercises in this module.</source>
        </trans-unit><trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Create a third collection.</source>
        </trans-unit><trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This collection partitions the documents by the Order Item's unique product <bpt id="p1">**</bpt>identifier<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Populate your collections</source>
        </trans-unit><trans-unit id="154" translate="yes" xml:space="preserve">
          <source>We use an open-source C# console application to populate your collections.</source>
        </trans-unit><trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This application generates random order documents and inserts them into your collections.</source>
        </trans-unit><trans-unit id="156" translate="yes" xml:space="preserve">
          <source>We also use this application in later units to query the collections.</source>
        </trans-unit><trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Clone the console application repository from GitHub.</source>
        </trans-unit><trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Run the following command in the sandbox environment.</source>
        </trans-unit><trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Change into the application's directory.</source>
        </trans-unit><trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Check your environment variables.</source>
        </trans-unit><trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The console application needs the environment variables to connect to the database.</source>
        </trans-unit><trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If your cloud shell times out, then you need to set these and the <ph id="ph1">`COSMOS_NAME`</ph> variable again.</source>
        </trans-unit><trans-unit id="163" translate="yes" xml:space="preserve">
          <source>You can reset the <ph id="ph1">`COSMOS_NAME`</ph> value by running the following command.</source>
        </trans-unit><trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You can reset your <ph id="ph1">`ENDPOINT`</ph> and <ph id="ph2">`KEY`</ph> variables by running the following commands.</source>
        </trans-unit><trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Populate the <ph id="ph1">`Small`</ph> collection.</source>
        </trans-unit><trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Again, the application takes a few minutes to run, as we need to populate the database with enough data that we can discern metrics for different partitioning and indexing strategies.</source>
        </trans-unit><trans-unit id="167" translate="yes" xml:space="preserve">
          <source>To populate this collection, the console application is running with the following options:</source>
        </trans-unit><trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Option</source>
        </trans-unit><trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit><trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit><trans-unit id="171" translate="yes" xml:space="preserve">
          <source>-c</source>
        </trans-unit><trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Small</source>
        </trans-unit><trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The name of the collection to use</source>
        </trans-unit><trans-unit id="174" translate="yes" xml:space="preserve">
          <source>-o</source>
        </trans-unit><trans-unit id="175" translate="yes" xml:space="preserve">
          <source>InsertDocument</source>
        </trans-unit><trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The name of the task to run</source>
        </trans-unit><trans-unit id="177" translate="yes" xml:space="preserve">
          <source>-n</source>
        </trans-unit><trans-unit id="178" translate="yes" xml:space="preserve">
          <source>2000</source>
        </trans-unit><trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The number of times to run</source>
        </trans-unit><trans-unit id="180" translate="yes" xml:space="preserve">
          <source>-p</source>
        </trans-unit><trans-unit id="181" translate="yes" xml:space="preserve">
          <source>10</source>
        </trans-unit><trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The degree of parallelism to use.</source>
        </trans-unit><trans-unit id="183" translate="yes" xml:space="preserve">
          <source>That's the number of threads used to do the experiment.</source>
        </trans-unit><trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The higher this number, the greater the demand on the collection.</source>
        </trans-unit><trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The first time you run the application, it shows a welcome message.</source>
        </trans-unit><trans-unit id="186" translate="yes" xml:space="preserve">
          <source>You can see the other options for this application by running <ph id="ph1">`dotnet run -- --help`</ph>.</source>
        </trans-unit><trans-unit id="187" translate="yes" xml:space="preserve">
          <source>While the console application runs, you see one line printed per second that shows the status and Request Units needed for the database writes.</source>
        </trans-unit><trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Populate the <ph id="ph1">`HotPartition`</ph> collection.</source>
        </trans-unit><trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Populate the <ph id="ph1">`Orders`</ph> collection.</source>
        </trans-unit></group></body></file></xliff>