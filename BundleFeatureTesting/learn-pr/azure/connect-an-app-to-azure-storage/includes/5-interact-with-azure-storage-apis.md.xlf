<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="5-interact-with-azure-storage-apis.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1931010" tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5-interact-with-azure-storage-apis.0b62dedbe7fb74d648fc148dcc16e24cd73d0a3a.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aadf4181ba26428ec479853be3fb1ed7a6c7551c</xliffext:ms.openlocfilehash><xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/24/2019</xliffext:ms.lasthandoff><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\connect-an-app-to-azure-storage\includes\5-interact-with-azure-storage-apis.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Azure Storage provides a REST API to work with the containers and data stored in each account.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>There are independent APIs available to work with each type of data you can store.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Recall that we have four specific data types:</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Blobs<ept id="p1">**</ept> for unstructured data such as binary and text files.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Queues<ept id="p1">**</ept> for persistent messaging.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Tables<ept id="p1">**</ept> for structured storage of key/values.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Files<ept id="p1">**</ept> for traditional SMB file shares.</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Using the REST API</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The Storage REST APIs are accessible from anywhere on the Internet, by any application that can send an HTTP/HTTPS request and receive an HTTP/HTTPS response.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For example, if you wanted to list all the blobs in a container, you would send something like:</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This would return an XML block with data specific to the account:</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>However, this approach requires a lot of manual parsing and the creation of HTTP packets to work with each API.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For this reason, Azure provides pre-built <bpt id="p1">_</bpt>client libraries<ept id="p1">_</ept> that make working with the service easier for common languages and frameworks.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Using a client library</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Client libraries can save a significant amount of work for application developers because the API is tested and it often provides nicer wrappers around the data models sent and received by the REST API.</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Microsoft has Azure client libraries that support a number of languages and frameworks including:</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>.NET</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Java</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Python</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Node.js</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Go</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example, to retrieve the same list of blobs in C#, we could use the following code snippet:</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Or in JavaScript:</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The client libraries are just thin <bpt id="p1">_</bpt>wrappers<ept id="p1">_</ept> over the REST API.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>They are doing exactly what you would do if you used the web services directly.</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>These libraries are also open source, making them very transparent.</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Look for them on GitHub.</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Let's add client library support to our application.</source>
        </trans-unit></group></body></file></xliff>