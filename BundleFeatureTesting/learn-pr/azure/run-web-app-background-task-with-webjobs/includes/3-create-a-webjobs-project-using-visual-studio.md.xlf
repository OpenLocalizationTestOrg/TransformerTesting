<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="3-create-a-webjobs-project-using-visual-studio.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1931010" tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3-create-a-webjobs-project-using-visual-studio.cd826298427d5145c5f7df5654604a1237fd90f9.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3a7b4e79e2cc7b721d611fd9fc4d478bb7c6a5c2</xliffext:ms.openlocfilehash><xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/13/2019</xliffext:ms.lasthandoff><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\run-web-app-background-task-with-webjobs\includes\3-create-a-webjobs-project-using-visual-studio.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Developers can use a template in Visual Studio to start creating a WebJob.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>As the Senior Web Developer responsible for the watch dealerâ€™s web site you have decided to deploy the extra functionality requested by your development manager as a WebJob.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You will use Visual Studio to create the project.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You will configure the project to deploy automatically as a WebJob when the web site is deployed.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Here, you will learn about the structure of a WebJob project in Visual Studio and how to publish the project.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>How to add a WebJob project</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In this module, we'll concentrate on building a WebJob by using the .NET framework.</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The WebJob will form part of an ASP.NET web app project and we will build it by using Visual Studio.</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The container for WebJobs functionality is a Console Application project.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can add such console applications to an existing Web Apps solution.</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To quickly create a WebJob that is deployed alongside an App Service web app, you can use the WebJobs project template.</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Add this template to an existing web app project by right-clicking the name of the web app project.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> and then click <bpt id="p2">**</bpt>New Azure WebJob Project<ept id="p2">**</ept>.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>WebJob Create Dialog</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Note the <bpt id="p1">**</bpt>Project Name<ept id="p1">**</ept>, <bpt id="p2">**</bpt>WebJob Name<ept id="p2">**</ept>, and the <bpt id="p3">**</bpt>Run Mode<ept id="p3">**</ept> in the <bpt id="p4">**</bpt>Add Azure WebJob<ept id="p4">**</ept> dialog.</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">**</bpt>Run Mode<ept id="p1">**</ept> drop-down list to choose whether the WebJob should run continuously or in response to a trigger ("On demand").</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The structure of a WebJob project</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Because a WebJob project is a console application, it includes a <bpt id="p1">**</bpt>Program.cs<ept id="p1">**</ept> file, which contains a <ph id="ph1">`Main()`</ph> method that is the entry point for the application.</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">`Main()`</ph> method, the application initiates and configures a <ph id="ph2">`JobHost`</ph> object.</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`JobHost`</ph> is the object that communicates with Azure once the WebJob is deployed.</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You should tell your WebJob how to connect to Azure for storage and access to databases.</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can place connection strings in the <bpt id="p1">**</bpt>App.config<ept id="p1">**</ept> file.</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Code the actions that your WebJob executes in the <bpt id="p1">**</bpt>Functions.cs<ept id="p1">**</ept> file.</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The project template creates a <bpt id="p1">**</bpt>webjobs-List.json<ept id="p1">**</ept> file in the Web App solution:</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The JSON file contains a <ph id="ph1">`filePath`</ph> entry that points to the WebJob project.</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Scheduling a triggered WebJob</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If you want your WebJob to run on a schedule, you can configure that schedule by using a CRON expression in a file called <bpt id="p1">**</bpt>settings.json<ept id="p1">**</ept></source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>CRON is a scheduler that is often used to run automated jobs in UNIX-like operating systems.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A CRON expression a schedule for those jobs.</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>WebJobs run in Azure, but CRON expressions are ideal to define their schedules.</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Here are some examples:</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>CRON Expression</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>0 0 12 * * ?</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Run at 12 noon every day</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>0 15 10 * * ?</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Run at 10:15 am every day</source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>0 15 10 ?</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>* MON-FRI</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Run at 10:15 am every weekday</source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>0 15 10 ?</source>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>* 6L</source>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Run at 10:15 on the last Friday of every month</source>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To set the schedule for your triggered WebJob, add the <bpt id="p1">**</bpt>settings.json<ept id="p1">**</ept> file to your WebJob project.</source>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Place the CRON expression in a property named <ph id="ph1">`schedule`</ph>:</source>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source>How to publish the project</source>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source>When when you use Visual Studio's <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept> functionality to deploy the web app to App Service, Visual Studio deploys the WebJob along with the application.</source>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You can also deploy the WebJob separately from the web app by right-clicking the project in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept> and then clicking <bpt id="p2">**</bpt>Publish as Azure WebJob<ept id="p2">**</ept>.</source>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Right-click the name of the web app and select <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept> to start the publishing wizard and publish the complete solution.</source>
        </trans-unit><trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Visual Studio shows the wizard page, where you can pick a publishing target.</source>
        </trans-unit><trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You must publish to App Service for WebJobs to be deployed.</source>
        </trans-unit><trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Pick a publishing target</source>
        </trans-unit><trans-unit id="153" translate="yes" xml:space="preserve">
          <source>On the next page, choose either to create a new App Service or select an existing one.</source>
        </trans-unit><trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Next, select your <bpt id="p1">**</bpt>App Name<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Subscription<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Resource Group<ept id="p3">**</ept>, and <bpt id="p4">**</bpt>Hosting Plan<ept id="p4">**</ept>:</source>
        </trans-unit><trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Create An App Service</source>
        </trans-unit><trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>, and the files will then be published to Azure along with your WebJob.</source>
        </trans-unit><trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In the next exercise, you will create a WebJob project in Visual Studio.</source>
        </trans-unit></group></body></file></xliff>