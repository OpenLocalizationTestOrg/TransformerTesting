<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="4-exercise-create-a-webjob-using-visual-studio.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1931010" tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4-exercise-create-a-webjob-using-visual-studio.0b17b0ab1d65cc30d66e4d86bdd3b70ac372b16d.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0dde48019f1496eeab0212ebfe18e31e8cf3e741</xliffext:ms.openlocfilehash><xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/24/2019</xliffext:ms.lasthandoff><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\run-web-app-background-task-with-webjobs\includes\4-exercise-create-a-webjob-using-visual-studio.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Developers can use Visual Studio 2017 to create a WebJob within a web app solution.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>You want to begin building a WebJob for the luxury watch dealerâ€™s site and to satisfy their request for the WebJob to run in the same web app as the production web site.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Here, you will create a web app from a template and then add a WebJob project to the same solution.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This structure enables you to manage the web app and the WebJob as a single unit in source control systems.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Create a storage account</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The WebJob that you will create in this unit will write messages to a queue in an Azure Storage account.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>We'll start by creating that account.</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In the Cloud Shell window on the right, run the following commands.</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>When it completes, make a note of the storage account name it created.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This will also store the connection string for the storage account in a shell variable, which we'll use shortly.</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Create a project</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Next, use Visual Studio 2017 to create and publish a web app.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This will represent the already-deployed production website in our watch-retailer scenario.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In the Visual Studio start page, select <bpt id="p1">**</bpt>File<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>New<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>Project..<ept id="p3">**</ept>.</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog box, on the left-hand pane, select <bpt id="p2">**</bpt>Web<ept id="p2">**</ept>.</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In the center pane, click <bpt id="p1">**</bpt>ASP.NET Web Application (.Net Framework)<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>At the bottom of the dialog box, in the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> field, enter <bpt id="p2">**</bpt>WatchesWebApp<ept id="p2">**</ept>.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> button to create your project.</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>ASP.NET Web Application<ept id="p1">**</ept> dialog box, you will see a selection of starting templates.</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For this exercise, select <bpt id="p1">**</bpt>MVC<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept> to create your project.</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>New Project Dialog</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Publish To Azure</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You've now created a web application from the sample template and it is running locally.</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The next step is to publish the app to Azure.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Ensure that your copy of Visual Studio is logged into the account you have used to log in to Microsoft Learn.</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This will ensure that the sandbox subscription is available for publishing.</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Right-click the <bpt id="p1">**</bpt>WatchesWebApp<ept id="p1">**</ept> project in Solution Explorer and select <bpt id="p2">**</bpt>Publish<ept id="p2">**</ept>.</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>App Service<ept id="p1">**</ept> as the publish target, select <bpt id="p2">**</bpt>Create New<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>Publish<ept id="p3">**</ept>.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Create App Service<ept id="p1">**</ept> dialog, enter a name for your web application.</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You can accept the default name.</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This name must be globally unique.</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">**</bpt>Subscription<ept id="p1">**</ept>, select <bpt id="p2">**</bpt>Concierge Subscription<ept id="p2">**</ept>.</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Select the existing resource group <bpt id="p1">**</bpt><bpt id="p2">&lt;rgn&gt;</bpt>[Sandbox resource group]<ept id="p2">&lt;/rgn&gt;</ept><ept id="p1">**</ept>, then click <bpt id="p3">**</bpt>Create<ept id="p3">**</ept>.</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When deployment is complete, Visual Studio will open a new browser tab. After a short wait, the new web app will be displayed.</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Configure the web app</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In this unit, you'll create a continuous WebJob.</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Continuous WebJobs require the <bpt id="p1">**</bpt>Always On<ept id="p1">**</ept> setting to be enabled on the web app that hosts them to ensure that they continue running.</source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Our WebJob's code will also need the connection string for our storage account.</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>WebJobs have access to the same configuration settings as the web app that hosts them, so we can configure the connection string as a setting on the web app.</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Run the following commands in the Cloud Shell window to configure the new web app.</source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Add a WebJobs Project</source>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Now, we'll add a WebJob to the web app solution in Visual Studio:</source>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In Visual Studio, right-click the  <bpt id="p1">**</bpt>WatchesWebApp<ept id="p1">**</ept> project, click <bpt id="p2">**</bpt>Add<ept id="p2">**</ept>, and then select <bpt id="p3">**</bpt>New Azure WebJob Project<ept id="p3">**</ept>.</source>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Change the project name to <bpt id="p1">**</bpt>StockCheckWebJob<ept id="p1">**</ept> and then click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</source>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The new project that has been created is a C# console application.</source>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Configuration has been added to the web application to automatically publish it as a WebJob whenever the application is published to Azure.</source>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, in the <bpt id="p2">**</bpt>StockCheckWebJob<ept id="p2">**</ept> project, double-click <bpt id="p3">**</bpt>Program.cs<ept id="p3">**</ept>.</source>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Comment out all the code inside the <ph id="ph1">`Main()`</ph> method.</source>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This code, created by the Visual Studio WebJobs template, uses the WebJobs SDK, which you will use later on in this module.</source>
        </trans-unit><trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The first version of the WebJob you will create here will have no dependencies on the WebJobs SDK, and is intended to show that there are no special requirements or dependencies needed for programs to be published as WebJobs.</source>
        </trans-unit><trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Right-click the StockCheckWebJob project in Solution Explorer, select <bpt id="p1">**</bpt>Add<ept id="p1">**</ept><ph id="ph1"> &gt; </ph><bpt id="p2">**</bpt>Reference<ept id="p2">**</ept>, and add a reference to <bpt id="p3">**</bpt>System.Configuration<ept id="p3">**</ept>.</source>
        </trans-unit><trans-unit id="152" translate="yes" xml:space="preserve">
          <source>At the top of the <bpt id="p1">**</bpt>Program.cs<ept id="p1">**</ept> code file, add these <ph id="ph1">`using`</ph> statements:</source>
        </trans-unit><trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Complete the WebJobs project code</source>
        </trans-unit><trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In our WebJob, we'll use the Azure Storage SDK to create queue messages in our storage account on a set interval.</source>
        </trans-unit><trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Once we have deployed the app as a WebJob, we can look at our storage account and see the output as evidence that our job is running.</source>
        </trans-unit><trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Add the following code to the <ph id="ph1">`Main()`</ph> method, below the code you commented out earlier.</source>
        </trans-unit><trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This code creates a new queue named <ph id="ph1">`stockchecks`</ph> in the storage account and writes a new message into it every 30 seconds.</source>
        </trans-unit><trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Publish the WebJob</source>
        </trans-unit><trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Now that the code is complete, you can re-publish the application and the WebJob will be published along with it.</source>
        </trans-unit><trans-unit id="160" translate="yes" xml:space="preserve">
          <source>In the Visual Studio <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right-click the WatchesWebApp project (not the StockCheckWebJob project), and select <bpt id="p2">**</bpt>Publish<ept id="p2">**</ept>.</source>
        </trans-unit><trans-unit id="161" translate="yes" xml:space="preserve">
          <source>In the WatchesWebApp window that appears, select <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept> to publish the web app again.</source>
        </trans-unit><trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Test the WebJob</source>
        </trans-unit><trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The WebJob that you just published creates messages in queue storage on a schedule.</source>
        </trans-unit><trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Let's confirm that it's been deployed and check that it works:</source>
        </trans-unit><trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Log in to the <bpt id="p1">[</bpt>Azure portal<ept id="p1">](https://portal.azure.com/learn.docs.microsoft.com?azure-portal=true)</ept> using your MS Learn account.</source>
        </trans-unit><trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>All resources<ept id="p1">**</ept> and navigate to your web app.</source>
        </trans-unit><trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Under <bpt id="p1">**</bpt>Settings<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>WebJobs<ept id="p2">**</ept>.</source>
        </trans-unit><trans-unit id="168" translate="yes" xml:space="preserve">
          <source>You should see your WebJob in the list with a status of Running.</source>
        </trans-unit><trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Navigate back to <bpt id="p1">**</bpt>All resources<ept id="p1">**</ept> and select the storage account created at the beginning of this exercise.</source>
        </trans-unit><trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Queues<ept id="p1">**</ept> from the navigation menu.</source>
        </trans-unit><trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The list should display a single queue, named <ph id="ph1">`stockchecks`</ph>, created by the WebJob.</source>
        </trans-unit><trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If you select it, you'll see the messages that the WebJob is creating, one every 30 seconds.</source>
        </trans-unit></group></body></file></xliff>