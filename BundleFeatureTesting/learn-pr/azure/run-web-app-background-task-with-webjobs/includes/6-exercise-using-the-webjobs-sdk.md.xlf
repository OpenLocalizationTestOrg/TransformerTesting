<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="6-exercise-using-the-webjobs-sdk.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1931010" tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6-exercise-using-the-webjobs-sdk.05e3532029daeb2d3bf1e8e9ba9d833db811fc42.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fd87bf68dda744783ecfb91fe0df6344b3af4cb6</xliffext:ms.openlocfilehash><xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/24/2019</xliffext:ms.lasthandoff><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\run-web-app-background-task-with-webjobs\includes\6-exercise-using-the-webjobs-sdk.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Developers must use the correct packages and code to interact with the WebJobs SDK.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>As the senior web developer responsible for the watch dealers web site you have already created a web app with a linked WebJob Project.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You now want to use the WebJobs SDK to enhance and simplify the WebJob code.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In this unit, you will integrate the WebJobs SDK in your implementation and use a <ph id="ph1">`TimerTrigger`</ph> to run it on a schedule.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Using the SDK to create and configure the WebJob host</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The WebJob project template, which you used to create your WebJob in unit 4, inserts code that uses the WebJob SDK.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In unit 4, you commented out that code in order to explore how WebJobs can work without the SDK.</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Here, we're going to create a second WebJob using the SDK that will process the messages from the queue and write output to blob storage.</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In Visual Studio, right-click the WatchesWebApp project in Solution Explorer and select <bpt id="p1">**</bpt>Add<ept id="p1">**</ept><ph id="ph1"> &gt; </ph><bpt id="p2">**</bpt>New Azure WebJob Project<ept id="p2">**</ept>.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In the dialog that appears, name the new WebJob <bpt id="p1">**</bpt>ConfirmationWebJob<ept id="p1">**</ept> and select <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In the new WebJob project, open <bpt id="p1">**</bpt>Functions.cs<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When this WebJob is deployed and starts up, the WebJobs SDK code in Main.cs will analyze all of the <ph id="ph1">`Trigger`</ph> input parameters in the methods in this class and create listeners that will trigger them.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Delete the existing <ph id="ph1">`ProcessQueueMessage`</ph> method and replace it with the following:</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This function will process messages on the <ph id="ph1">`stockchecks`</ph> queue and use them to create blobs in the <ph id="ph2">`confirmations`</ph> container.</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The WebJobs SDK will call this function once for every message on the <ph id="ph1">`stockchecks`</ph> queue, and the <ph id="ph2">`message`</ph> parameter will contain the message contents.</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The value of <ph id="ph1">`output`</ph> will automatically be written to a new blob in the <ph id="ph2">`confirmations`</ph> container.</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The name of the new blob will be the message ID of the message received from the queue that triggered the function.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Configure the WebJobs connection string</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The Azure Storage bindings, such as <ph id="ph1">`QueueTrigger`</ph> and <ph id="ph2">`Blob`</ph>, use the storage account specified by the <ph id="ph3">`AzureWebJobsStorage`</ph> connection string.</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>We need to add this connection string as a setting in our app.</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Additionally, WebJobs that use the SDK need to have the <ph id="ph1">`AzureWebJobsDashboard`</ph> connection string configured in order to run.</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Run the following command in the Cloud Shell window on the right to create both connection strings as settings in the web app.</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>We will use the same connection string as we did for <ph id="ph1">`StorageAccount`</ph> in the previous exercise.</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The new WebJob will read messages from the existing queue and write blobs to a new container in the same storage account.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Publish the application</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Now that our second WebJob is implemented, we'll publish the application one more time to deploy it.</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In the Visual Studio <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right-click the WatchesWebApp project and select <bpt id="p2">**</bpt>Publish<ept id="p2">**</ept>.</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In the WatchesWebApp window that appears, select <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept> to publish the web app again.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Confirm deployment</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Now that both WebJobs are published, let's confirm that the new WebJob is working properly.</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">[</bpt>Azure portal<ept id="p1">](https://portal.azure.com/learn.docs.microsoft.com?azure-portal=true)</ept>, click <bpt id="p2">**</bpt>All resources<ept id="p2">**</ept>, and then navigate to the storage account.</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In the navigation menu, select <bpt id="p1">**</bpt>Queues<ept id="p1">**</ept>, then select the <bpt id="p2">**</bpt>stockchecks<ept id="p2">**</ept> queue.</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You'll see that the queue is now empty, or nearly empty.</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The new WebJob is processing all messages that reach the queue and writing new data out to blob storage.</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Navigate back to the storage account, then use the navigation menu to select <bpt id="p1">**</bpt>Blobs<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>confirmations<ept id="p1">**</ept> container from the list.</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Each blob shown in the list is output from the WebJob.</source>
        </trans-unit></group></body></file></xliff>