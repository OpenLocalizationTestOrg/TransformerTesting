<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="5-design-for-availability-and-recoverability.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1931010" tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5-design-for-availability-and-recoverability.8814b152d561014a31229ff208b719549c7566ed.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7e1188894c5b8a8d5677441ea0f3073d50115f3f</xliffext:ms.openlocfilehash><xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/13/2019</xliffext:ms.lasthandoff><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\pillars-of-a-great-azure-architecture\includes\5-design-for-availability-and-recoverability.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Clinicians at Lamna Healthcare have little tolerance for downtime.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>They need to have access to clinical IT systems around the clock to ensure they're providing the highest quality care at all times.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>To meet the around-the-clock demands of clinicians, Lamna Healthcare's applications must be able to handle failures with minimal impact to their users.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>How do they ensure their applications remain operational, both for localized incidents and large-scale disasters?</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Here, we'll talk through how to include availability and recoverability in your architecture design.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Availability and recoverability</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In a complex application, any number of things can go wrong at any scale.</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Individual servers and hard drives can fail.</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A deployment issue could unintentionally drop all tables in a database.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Whole datacenters may become unreachable.</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A ransomware incident could maliciously encrypt all your data.</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Designing for <bpt id="p1">*</bpt>availability<ept id="p1">*</ept> focuses on maintaining uptime through small-scale incidents and temporary conditions like partial network outages.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can ensure your application can handle localized failures by integrating high availability into each component of an application and eliminating single points of failure.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Such a design also minimizes the impact of infrastructure maintenance.</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>High-availability designs typically aim to eliminate the impact of incidents quickly and automatically and ensure that the system can continue to process requests with little to no impact.</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Designing for <bpt id="p1">*</bpt>recoverability<ept id="p1">*</ept> focuses on recovery from data loss and from larger scale disasters.</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Recovery from these types of incidents often involves active intervention, though automated recovery steps can reduce the time needed to recover.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>These types of incidents may result in some amount of downtime or permanently lost data.</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Disaster recovery is as much about careful planning as it is about execution.</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Including high availability and recoverability in the design of your architecture protects your business from financial losses resulting from downtime and lost data.</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>They ensure your reputation isn't negatively impacted by a loss of trust from your customers.</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Architecting for availability and recoverability</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Architecting for availability and recoverability ensures that your application can meet the commitments you make to your customers.</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For availability, identify the service-level agreement (SLA) you're committing to.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Examine the potential high-availability capabilities of your application relative to your SLA, and identify where you have proper coverage and where you'll need to make improvements.</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The goal is to add redundancy to components of the architecture so that you are less likely to experience an outage.</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Examples of high-availability design components include clustering and load balancing.</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Clustering replaces a single VM with a set of coordinated VMs.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>When one VM fails or becomes unreachable, services can fail over to another one that can service the requests.</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Load balancing spreads requests across many instances of a service, detecting failed instances and preventing requests from being routed to them.</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For recoverability, perform an analysis that examines possible data loss and major downtime scenarios.</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The analysis should include an exploration of recovery strategies and the cost-benefit tradeoff for each.</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This exercise will give you important insight into your organization's priorities and help clarify the role of your application.</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The results should include the application's recovery point objective (RPO) and recovery time objective (RTO).</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Recovery Point Objective<ept id="p1">**</ept>: The maximum duration of acceptable data loss.</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>RPO is measured in units of time, not volume: "30 minutes of data", "four hours of data", and so on.</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>RPO is about limiting and recovering from data <bpt id="p1">*</bpt>loss<ept id="p1">*</ept>, not data <bpt id="p2">*</bpt>theft<ept id="p2">*</ept>.</source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Recovery Time Objective<ept id="p1">**</ept>: The maximum duration of acceptable downtime, where "downtime" needs to be defined by your specification.</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For example, if the acceptable downtime duration is eight hours in the event of a disaster, then your RTO is eight hours.</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>With RPO and RTO defined, you can design backup, restore, replication, and recovery capabilities into your architecture to meet these objectives.</source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Every cloud provider offers a suite of services and features you can use to improve your application's availability and recoverability.</source>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>When possible, use existing services and best practices, and try to resist creating your own.</source>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Hard drives can fail, datacenters can become unreachable, and hackers can attack.</source>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>It's important that you maintain a good reputation with your customers using availability and recoverability.</source>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Availability focuses on maintaining uptime through conditions like network outages, and recoverability focuses on retrieving data after a disaster.</source>
        </trans-unit></group></body></file></xliff>