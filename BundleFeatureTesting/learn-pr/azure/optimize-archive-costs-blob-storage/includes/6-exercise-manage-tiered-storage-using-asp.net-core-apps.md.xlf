<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="6-exercise-manage-tiered-storage-using-asp.net-core-apps.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1931010" tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6-exercise-manage-tiered-storage-using-asp.net-core-apps.d588e7bd4858072d3530501d66ba71d54528510a.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a8c8d386a7e05d0f92d19a7d46e46718910237bd</xliffext:ms.openlocfilehash><xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/13/2019</xliffext:ms.lasthandoff><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\optimize-archive-costs-blob-storage\includes\6-exercise-manage-tiered-storage-using-asp.net-core-apps.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>You're now going to test out some sample .NET code to retrieve and modify tier levels for some example Azure Storage blobs.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>You'll create a new BlobStorage account, and set the account to Cool.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Then you'll upload some data, and then use the app to modify the storage tiers.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Download the code and sample data</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In this first step, you'll download source code and sample data to your Cloud Shell storage.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Run the following commands in the Cloud Shell to download source code and sample data to the storageapp folder in your Cloud Shell storage:</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Use the CLI to create a new blob storage account</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You'll now create a new BlobStorage account, and retrieve the account storage key.</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Run the following commands in the Cloud Shell to create a new BlobStorage account set to Cool:</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Run the following command in the Cloud Shell to retrieve the storage key for the account:</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Create container and upload data</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In this step, you'll create a blob container and three blobs, each containing some sample data.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Run the following command in the Cloud Shell to create a new container:</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Run the following commands in the Cloud Shell to blobs with sample data:</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Set the tier for each blob</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In this step, you'll set the access tier for each blob.</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Run the following command in the Cloud Shell to set blob1 as Archive:</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Run the following command in the Cloud Shell to set blob2 as Cool:</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Run the following command in the Cloud Shell to set blob3 as Hot:</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Manage storage tiers in code</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You're now ready to deploy and test out some code.</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>First you'll set the environment variables required by the sample app.</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You'll then build and run the sample app (ignore the warnings about the Microsoft.Azure.KeyVault.Core package).</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Run the following commands in the Cloud Shell to store the environment variables used by the app:</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Run the following command in the Cloud Shell to build and run the <bpt id="p1">**</bpt>ManageStorageTiers<ept id="p1">**</ept> app:</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The ManageStorageTiers app now connects to your blob storage, queries the three blobs named blob1, blob2, and blob3.</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>It will then changes the storage tier of all three blobs, and query the storage tier of each blob again to verify the change.</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The Archive tier will not have changed, due to rehydration latency.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Review the app code</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In this final step, you'll take a look at the code used by the ManageStorageTiers app to manage and change access tiers.</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In the Cloud Shell, use the editor to open ManageStorageTiers\Program.cs.</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The key parts of the app are the lines of code that look like this:</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This code sets the storage tier for a block blob.</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The code in the <bpt id="p1">**</bpt>DisplayBlobTiers<ept id="p1">**</ept> method retrieves the storage tier for blobs.</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The important line is:</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This code obtains the storage tier from the Properties collection of the blob.</source>
        </trans-unit></group></body></file></xliff>