<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="4-design-a-feedback-sorter.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1931010" tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4-design-a-feedback-sorter.339d1a65abb1f01bee6ccf015fbc84cb3fce9f44.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9c02a731189fe6411be5ec59b7644b09412b87bc</xliffext:ms.openlocfilehash><xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/13/2019</xliffext:ms.lasthandoff><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\classify-user-feedback-with-the-text-analytics-api\includes\4-design-a-feedback-sorter.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Let's put our knowledge of Text Analytics to work in a practical solution.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Our solution will focus on Sentiment Analysis of text documents.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Let's set the context by describing the problem we want to tackle.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Manage customer feedback more efficiently</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Social media is active with talk of your company's product.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Your feedback email alias is also active with customers eager to share their opinion of your product.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>As is the case with any new startup, you live by the mantra of listening to your customers.</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>However, the success of your product has made keeping this promise easier said than done.</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>It's a good problem but a problem all the same.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The team can't keep up with the volume of feedback anymore.</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>They need help sorting the feedback so that issues can be managed as efficiently as possible.</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>As the lead developer in the organization, you have been asked to build a solution.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Let's look at some high-level requirements:</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Requirement</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Details</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Categorize feedback so we can react to it.</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Not all feedback is equal.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Some is glowing testimony.</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Other feedback is scathing criticism from a frustrated customer.</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Perhaps you can't tell what the customer wants in other cases.</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>At a minimum, having an indication of the sentiment, or tone, of feedback would help us categorize it.</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The solution should scale up or down to meet demand.</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>We're a startup.</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Fixed costs are difficult to justify, and we haven't figured out the exact pattern of feedback traffic.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>We'll need a solution that can tackle bursts of activity, but cost as little as possible during quiet times.</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A serverless architecture billed on a consumption plan is a good candidate in this case.</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Produce a Minimal Viable Product (MVP), but make the solution adaptable.</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Today, we want to categorize feedback so we can apply our limited resources to the feedback that matters.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If a customer is frustrated, we want to know immediately and start chatting with them.</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In the future, we'll enhance this solution to do more.</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>One idea for a new feature is to examine key phrases in feedback to detect pain points before they reach critical mass with our customers.</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Another idea is to automate responses back to customers who are either positive or neutral.</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Even though they love us, we want them to know we are still listening to their feedback.</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A solution that offers a plug-and-play architecture is a good fit here.</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>We could, for example, use queues as a form of factory line.</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You perform one task, then place the result into a queue for the next part of the system to pick it up and process.</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Deliver quickly.</source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>We've all heard this one before!</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Remember, this solution is an MVP, and we want to test it with our scenario quickly.</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To deliver at speed and with quality will mean writing less code.</source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Taking advantage of the Text Analytics API means we don't have to train a model to detect sentiment.</source>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Using Azure Functions and binding to queues declaratively reduces the amount of code we have to write.</source>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A serverless solution also means we don't have to worry about server management.</source>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Our proposed solution for each requirement in the preceding table offers a glimpse into how to map requirements to solutions.</source>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Let's now see what a solution might look like based on Azure.</source>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A solution based on Azure Functions, Azure Queue Storage, and Text Analytics API</source>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The following diagram is a design proposal for a solution.</source>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>It uses three core components of Azure: Azure Queue Storage, Azure Functions, and Azure Cognitive Services.</source>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Conceptual diagram of a feedback sorting architecture.</source>
        </trans-unit><trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The idea is that text documents containing user feedback are placed into a queue that we've named <bpt id="p1">*</bpt>new-feedback-q<ept id="p1">*</ept> in the preceding diagram.</source>
        </trans-unit><trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The arrival of a message containing the text document into the queue will trigger, or start, function execution.</source>
        </trans-unit><trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The function reads messages containing new documents from the input queue and sends them for analysis to the Text Analytics API.</source>
        </trans-unit><trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Based on the results that the API returns, a new message containing the document is placed into an output queue for further processing.</source>
        </trans-unit><trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The result we get back for each document is a sentiment score.</source>
        </trans-unit><trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The output queues are used to store feedback sorted into positive, neutral, and negative.</source>
        </trans-unit><trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Hopefully, the negative queue will always be empty!</source>
        </trans-unit><trans-unit id="157" translate="yes" xml:space="preserve">
          <source>:-) Once we've bucketed each incoming piece of feedback into an output queue based on sentiment, you can imagine adding logic to take action on the messages in each queue.</source>
        </trans-unit><trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Let's look at a flowchart next to see what the function logic needs to do.</source>
        </trans-unit><trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Flowchart of the logic inside the Azure function to sort text documents by sentiment into output queues.</source>
        </trans-unit><trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Our logic is like a router.</source>
        </trans-unit><trans-unit id="161" translate="yes" xml:space="preserve">
          <source>It takes text input and routes it to an output queue based on the sentiment score of the text.</source>
        </trans-unit><trans-unit id="162" translate="yes" xml:space="preserve">
          <source>We have a dependency on Text Analytics API.</source>
        </trans-unit><trans-unit id="163" translate="yes" xml:space="preserve">
          <source>While the logic seems trivial, this function will remove the need for people on the team to analyze feedback manually.</source>
        </trans-unit><trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Steps to implement our solution</source>
        </trans-unit><trans-unit id="165" translate="yes" xml:space="preserve">
          <source>To implement the solution described in this unit, we'll need to complete the following steps.</source>
        </trans-unit><trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Create a function app to host our solution.</source>
        </trans-unit><trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Look for sentiment in incoming feedback messages using the Text Analytics API.</source>
        </trans-unit><trans-unit id="168" translate="yes" xml:space="preserve">
          <source>We'll use our access key from the preceding exercise and write some code to send the requests.</source>
        </trans-unit><trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Post feedback to processing queues based on sentiment.</source>
        </trans-unit><trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Let's move on to creating our function app.</source>
        </trans-unit></group></body></file></xliff>