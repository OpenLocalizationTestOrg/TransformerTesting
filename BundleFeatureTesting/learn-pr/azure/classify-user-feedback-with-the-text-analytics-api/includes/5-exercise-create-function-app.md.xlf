<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="5-exercise-create-function-app.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff"  tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5-exercise-create-function-app.05e246.e57bb5496f1730157748030dbf813361a5d64ec6.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e57bb5496f1730157748030dbf813361a5d64ec6</xliffext:ms.openlocfilehash><xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba7e452ac39d7f09a5646044b44de0e1cdc54982</xliffext:ms.sourcegitcommit><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\classify-user-feedback-with-the-text-analytics-api\includes\5-exercise-create-function-app.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>A function app provides a context for managing and executing your functions.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Let's create a function app and then add a function to it.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Create a Function App to host our function</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Sign into the <bpt id="p1">[</bpt>Azure portal<ept id="p1">](https://portal.azure.com/learn.docs.microsoft.com?azure-portal=true)</ept> using the same account you activated the sandbox with.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Create a resource<ept id="p1">**</ept> button found on the upper left-hand corner of the Azure portal, and then select <bpt id="p2">**</bpt>Compute<ept id="p2">**</ept><ph id="ph1"> &gt; </ph><bpt id="p3">**</bpt>Function App<ept id="p3">**</ept>.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Enter the function app settings as specified in the following table.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Setting</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>App name<ept id="p1">**</ept></source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Globally unique name</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name that identifies your new function app.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Valid characters are <ph id="ph1">`a-z`</ph>, <ph id="ph2">`0-9`</ph>, and <ph id="ph3">`-`</ph>.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Subscription<ept id="p1">**</ept></source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Concierge Subscription<ept id="p1">**</ept></source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The subscription under which this new function app is created.</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Resource group<ept id="p1">**</ept></source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><bpt id="p2">&lt;rgn&gt;</bpt>[sandbox resource group name]<ept id="p2">&lt;/rgn&gt;</ept><ept id="p1">**</ept></source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Name for the resource group in which to create your function app.</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Make sure to select <bpt id="p1">**</bpt>Use existing<ept id="p1">**</ept> and use the resource group from the last exercise.</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>That way, all the resources we make in this module are kept together.</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>OS<ept id="p1">**</ept></source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Windows</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The operating system that hosts the function app.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Hosting Plan<ept id="p1">**</ept></source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Consumption plan</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Hosting plan that defines how resources are allocated to your function app.</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In the default <bpt id="p1">**</bpt>Consumption Plan<ept id="p1">**</ept>, resources are added dynamically as required by your functions.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In this <bpt id="p1">[</bpt>serverless<ept id="p1">](https://azure.microsoft.com/overview/serverless-computing/)</ept> hosting, you only pay for the time your functions run.</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Location<ept id="p1">**</ept></source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Select the same location you used earlier.</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Choose a region near you or near other services your functions access.</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Select the same region that you used when creating the Text Analytics API account in the last exercise.</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Runtime Stack<ept id="p1">**</ept></source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>JavaScript</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The sample code in this module is written in JavaScript.</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Storage<ept id="p1">**</ept></source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Globally unique name</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Name of the new storage account used by your function app.</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Storage account names must be between 3 and 24 characters in length and may contain numbers and lowercase letters only.</source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This dialog populates the field with a unique name that is derived from the name you gave the app.</source>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>However, feel free to use a different name or even an existing account.</source>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Create<ept id="p1">**</ept> to provision and deploy the function app.</source>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Select the Notification icon in the upper-right corner of the portal, and watch for a <bpt id="p1">**</bpt>Deployment in progress<ept id="p1">**</ept> message.</source>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Deployment can take some time.</source>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source>So, stay in the notification hub and  watch for a <bpt id="p1">**</bpt>Deployment succeeded<ept id="p1">**</ept> message.</source>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Once the function app is deployed, go to <bpt id="p1">**</bpt>All resources<ept id="p1">**</ept> in the portal.</source>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The function app will be listed with type <bpt id="p1">**</bpt>App Service<ept id="p1">**</ept> and has the name you gave it.</source>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Select the function app in the list, to open it.</source>
        </trans-unit><trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Congratulations!</source>
        </trans-unit><trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You've created and deployed your function app.</source>
        </trans-unit><trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Having trouble finding your function apps in the portal?</source>
        </trans-unit><trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Try <bpt id="p1">[</bpt>adding Function Apps to your favorites in the Azure portal<ept id="p1">](https://docs.microsoft.com/azure/azure-functions/functions-how-to-use-azure-function-app-settings#favorite)</ept>.</source>
        </trans-unit><trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Create a function to execute our logic</source>
        </trans-unit><trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Now that we have a function app, it's time to create a function.</source>
        </trans-unit><trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A function is activated through a trigger.</source>
        </trans-unit><trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In this module, we'll use a Queue trigger.</source>
        </trans-unit><trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The runtime will poll a queue and start this function to process a new message.</source>
        </trans-unit><trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Select the Add (<bpt id="p1">**</bpt><ph id="ph1">+</ph><ept id="p1">**</ept>) button next to <bpt id="p2">**</bpt>Functions<ept id="p2">**</ept>.</source>
        </trans-unit><trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This action starts the function creation process.</source>
        </trans-unit><trans-unit id="161" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Azure Functions for JavaScript - getting started<ept id="p1">**</ept> page, select <bpt id="p2">**</bpt>In-portal<ept id="p2">**</ept> and then select <bpt id="p3">**</bpt>continue<ept id="p3">**</ept>.</source>
        </trans-unit><trans-unit id="162" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Create a function<ept id="p1">**</ept> step, select <bpt id="p2">**</bpt>More templates...<ept id="p2">**</ept> and then select <bpt id="p3">**</bpt>Finish and view templates<ept id="p3">**</ept>.</source>
        </trans-unit><trans-unit id="163" translate="yes" xml:space="preserve">
          <source>In the list of all templates available to this function app, select <bpt id="p1">**</bpt>Azure Queue Storage trigger<ept id="p1">**</ept> .</source>
        </trans-unit><trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If you see a message saying  <bpt id="p1">**</bpt>Extensions not installed<ept id="p1">**</ept>, select <bpt id="p2">**</bpt>Install<ept id="p2">**</ept>.</source>
        </trans-unit><trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Dependency installation can take a couple of minutes.</source>
        </trans-unit><trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Please wait until the installation completes before continuing.</source>
        </trans-unit><trans-unit id="167" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>New Function<ept id="p1">**</ept> dialog that appears, enter the following values.</source>
        </trans-unit><trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Property</source>
        </trans-unit><trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit><trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit><trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>discover-sentiment-function<ept id="p1">**</ept></source>
        </trans-unit><trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Queue name</source>
        </trans-unit><trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>new-feedback-q<ept id="p1">**</ept></source>
        </trans-unit><trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Storage account connection</source>
        </trans-unit><trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>AzureWebJobsStorage<ept id="p1">**</ept></source>
        </trans-unit><trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Create<ept id="p1">**</ept> to begin the function creation process.</source>
        </trans-unit><trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A function is created in your chosen language using the Queue Trigger function template.</source>
        </trans-unit><trans-unit id="178" translate="yes" xml:space="preserve">
          <source>While we'll implement the function in JavaScript in this module, you can create a function in any <bpt id="p1">[</bpt>supported language<ept id="p1">](https://docs.microsoft.com/azure/azure-functions/supported-languages)</ept>.</source>
        </trans-unit><trans-unit id="179" translate="yes" xml:space="preserve">
          <source>When the create process is complete, the code editor opens in the portal and loads the <bpt id="p1">*</bpt>index.js<ept id="p1">*</ept> page.</source>
        </trans-unit><trans-unit id="180" translate="yes" xml:space="preserve">
          <source>This file is the code file where we write our function logic.</source>
        </trans-unit><trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Try it out</source>
        </trans-unit><trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Let's test what we have so far.</source>
        </trans-unit><trans-unit id="183" translate="yes" xml:space="preserve">
          <source>We haven't written any code yet, so this test is to make sure what we've configured so far, runs.</source>
        </trans-unit><trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> at the top of the code editor.</source>
        </trans-unit><trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Observe the <bpt id="p1">**</bpt>Logs<ept id="p1">**</ept> tab that opens at the bottom of the screen.</source>
        </trans-unit><trans-unit id="186" translate="yes" xml:space="preserve">
          <source>If everything works as planned, you'll see a message similar to the following message.</source>
        </trans-unit><trans-unit id="187" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>Screenshot of response message of a successful call to our function.<ph id="ph2">](../media/func-default-run.PNG)</ph></source>
        </trans-unit><trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> button started our function and passed <bpt id="p2">*</bpt>sample queue data<ept id="p2">*</ept>, the default text from the <bpt id="p3">**</bpt>Test<ept id="p3">**</ept> request window to our function.</source>
        </trans-unit><trans-unit id="189" translate="yes" xml:space="preserve">
          <source>If the function times out or does not return successfully, try restarting the functions app.</source>
        </trans-unit><trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Select your functions app in the menu on the left and then select <bpt id="p1">**</bpt>Restart<ept id="p1">**</ept> from the <bpt id="p2">*</bpt>Overview<ept id="p2">*</ept> panel.</source>
        </trans-unit><trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Wait for the functions app to restart and then try running your function again.</source>
        </trans-unit><trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Nice work!</source>
        </trans-unit><trans-unit id="193" translate="yes" xml:space="preserve">
          <source>You've successfully added a Queue-triggered function to your function app and tested to make sure it's working as expected!</source>
        </trans-unit><trans-unit id="194" translate="yes" xml:space="preserve">
          <source>We'll add more functionality to the function in the next exercise.</source>
        </trans-unit><trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Let's look briefly at the function's other file, the <bpt id="p1">*</bpt>function.json<ept id="p1">*</ept> config file.</source>
        </trans-unit><trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The configuration data from this file is shown in the following JSON listing.</source>
        </trans-unit><trans-unit id="197" translate="yes" xml:space="preserve">
          <source>As you can see, this function has a trigger binding named <bpt id="p1">**</bpt>myQueueItem<ept id="p1">**</ept> of type <ph id="ph1">`queueTrigger`</ph>.</source>
        </trans-unit><trans-unit id="198" translate="yes" xml:space="preserve">
          <source>When a new message arrives in the queue we've named <bpt id="p1">**</bpt>new-feedback-q<ept id="p1">**</ept>, our function is called.</source>
        </trans-unit><trans-unit id="199" translate="yes" xml:space="preserve">
          <source>We reference the new message through the myQueueItem binding parameter.</source>
        </trans-unit><trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Bindings really do take care of some of the heavy lifting for us!</source>
        </trans-unit><trans-unit id="201" translate="yes" xml:space="preserve">
          <source>In the next step, we'll add code to call the Text Analytics API service.</source>
        </trans-unit><trans-unit id="202" translate="yes" xml:space="preserve">
          <source>You can see index.js and function.json by expanding the <bpt id="p1">**</bpt>View Files<ept id="p1">**</ept> menu on the right of the function panel in the Azure portal.</source>
        </trans-unit><trans-unit id="203" translate="yes" xml:space="preserve">
          <source>This exercise was all about getting our Azure Functions infrastructure in place.</source>
        </trans-unit><trans-unit id="204" translate="yes" xml:space="preserve">
          <source>We have a working function hosted in a function app that runs when a new message arrives in our queue that we've named <ph id="ph1">[!INCLUDE [input-q](./q-name-input.md)]</ph>.</source>
        </trans-unit><trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The real fun begins in the next exercise when we add code to call an Azure Cognitive Service to do sentiment analysis.</source>
        </trans-unit></group></body></file></xliff>