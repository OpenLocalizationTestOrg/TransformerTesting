<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="8-summary.yml" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1931010" tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8-summary.7b6a21c5c167a6d53b231188a1fa73f951dd6c07.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">99f0848256fe54856de98984d1f544a3fbe96a8e</xliffext:ms.openlocfilehash><xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/13/2019</xliffext:ms.lasthandoff><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\work-with-mutable-and-partial-data-in-a-redis-cache\8-summary.yml</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source>Summary</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source>Summary</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source>Summary</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source>Check your knowledge</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source>What happens if a command in a Redis transaction fails?</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source>If a command is queued with incorrect syntax, the transaction will be automatically discarded if you try to execute it.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source>If a command fails during execution, the transaction will complete as normal.</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source>In Redis, commands that fail during execution do not stop a transaction.</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source>Commands queued with incorrect syntax will prevent the transaction from being executed.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source>Commands prior to the failing command will still be executed, but those after the failing command will not be.</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source>A failing command in a transaction will not prevent later commands from being executed.</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source>The entire transaction will be rolled back.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source>Redis does not support transaction rollbacks.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source>The connection will be aborted.</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source>Failed commands do not cause a Redis connection to be aborted.</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source>Which of the following is a Redis command for managing data expiration?</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source>DEL</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source>DEL is used to delete keys.</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source>DISCARD</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source>DISCARD is used to cancel a transaction prior to its execution.</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source>TIMEOUT</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source>TIMEOUT is not a valid Redis command.</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source>EXPIRE</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source>EXPIRE is used to set the expiration timeout of a key in seconds.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source>Your Redis cache is configured with the <bpt id="p1">**</bpt>volatile-ttl<ept id="p1">**</ept> eviction policy.</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source>If it runs out of memory and you try to insert a new key, which existing key is removed?</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source>The least recently used key.</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source>This is the behavior of the <bpt id="p1">**</bpt>allkeys-lru<ept id="p1">**</ept> eviction policy.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source>A random key.</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source>This is the behavior of the <bpt id="p1">**</bpt>allkeys-random<ept id="p1">**</ept> policy.</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source>The key that would next expire.</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source><bpt id="p1">**</bpt>volatile-ttl<ept id="p1">**</ept> removes the key with the shortest time-to-live.</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source>A random key, selected from keys that have been configured to expire.</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve" uid="learn.work-with-mutable-and-partial-data-in-a-redis-cache.8-summary">
          <source>This is the behavior of the <bpt id="p1">**</bpt>volatile-random<ept id="p1">**</ept> policy.</source>
        </trans-unit></group></body></file></xliff>