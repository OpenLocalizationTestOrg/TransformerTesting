<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="6-explore-your-visual-studio-app-project.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1931010" tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6-explore-your-visual-studio-app-project.7fd670accd8b846329b812aedcf935e05c235907.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4c15779b87b42cfb822ea771ad8e64e56d3471bd</xliffext:ms.openlocfilehash><xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/24/2019</xliffext:ms.lasthandoff><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\azure\publish-azure-web-app-with-visual-studio\includes\6-explore-your-visual-studio-app-project.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>You've successfully created your web app and published it to Azure, but what happens when you want to make changes?</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Visual Studio will remember where the app is published, which makes updating and changing your app a two-click process.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Explore the project structure</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>We've created an ASP.NET web app in Visual Studio, and now you will need to edit and customize your website.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Let's explore the project structure to see what Visual Studio has created for us.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Dependencies include the ASP.NET internals to get your app up and running.</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Unless you are adding specific third-party packages, you won't need to spend much time in this folder.</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Properties</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The properties folder contains configuration data for where you are hosting your web app.</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If you expand the <bpt id="p1">**</bpt>PublishProfiles<ept id="p1">**</ept> folder now, you should see the URL for the Alpine Ski Hill site.</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Each publishing profile is an .xml file containing publishing configuration information, such as the Azure address that Visual Studio uses to upload your files.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>wwwroot</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The wwwroot file contains all of your static assets for your site, such as the .css, .js, images, and .lib files.</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When you are ready to style and add more functionality to your site, you will work in here.</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Pages</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Pages<ept id="p1">**</ept> folder includes <bpt id="p2">_</bpt><bpt id="p3">**</bpt>Razor<ept id="p3">**</ept><ept id="p2">_</ept> templates for the pages of your site.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Razor is a syntax that is built up around HTML, which has special conventions for displaying data and executing logic on your site.</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Each page in your site is represented with two code files:</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The first is a <ph id="ph1">`.cshtml`</ph> file, which is the Razor markup file.</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This file includes your display HTML and some C# logic.</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The second file is a <ph id="ph1">`.cs`</ph> file, which is the C# code-behind that includes <ph id="ph2">`PageModel`</ph> class.</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This file allows you to intercept HTTP requests and do some processing on that request before passing off any data to the Razor file.</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>appsetting.json</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This is a configuration file for ASP.NET.</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>bundleconfig.json</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The bundleconfig.json is preprocessing configuration.</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This file is making your .css and .js files smaller when they are published.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Program.cs and Startup.cs</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Program.cs and Startup.cs configure and launch your web host for your site.</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Introduction to Razor templates</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>We will want to make some basic changes to our website.</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In order to do this, you will need to have a basic understanding of how to leverage the Razor templates to customize your web app.</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>What is Razor?</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Razor is an ASP.NET syntax used to create dynamic web pages with C#.</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When a server reads a Razor page, the C# code is run before it renders the HTML.</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This allows you to generate dynamic content quickly.</source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Razor uses <ph id="ph1">`@`</ph> directives to tell ASP.NET how to process a page.</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For example, take a look at the code in the <ph id="ph1">`Contact.cshtml`</ph> page:</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`@page`</ph> directive is telling ASP.NET to process this file as a Razor page.</source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`@model`</ph> directive is telling ASP.NET to tie this Razor page with a C# class called <ph id="ph2">`ContactModel`</ph>.</source>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Razor also uses the <ph id="ph1">`@`</ph> symbol to transition between code and HTML.</source>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If you look at the snippet above, you'll notice <ph id="ph1">`@{ ... }`</ph>.</source>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This is a <bpt id="p1">**</bpt>Razor code block<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>It's code which is <bpt id="p1">_</bpt>executed but not rendered<ept id="p1">_</ept>.</source>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To render the output of a code statement, we use the <ph id="ph1">`@`</ph> in front of a C# expression.</source>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source>We have two examples of that in the code block above in the <ph id="ph1">`&lt;h2&gt;`</ph> and <ph id="ph2">`&lt;h3&gt;`</ph> tags.</source>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Creating and publishing a website are just the first steps in creating a good website.</source>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Once you start to add content, you'll need to update your site.</source>
        </trans-unit><trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Once you've initially published your site to Azure, you can update at any time.</source>
        </trans-unit></group></body></file></xliff>