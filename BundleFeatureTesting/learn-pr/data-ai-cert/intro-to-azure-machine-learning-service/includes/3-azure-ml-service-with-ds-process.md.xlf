<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="3-azure-ml-service-with-ds-process.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff"  tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3-azure-ml-service-with-ds-process.14df52.9793aed9a56fa85f3a7a96d48d168b5509c99c34.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9793aed9a56fa85f3a7a96d48d168b5509c99c34</xliffext:ms.openlocfilehash><xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba7e452ac39d7f09a5646044b44de0e1cdc54982</xliffext:ms.sourcegitcommit><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\data-ai-cert\intro-to-azure-machine-learning-service\includes\3-azure-ml-service-with-ds-process.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>To understand the Azure Machine Learning service, let's consider how it fits into the machine learning development process illustrated below.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The illustration depicts the machine learning process that is explained in this unit.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Environment setup</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You start by creating a <bpt id="p1">*</bpt>workspace<ept id="p1">*</ept>, which is a place in Azure for you to store machine learning work.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can create a workspace in the Azure portal or from within Python code.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>An experiment object is created within the workspace to store information about runs for the models that you train and test.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can have multiple experiment objects in a workspace.</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The Azure Machine Learning service allows you to interact with a workspace by using your preferred integrated development environment (IDE), such as a local Jupyter notebook, PyCharm, or a notebook in Azure Notebooks (a cloud version of Jupyter Notebook).</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>As you will see later in this module, it's easy to configure the environment.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Data preparation</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Before you can train a model, you must explore and analyze the source data to determine its quality and to select data for model features.</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Typically, this involves statistical analysis and the use of visualizations.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Then, in the data wrangling step, you clean up the data and apply transformations to prepare it for use in model training.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can use whatever Python modules you like for data preparation, including Pandas or the Azure Machine Learning Data Preparation SDK called <bpt id="p1">**</bpt>Azureml.dataprep<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Experimentation</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Experimentation<ept id="p1">*</ept> is the iterative process of model training and testing.</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Open-source packages like Scikit-learn, TensorFlow, and others are supported.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>After building a model, you can train it locally or on a remote computer.</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A key feature of the Azure Machine Learning service is the ability to run model training and evaluation in Azure containers.</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>It's simple to monitor remote model execution and retrieve output by using the Azureml package.</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You also must create and configure a compute target object, which is used to provision computing resource.</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>After you have the model you want to use in production, you register the model in the workspace.</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Deployment</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>After ensuring that the model runs correctly in the local environment and is performing at the accuracy level that you want, you can deploy the model.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You will create a Docker image and then deploy it to Azure Container Instances.</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Note: Other target environments are available, including Azure Kubernetes Service (AKS), Azure IoT Edge, and a field programmable gate array (FPGA).</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For the deployment, you need the following files:</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The score scripts file is needed to decide how to run the model.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The environment file is needed to specify package dependencies, which are important when using open-source packages.</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The configuration file is needed to request an appropriate amount of resources for the container.</source>
        </trans-unit></group></body></file></xliff>