<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="5-introducing-face-lists.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff"  tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5-introducing-face-lists.03a1cc.a4141eefb551286eaae336541019e5bb169a9561.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a4141eefb551286eaae336541019e5bb169a9561</xliffext:ms.openlocfilehash><xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba7e452ac39d7f09a5646044b44de0e1cdc54982</xliffext:ms.sourcegitcommit><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\data-ai-cert\identify-faces-with-computer-vision\includes\5-introducing-face-lists.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Strictly speaking, a <bpt id="p1">_</bpt>face list<ept id="p1">_</ept> is a group of faces.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Create and manage face lists to find similar faces in a fixed collection of faces.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>For example, you could use a face list to find a similar face in a set of pictures of celebrities, friends, or family members.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A face list relates to several concepts:</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Face<ept id="p1">**</ept>: A single face</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Face list<ept id="p1">**</ept>: A list or collection of faces</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Person<ept id="p1">**</ept>: A single person</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Person group<ept id="p1">**</ept>: A list or collection of persons</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Relationships among these terms can get a little fuzzy, so it's helpful to visualize them:</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The relationships between person groups and faces</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Face lists are useful when you're working on face <bpt id="p1">*</bpt>identification<ept id="p1">*</ept> and face <bpt id="p2">*</bpt>similarity<ept id="p2">*</ept>.</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Face identification</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can use the Face API to identify people by comparing a detected face to a person group.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Remember, a person group is like a database of people.</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, you might create a person group named <bpt id="p1">*</bpt>myInnerCircle<ept id="p1">*</ept>:</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An example of a person group</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can use a different face to perform identification against the person group.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If the face is identified as a person in the group, the person object is returned as a match.</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Face similarity</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Face lists are a great way to determine <bpt id="p1">_</bpt>face similarity<ept id="p1">_</ept>.</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For example, if you compare a target face against a face list, the Face API might return a small collection of faces that look similar to the target face.</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The Face API supports two working modes: match face and match person.</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Match person<ept id="p1">**</ept> returns similar faces after applying a same-person threshold that's derived from face verification.</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Match face<ept id="p1">**</ept> returns similar faces by ignoring the same-person threshold.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In the following image, face similarity would find that the first and second faces are the same person.</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>It would find that the third and fourth faces are similar.</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Diagram that shows how identification and similarity are determined in a face list</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Collection capacity</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Although you probably won't hit a collection threshold, you might want to know the capacities for Face API storage collections:</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Face list<ept id="p1">**</ept>: Up to 1,000 distinct faces</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Person group<ept id="p1">**</ept>: Up to 10,000 persons</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Person<ept id="p1">**</ept>: Up to 248 faces</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>That's a lot to digest.</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>But you'll likely find that working with the Face API is a breeze when these concepts sink in.</source>
        </trans-unit></group></body></file></xliff>