<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="4-azure-data-lake-and-blob-storage.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff"  tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4-azure-data-lake-and-blob-storage.7deb07.dd250987b70992e69b926ddaf46219f2cf9ab863.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dd250987b70992e69b926ddaf46219f2cf9ab863</xliffext:ms.openlocfilehash><xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba7e452ac39d7f09a5646044b44de0e1cdc54982</xliffext:ms.sourcegitcommit><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\data-ai-cert\introduction-to-azure-data-lake-storage\includes\4-azure-data-lake-and-blob-storage.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>In Azure Blob storage, you can store large amounts of unstructured ("object") data, in a single hierarchy, also known as a flat namespace.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>You can access this data by using HTTP or HTTPs.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Azure Data Lake Storage Gen2 builds on blob storage and optimizes I/O of high-volume data by using hierarchical namespaces that you turned on in the previous exercise.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Hierarchical namespaces organize blob data into <bpt id="p1">_</bpt>directories<ept id="p1">_</ept> and stores metadata about each directory and the files within it.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This structure allows operations, such as directory renames and deletes, to be performed in a single atomic operation.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Flat namespaces, by contrast, require several operations proportionate to the number of objects in the structure.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Hierarchical namespaces keep the data organized, which yields better storage and retrieval performance for an analytical use case and lowers the cost of analysis.</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Azure Blob storage vs. Azure Data Lake Storage</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If you want to store data <bpt id="p1">_</bpt>without performing analysis on the data<ept id="p1">_</ept>, set the <bpt id="p2">**</bpt>Hierarchical Namespace<ept id="p2">**</ept> option to <bpt id="p3">**</bpt>Disabled<ept id="p3">**</ept> to set up the storage account as an Azure Blob storage account.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can also use blob storage to archive rarely used data or to store website assets such as images and media.</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If you are performing analytics on the data, set up the storage account as an Azure Data Lake Storage Gen2 account by setting the <bpt id="p1">**</bpt>Hierarchical Namespace<ept id="p1">**</ept> option to <bpt id="p2">**</bpt>Enabled<ept id="p2">**</ept>.</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Because Azure Data Lake Storage Gen2 is integrated into the Azure Storage platform, applications can use either the Blob APIs or the Azure Data Lake Storage Gen2 file system APIs to access data.</source>
        </trans-unit></group></body></file></xliff>