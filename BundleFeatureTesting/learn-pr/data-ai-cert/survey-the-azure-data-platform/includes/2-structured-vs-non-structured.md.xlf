<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="2-structured-vs-non-structured.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1931010" tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2-structured-vs-non-structured.56e6145c9747e8af795da7953d9161c123efbfcd.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9a502c8401648a0634232f2929c03e5953875b8</xliffext:ms.openlocfilehash><xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/24/2019</xliffext:ms.lasthandoff><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\data-ai-cert\survey-the-azure-data-platform\includes\2-structured-vs-non-structured.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Azure provides many data platform technologies to meet the needs of common data varieties.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>It's worth reminding ourselves of the two broad types of data: structured data and nonstructured data.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Structured data</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In relational database systems like Microsoft SQL Server, Azure SQL Database, and Azure SQL Data Warehouse, data structure is defined at design time.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Data structure is designed in the form of tables.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This means it's designed before any information is loaded into the system.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The data structure includes the relational model, table structure, column width, and data types.</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Relational systems react slowly to changes in data requirements because the structural database needs to change every time a data requirement changes.</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>When new columns are added, you might need to bulk-update all existing records to populate the new column throughout the table.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Relational systems typically use a querying language such as Transact-SQL (T-SQL).</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Nonstructured data</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Examples of nonstructured data include binary, audio, and image files.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Nonstructured data is stored in nonrelational systems, commonly called unstructured or NoSQL systems.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In nonrelational systems, the data structure isn't defined at design time, and data is typically loaded in its raw format.</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The data structure is defined only when the data is read.</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The difference in the definition point gives you flexibility to use the same source data for different outputs.</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Nonrelational systems can also support semistructured data such as JSON file formats.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The open-source world offers four types of NoSQL databases:</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Key-value store<ept id="p1">**</ept>: Stores key-value pairs of data in a table structure.</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Document database<ept id="p1">**</ept>: Stores documents that are tagged with metadata to aid document searches.</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Graph database<ept id="p1">**</ept>: Finds relationships between data points by using a structure that's composed of vertices and edges.</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Column database<ept id="p1">**</ept>: Stores data based on columns rather than rows.</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Columns can be defined at the query's runtime, allowing flexibility in the data that's returned performantly.</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Now that we've reviewed data types, let's look at common data platform technologies that facilitate the storage, processing, and querying of these data types.</source>
        </trans-unit></group></body></file></xliff>