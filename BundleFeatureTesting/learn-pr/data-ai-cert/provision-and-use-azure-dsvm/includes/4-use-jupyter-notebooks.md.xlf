<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="4-use-jupyter-notebooks.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1931010" tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4-use-jupyter-notebooks.6a82ce13779717084fddc0ef0f7403064e1e092c.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eaf1b95807d506bf82fa669e1fd4f9f4c1e9bb60</xliffext:ms.openlocfilehash><xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/24/2019</xliffext:ms.lasthandoff><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\data-ai-cert\provision-and-use-azure-dsvm\includes\4-use-jupyter-notebooks.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The Jupyter Notebook is a popular browser-based IDE for data science that is included in the DSVM.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>You can use Jupyter Notebooks to explore data and train models.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The notebooks support both R and Python programming languages â€” specifically, Python 2, Python 3, Open Source R, and the Microsoft R Server.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Although notebooks support rich annotations, they are programs that can execute entire data science pipelines.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Why use Jupyter Notebooks?</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Create presentations with Jupyter Notebooks</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The Jupyter Notebook integrates code, its output, and explanatory text all into a single document.</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Comparing to a traditional code editor, it's great for presentation because the file can contain items such as visualizations, tables, narrative texts, and equations.</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Collaborate with Jupyter Notebooks</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can export a Jupyter Notebook to different formats.</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>By downloading it as an HTML file, you can share the results with a small group of people.</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Alternatively, you can save the notebook to its native format, with the <bpt id="p1">**</bpt>.ipynb<ept id="p1">**</ept> file extension, and then upload it to GitHub for a more direct sharing.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Perform exploratory analysis with Jupyter Notebooks</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The development process on Jupyter Notebook is extremely interactive.</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You write a small piece of code, observe the output immediately, and then write another piece of code.</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This is consistent with what data scientists do in their day-to-day work because data science is an iterative and exploratory process.</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Use multiple programming languages with Jupyter Notebooks</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The Jupyter Notebook is a machine learning development environment for virtually any language.</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Jupyter Notebooks use a kernel-based architecture that separates the language interpreter from the notebook.</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Within the notebook you can use any language that has a Jupyter language kernel.</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>All popular data science languages, including Python, R, Julia, and Java have kernels available.</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Create a simple Jupyter notebook.</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To Use Jupyter Notebook, click the start menu tile, or the <bpt id="p1">**</bpt>Jupyter<ept id="p1">**</ept> icon on the desktop:</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Screenshot of the Start menu with the Jupyter Notebook tile selected.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Under the <bpt id="p1">**</bpt>Files<ept id="p1">**</ept> tab, you can see the list of folders and files in the current directory.</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Select the location where you want to create your notebook.</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In the right upper corner, click <bpt id="p1">**</bpt>New<ept id="p1">**</ept> to create a new notebook and select <bpt id="p2">**</bpt>Python 3<ept id="p2">**</ept> as the target language.</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Notice several language kernels are installed for you but you can install more if you like.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Screenshot of the Jupyter, with the File tab selected.</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The New drop-down menu is selected as well.</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A new notebook is created, and an empty code cell waits for your input.</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You can run, add, remove, or edit the cells.</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The toolbar buttons allow you to complete various operations on selected cells such as: Delete, Copy, Move, and Run.</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Type the following code into the cell and hit <bpt id="p1">&lt;kbd&gt;</bpt>Shift<ept id="p1">&lt;/kbd&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;kbd&gt;</bpt>Enter<ept id="p2">&lt;/kbd&gt;</ept> at the end of the line to run the cell.</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Two commonly used keyboard shortcuts are <bpt id="p1">&lt;kbd&gt;</bpt>Ctrl<ept id="p1">&lt;/kbd&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;kbd&gt;</bpt>Enter<ept id="p2">&lt;/kbd&gt;</ept> to run the selected cell, and <bpt id="p3">&lt;kbd&gt;</bpt>Shift<ept id="p3">&lt;/kbd&gt;</ept><ph id="ph2">+</ph><bpt id="p4">&lt;kbd&gt;</bpt>Enter<ept id="p4">&lt;/kbd&gt;</ept>** to run the selected cell, move to the next cell when the selected cell is not the last one, and add a new cell.</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To open a full list of keyboard shortcuts, click on the keyboard icon in the toolbar.</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>Screenshot of the Keyboard icon.<ph id="ph2">](../media/4-keyboard-icon.png)</ph></source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>You should see it echo "Hello World" below the cell.</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>By default, cells execute in the <bpt id="p1">*</bpt>kernel<ept id="p1">*</ept>, which is a computational engine that executes the code contained in the cell.</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Jupyter notebooks support other cell types - use the <bpt id="p1">**</bpt>Insert &gt; Insert Cell Below<ept id="p1">**</ept> menu option to add a new cell to the notebook.</source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Select the new cell by clicking in the input area (it will have a colored line next to it when selected).</source>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>In the menu header, find the cell type - it's a drop down list which likely has "Code" selected currently.</source>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Select "Heading" from the list.</source>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Screenshot showing the cell type dropdown list.</source>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Don't worry about the raw cell type; this cell type is used to format output when exporting the notebook using the NBConvert tool.</source>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Heading cell types are just Markdown headers which are prefixed with <ph id="ph1">`#`</ph> to create an H1/H2/H3/H4 heading.</source>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Type <ph id="ph1">`### This is a heading`</ph> into the cell.</source>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Add another cell by typing <bpt id="p1">&lt;kbd&gt;</bpt>Shift<ept id="p1">&lt;/kbd&gt;</ept><ph id="ph1">+</ph><bpt id="p2">&lt;kbd&gt;</bpt>Enter<ept id="p2">&lt;/kbd&gt;</ept> and change the cell type to "Markdown".</source>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Set the value to "<ph id="ph1">\`</ph>This is Markdown<ph id="ph2">\`</ph>" without the quotes - notice the backtick character - this denotes a "code" block and it will be formatted with a monospace font.</source>
        </trans-unit><trans-unit id="150" translate="yes" xml:space="preserve">
          <source>You can use any Markdown syntax here to document or annotate your Python code.</source>
        </trans-unit><trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Screenshot of Jupyter executing Markdown.</source>
        </trans-unit><trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Notice that the Python cell you entered first has an <bpt id="p1">**</bpt>In<ept id="p1">**</ept> prefix.</source>
        </trans-unit><trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Output from the <bpt id="p1">**</bpt>In<ept id="p1">**</ept> executed code displays in the cell immediately below, and is labeled <bpt id="p2">**</bpt>Out<ept id="p2">**</ept>.</source>
        </trans-unit><trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Add a new code cell to the bottom and type in the following Python code.</source>
        </trans-unit><trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Execute the cell.</source>
        </trans-unit><trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Notice that it shows an <bpt id="p1">**</bpt>Out<ept id="p1">**</ept> cell with the cell number in brackets as shown in the following image.</source>
        </trans-unit><trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Screenshot of the Jupyter execution results.</source>
        </trans-unit><trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Under the code is a plot line graph.</source>
        </trans-unit></group></body></file></xliff>