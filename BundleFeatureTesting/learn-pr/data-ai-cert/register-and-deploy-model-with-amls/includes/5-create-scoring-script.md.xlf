<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="5-create-scoring-script.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff"  tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5-create-scoring-script.873e87.1b1860cc37e087ad23607f72e7e9db2833237233.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b1860cc37e087ad23607f72e7e9db2833237233</xliffext:ms.openlocfilehash><xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba7e452ac39d7f09a5646044b44de0e1cdc54982</xliffext:ms.sourcegitcommit><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\data-ai-cert\register-and-deploy-model-with-amls\includes\5-create-scoring-script.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Container images allow users to deploy models reliably since the machine learning model always depends on some other dependencies such as <bpt id="p1">[</bpt>PyTorch<ept id="p1">](https://pytorch.org/)</ept>.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Using containers to deploy machine learning models can avoid dependency issues.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A container image has the following items packaged, which you need to prepare:</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The model itself</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The inference engine, such as PyTorch</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The scoring file (<ph id="ph1">`score.py`</ph>) or other application consuming the model</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Any dependencies needed</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The first step is to create the <ph id="ph1">`score.py`</ph> file that consumes the model, like below.</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You only need to define two functions: <ph id="ph1">`init`</ph>, which loads the model and <ph id="ph2">`run`</ph>, which does the inference:</source>
        </trans-unit></group></body></file></xliff>