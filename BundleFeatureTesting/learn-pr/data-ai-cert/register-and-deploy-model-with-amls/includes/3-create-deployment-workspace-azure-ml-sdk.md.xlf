<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="3-create-deployment-workspace-azure-ml-sdk.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1931010" tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3-create-deployment-workspace-azure-ml-sdk.e13616a5b12ae0c5176b70a03e64bb36f2ccf429.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">18db240165930cd195064fb249f75aeac58ed0b0</xliffext:ms.openlocfilehash><xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/24/2019</xliffext:ms.lasthandoff><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\data-ai-cert\register-and-deploy-model-with-amls\includes\3-create-deployment-workspace-azure-ml-sdk.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>While the Azure portal is an easy method to create a workspace, a more common technique is to create it as part of you tool setup.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>As an example, we can use the Azure Machine Learning SDK for Python to create a workspace using the Python language.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You will need to have Python 3.7 or better installed to complete this exercise.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Verify Python installation</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can verify you have the proper version of Python installed using a command prompt.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Open a command prompt or terminal window and type <ph id="ph1">`python`</ph>.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>It will respond with a version number if it's installed and wait for another command in an interactive read-eval-print-loop (REPL).</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Type <ph id="ph1">`exit()`</ph> to exit the REPL.</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Install the Azure ML SDK</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Once you have Python installed, you can install the Azure Machine Learning SDK.</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Open a local command prompt and type the following command to install the SDK.</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This will download and install all the required dependencies and setup the environment so the libraries will be available to your Python programs.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>It may take a few minutes to complete depending on what you have installed already.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Verify the install</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>After the SDK is installed, we can check the installation with a simple Python app.</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Type <ph id="ph1">`python`</ph> to run the interactive REPL environment.</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Enter the following code into the console.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You should see something like:</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Type <ph id="ph1">`quit()`</ph> to exit the REPL.</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Create an Azure ML service workspace with Python</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>After the SDK is successfully installed, you can create an Azure Machine Learning service workspace.</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The value you need is the Azure <bpt id="p1">_</bpt>subscription id<ept id="p1">_</ept>. You can find your subscriptions in the Azure portal through the <bpt id="p2">**</bpt>Subscriptions<ept id="p2">**</ept> item in the left sidebar, or by typing "Subscriptions" into the global search box.</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Screenshot showing search bar in Azure portal searching for "subscriptions"</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Locate the subscription you want to use and replace the <ph id="ph1">`{azure-subscription-id}`</ph> value below with the subscription id value.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The SDK will ask you to sign into your Azure account if you are not already signed in.</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If you didn't create the workspace in the Azure portal, you won't have a resource group named <bpt id="p1">**</bpt>mslearn-amls<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In that case, make sure to change the value of the <ph id="ph1">`create_resource_group`</ph> parameter in the following code to <ph id="ph2">`True`</ph> so the SDK creates the resource group for you.</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Workspace.create`</ph> function returns the created <ph id="ph2">`Workspace`</ph> object which we will use as we go along.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Make sure to keep the Python window open.</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>We are storing it here in the variable <ph id="ph1">`ws`</ph>.</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This command will display progress for all the created Azure resources as it creates the workspace.</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>As with the portal approach, it takes a few minutes to set up the workspace.</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>After the workspace is provisioned, you can view the workspace details, such as the associated Azure Blob Storage account, Docker container registry account, and key vault through the returned <ph id="ph1">`ws`</ph> object - try executing the <ph id="ph2">`get_details()`</ph> function on it.</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This returns a JSON block with all the created details.</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>It will look something like:</source>
        </trans-unit></group></body></file></xliff>