<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="5-implement-crud.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1931010" tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5-implement-crud.b40252b45c0a2fc9229cbd6380a59e61c33b9f77.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">819118115ac34a40bf6c37b618fff91c89d5232f</xliffext:ms.openlocfilehash><xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/13/2019</xliffext:ms.lasthandoff><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\aspnetcore\build-web-api-net-core\includes\5-implement-crud.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>When the retailer's storefront UI is built, it should display all products in inventory.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>To fulfill such a requirement, an action responding to an HTTP GET action verb is needed.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The following table depicts the relationship between HTTP action verbs, CRUD operations, and ASP.NET Core attributes.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For example, an HTTP PUT action verb is most often used to support an update operation.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Such an action is annotated with the <ph id="ph1">`[HttpPut]`</ph> attribute.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>HTTP action verb</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>CRUD operation</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>ASP.NET Core attribute</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>POST</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Create</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>GET</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Read</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>PUT</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Update</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>DELETE</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Delete</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In addition to the action verbs in the preceding table, a web API in ASP.NET Core supports HEAD, OPTIONS, and PATCH.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The following sections demonstrate how to support each of these four actions in the web API.</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Retrieve a product</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Replace the <ph id="ph1">`// GET by ID action`</ph> comment in <bpt id="p1">*</bpt>Controllers/ProductsController.cs<ept id="p1">*</ept> with the following:</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The preceding action:</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Responds only to the HTTP GET verb, as denoted by the <ph id="ph1">`[HttpGet]`</ph> attribute.</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Requires that the <ph id="ph1">`id`</ph> value is included in the URL segment after <ph id="ph2">`api/products/`</ph>.</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Remember, the <ph id="ph1">`/api/products`</ph> pattern was defined by the controller-level <ph id="ph2">`[Route]`</ph> attribute.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Queries the database for a product matching the provided <ph id="ph1">`id`</ph> parameter.</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">`ActionResult`</ph> used in the preceding action is mapped to the corresponding HTTP status code in the following table.</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>ASP.NET Core</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>action result</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>HTTP status code</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Ok`</ph> is implied</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>200</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A product matching the provided <ph id="ph1">`id`</ph> parameter exists in the database.</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The product is included in the response body in the media type as defined in the <ph id="ph1">`Accept`</ph> HTTP request header (JSON by default).</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>404</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A product matching the provided <ph id="ph1">`id`</ph> parameter doesn't exist in the database.</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Add a product</source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Replace the <ph id="ph1">`// POST action`</ph> comment in <bpt id="p1">*</bpt>Controllers/ProductsController.cs<ept id="p1">*</ept> with the following:</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The preceding action:</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Responds only to the HTTP POST verb, as denoted by the <ph id="ph1">`[HttpPost]`</ph> attribute.</source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Inserts the request body's <ph id="ph1">`Product`</ph> object into the database.</source>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Because the controller is annotated with the <ph id="ph1">`[ApiController]`</ph> attribute, it's implied that the <ph id="ph2">`product`</ph> parameter will be found in the request body.</source>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The first parameter in the <ph id="ph1">`CreatedAtAction`</ph> method call represents an action name.</source>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`nameof`</ph> keyword is used to avoid hard-coding the action name.</source>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CreatedAtAction`</ph> uses the action name to generate a <ph id="ph2">`Location`</ph> HTTP response header with a URL to the newly created product.</source>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">`ActionResult`</ph> used in the preceding action is mapped to the corresponding HTTP status code in the following table.</source>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source>ASP.NET Core</source>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>action result</source>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve">
          <source>HTTP status code</source>
        </trans-unit><trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit><trans-unit id="151" translate="yes" xml:space="preserve">
          <source>201</source>
        </trans-unit><trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The product was added to the database.</source>
        </trans-unit><trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The product is included in the response body in the media type as defined in the <ph id="ph1">`Accept`</ph> HTTP request header (JSON by default).</source>
        </trans-unit><trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`BadRequest`</ph> is implied</source>
        </trans-unit><trans-unit id="155" translate="yes" xml:space="preserve">
          <source>400</source>
        </trans-unit><trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The request body's <ph id="ph1">`Product`</ph> object is invalid.</source>
        </trans-unit><trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Modify a product</source>
        </trans-unit><trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Replace the <ph id="ph1">`// PUT action`</ph> comment in <bpt id="p1">*</bpt>Controllers/ProductsController.cs<ept id="p1">*</ept> with the following:</source>
        </trans-unit><trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The preceding action:</source>
        </trans-unit><trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Responds only to the HTTP PUT verb, as denoted by the <ph id="ph1">`[HttpPut]`</ph> attribute.</source>
        </trans-unit><trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Requires that the <ph id="ph1">`id`</ph> value is included in the URL segment after <ph id="ph2">`api/products/`</ph>.</source>
        </trans-unit><trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Updates the <ph id="ph1">`Name`</ph> and <ph id="ph2">`Price`</ph> properties of the product.</source>
        </trans-unit><trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Because the controller is annotated with the <ph id="ph1">`[ApiController]`</ph> attribute, it's implied that the <ph id="ph2">`product`</ph> parameter will be found in the request body.</source>
        </trans-unit><trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">`ActionResult`</ph> used in the preceding action is mapped to the corresponding HTTP status code in the following table.</source>
        </trans-unit><trans-unit id="165" translate="yes" xml:space="preserve">
          <source>ASP.NET Core</source>
        </trans-unit><trans-unit id="166" translate="yes" xml:space="preserve">
          <source>action result</source>
        </trans-unit><trans-unit id="167" translate="yes" xml:space="preserve">
          <source>HTTP status code</source>
        </trans-unit><trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit><trans-unit id="169" translate="yes" xml:space="preserve">
          <source>204</source>
        </trans-unit><trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The product was updated in the database.</source>
        </trans-unit><trans-unit id="171" translate="yes" xml:space="preserve">
          <source>400</source>
        </trans-unit><trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The request body's <ph id="ph1">`Id`</ph> value doesn't match the route's <ph id="ph2">`id`</ph> value.</source>
        </trans-unit><trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`BadRequest`</ph> is implied</source>
        </trans-unit><trans-unit id="174" translate="yes" xml:space="preserve">
          <source>400</source>
        </trans-unit><trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The request body's <ph id="ph1">`Product`</ph> object is invalid.</source>
        </trans-unit><trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Remove a product</source>
        </trans-unit><trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Replace the <ph id="ph1">`// DELETE action`</ph> comment in <bpt id="p1">*</bpt>Controllers/ProductsController.cs<ept id="p1">*</ept> with the following:</source>
        </trans-unit><trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The preceding action:</source>
        </trans-unit><trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Responds only to the HTTP DELETE verb, as denoted by the <ph id="ph1">`[HttpDelete]`</ph> attribute.</source>
        </trans-unit><trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Requires that <ph id="ph1">`id`</ph> is included in the URL path.</source>
        </trans-unit><trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Queries the database for a product matching the provided <ph id="ph1">`id`</ph> parameter.</source>
        </trans-unit><trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">`ActionResult`</ph> used in the preceding action is mapped to the corresponding HTTP status code in the following table.</source>
        </trans-unit><trans-unit id="183" translate="yes" xml:space="preserve">
          <source>ASP.NET Core</source>
        </trans-unit><trans-unit id="184" translate="yes" xml:space="preserve">
          <source>action result</source>
        </trans-unit><trans-unit id="185" translate="yes" xml:space="preserve">
          <source>HTTP status code</source>
        </trans-unit><trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit><trans-unit id="187" translate="yes" xml:space="preserve">
          <source>204</source>
        </trans-unit><trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The product was deleted from the database.</source>
        </trans-unit><trans-unit id="189" translate="yes" xml:space="preserve">
          <source>404</source>
        </trans-unit><trans-unit id="190" translate="yes" xml:space="preserve">
          <source>A product matching the provided <ph id="ph1">`id`</ph> parameter doesn't exist in the database.</source>
        </trans-unit><trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Build and run</source>
        </trans-unit><trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Run the following command:</source>
        </trans-unit><trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The web API is running and is ready for testing via curl.</source>
        </trans-unit><trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Don't forget to check <bpt id="p1">*</bpt>ContosoPets.Api.log<ept id="p1">*</ept> for troubleshooting information, if required.</source>
        </trans-unit></group></body></file></xliff>