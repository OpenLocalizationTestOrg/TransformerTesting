<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="2-create-web-api.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff"  tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2-create-web-api.d2f0a0.0b8d676aa982a6c5b5b1bc1ffddb0bca71bcf685.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b8d676aa982a6c5b5b1bc1ffddb0bca71bcf685</xliffext:ms.openlocfilehash><xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba7e452ac39d7f09a5646044b44de0e1cdc54982</xliffext:ms.sourcegitcommit><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\aspnetcore\build-web-api-net-core\includes\2-create-web-api.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The .NET Core CLI is the simplest way to create an ASP.NET Core web API.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The CLI is pre-installed in the Azure Cloud Shell environment used in this unit.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In this unit, you'll use the .NET Core CLI to create a web API within the Cloud Shell command shell to the right.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You'll also gain an understanding of the resulting project.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Create a web API project</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Scaffold and explore a web API project</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Run the following .NET Core CLI command in the command shell:</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The preceding command uses an ASP.NET Core project template, aliased as <bpt id="p1">*</bpt>webapi<ept id="p1">*</ept>, to scaffold a C#-based starter web API project.</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>contoso-pets/src/ContosoPets.Api<ept id="p1">*</ept> directory structure is created, which contains an ASP.NET Core project targeting .NET Core.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The project name matches the <bpt id="p1">*</bpt>ContosoPets.Api<ept id="p1">*</ept> directory name.</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Run the following command in the command shell:</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The current directory changes to the newly created <bpt id="p1">*</bpt>ContosoPets.Api<ept id="p1">*</ept> directory.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Run the following command in the command shell:</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>ContosoPets.Api<ept id="p1">*</ept> project directory opens in the <bpt id="p2">[</bpt>Azure Cloud Shell editor<ept id="p2">](https://docs.microsoft.com/azure/cloud-shell/using-cloud-shell-editor)</ept>.</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Examine the following files and directories:</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Controllers/<ept id="p1">*</ept></source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Contains classes with public methods exposed as HTTP endpoints.</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Program.cs<ept id="p1">*</ept></source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Contains a <ph id="ph1">`Main`</ph> method<ph id="ph2">&amp;mdash;</ph>the app's managed entry point.</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>ContosoPets.Api.csproj<ept id="p1">*</ept></source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Contains configuration metadata for the project.</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Startup.cs<ept id="p1">*</ept></source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Configures services and the app's HTTP request pipeline.</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Build and test</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Run the following .NET Core CLI command in the command shell:</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The preceding command:</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Restores the project's NuGet packages.</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Builds the project code.</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Hosts the web API with ASP.NET Core's Kestrel web server.</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Displays the background task's process ID.</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>.NET Core emits logging information and blocks command shell input.</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The command shell needs to be usable to test the running app.</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Therefore, the <ph id="ph1">`dotnet run`</ph> output is redirected to a <bpt id="p1">*</bpt>ContosoPets.Api.log<ept id="p1">*</ept> text file.</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Additionally, the <ph id="ph1">`&amp;`</ph> runs the app as a background task to unblock command shell input.</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The web API is hosted at both <ph id="ph1">`http://localhost:5000`</ph> and <ph id="ph2">`https://localhost:5001`</ph>.</source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This module uses the secure URL beginning with <ph id="ph1">`https`</ph>.</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Check <bpt id="p1">*</bpt>ContosoPets.Api.log<ept id="p1">*</ept> if you encounter any unexpected behavior.</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If the build fails or other errors occur, the log file's information helps troubleshoot.</source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If you make code changes, run <ph id="ph1">`kill $(pidof dotnet)`</ph> to stop all .NET Core apps before attempting to run again.</source>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Send an HTTP GET request to the web API:</source>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>curl<ept id="p1">](https://curl.haxx.se/)</ept> is a cross-platform command-line tool for testing web APIs and other HTTP endpoints.</source>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The preceding command uses:</source>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>HTTPS to send a request to the web API running on port 5001 of localhost.</source>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ValuesController`</ph> class' parameterless <ph id="ph2">`Get`</ph> action method handles the request.</source>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`-k`</ph> option to indicate that curl should allow insecure server connections when using HTTPS.</source>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The .NET Core SDK includes an HTTPS development certificate for testing.</source>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve">
          <source>By default, curl rejects secure connections using this certificate.</source>
        </trans-unit><trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`-s`</ph> option to suppress all output except the JSON payload.</source>
        </trans-unit><trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The JSON is sent to the <bpt id="p1">*</bpt>jq<ept id="p1">*</ept> command-line JSON processor for improved display.</source>
        </trans-unit><trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The following JSON is returned:</source>
        </trans-unit><trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Now that the web API has been created, let's modify it to meet the retailer's needs.</source>
        </trans-unit></group></body></file></xliff>