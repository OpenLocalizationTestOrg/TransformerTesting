<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="4-key-principles-1-virtuous-cycles.yml" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1931010" tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4-key-principles-1-virtuous-cycles.3ad80b5d86357740de48e55cf51332c7b8aa1c74.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">da5b7bbbb4d715f6f312ffe30db9f0615e40d979</xliffext:ms.openlocfilehash><xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/13/2019</xliffext:ms.lasthandoff><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\advocates\intro-to-site-reliability-engineering\4-key-principles-1-virtuous-cycles.yml</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>Key SRE principles and practices: virtuous cycles</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>Key SRE principles and practices: virtuous cycles</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>Key SRE principles and practices: virtuous cycles</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>Check your knowledge</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>What does SLI stand for (in an SRE context)?</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>Standard Level Indicator</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>SLI stands for Service Level Indicator.</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>Service Level Indicator</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>Safe Load Indicator</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>SLO stands for Service Level Indicator.</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>System Level Interface</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>SLO stands for Service Level Indicator.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>What does SLO stand for (in an SRE context)?</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>Service Level Outcome</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>SLO stands for Service Level Objective.</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>Standard Line Operations</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>SLO stands for Service Level Objective.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>Service Load Objective</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>SLO stands for Service Level Objective.</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>Service Level Objective</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>If you exhaust your error budget for a service, what should you do?</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>Immediately restart the service involved so it can be brought back into compliance</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>An error budget is a way of tracking the aggregate reliability of a service over time as it relates to your objectives.</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>It is important to accompany this with a shared understanding of how the organization will react should the amout of acceptable unreliability be exceeded.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>There are many possible responses, you need to choose and stick to the ones that work best in your particular context.</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>There is no one right reaction for everyone and every situation.</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>Put a hold on further releases of that software until the service has returned to the agreed upon level of reliability</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>An error budget is a way of tracking the aggregate reliability of a service over time as it relates to your objectives.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>It is important to accompany this with a shared understanding of how the organization will react should the amout of acceptable unreliability be exceeded.</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>There are many possible responses, you need to choose and stick to the ones that work best in your particular context.</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>There is no one right reaction for everyone and every situation.</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>Immediately redirect engineering resources associated with this service from feature development to fixing the reliability problem</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>An error budget is a way of tracking the aggregate reliability of a service over time as it relates to your objectives.</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>It is important to accompany this with a shared understanding of how the organization will react should the amout of acceptable unreliability be exceeded.</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>There are many possible responses, you need to choose and stick to the ones that work best in your particular context.</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>There is no one right reaction for everyone and every situation.</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>React in the service- or organizationally-specific way previously agreed upon when creating that error budget</source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>When setting up an error budget for a service, it is important to decide (and document) how the organization will respond should it be exhausted.</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>There are many possible responses, you need to choose and stick to the ones that work best in your particular context.</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>An error budget is a way of tracking the aggregate reliability of a service over time.</source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>It is important to accompany this with a shared understanding of how the organization will react should the amout of acceptable unreliability be exceeded.</source>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>There are many possible responses, you need to choose and stick to the ones that work best in your particular context.</source>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>There is no one right reaction for every one and every situation.</source>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>If you exceed your error budget for a service, what should you do?</source>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>Speed up the release cadence for that service</source>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>This is close to a possible right answer, but it leaves out a crucial component.</source>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>If the reliability of the service would still be at the desired level even if you were to do something which could potentially decrease it, it would be reasonable to "use up" that headroom by increasing the release cadence.</source>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>But that is just one possible response.</source>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>The right thing to do depends on your specific circumstances.</source>
        </trans-unit><trans-unit id="150" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>Focus more on feature development for that service and deploy those features faster</source>
        </trans-unit><trans-unit id="151" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>This is close to a possible right answer, but it leaves out a crucial component.</source>
        </trans-unit><trans-unit id="152" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>If the reliability of the service would still be at the desired level even if you were to do something which could potentially decrease it, it would be reasonable to "use up" that headroom by increasing the feature velocity.</source>
        </trans-unit><trans-unit id="153" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>But that is just one possible response.</source>
        </trans-unit><trans-unit id="154" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>The right thing to do depends on your specific circumstances.</source>
        </trans-unit><trans-unit id="155" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>It depends</source>
        </trans-unit><trans-unit id="156" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>There are many ways to "spend" an excess error budget.</source>
        </trans-unit><trans-unit id="157" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>Increasing the release cadency or feature velocity, deploying more beta features, conducting more disruptive testing, and so on.</source>
        </trans-unit><trans-unit id="158" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>It is also fine (though this comes with its own set of problems) to do nothing and simply operate at a greater level of reliabilty.</source>
        </trans-unit><trans-unit id="159" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>All of these responses are situation specific and should be decided in your specific context.</source>
        </trans-unit><trans-unit id="160" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>When a downtime or other incident occurs, should you immediately terminate the people involved?</source>
        </trans-unit><trans-unit id="161" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>Yes, the person or people who made the mistake should always take responsibility for their actions and pay the consequences</source>
        </trans-unit><trans-unit id="162" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>It is not possible to fire your way to reliable.</source>
        </trans-unit><trans-unit id="163" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>If the culture focuses on blame in these situations, the organization loses the ability to learn from incident and improve upon the processes and technology that allowed it to happen in the first place.</source>
        </trans-unit><trans-unit id="164" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>Without this feedback loop, the organization will always be forced to react to incidents instead of eliminating them.</source>
        </trans-unit><trans-unit id="165" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>No, except under certain rare and extraordinary circumstances</source>
        </trans-unit><trans-unit id="166" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>Feedback loops like blameless postmortems are crucial to continuous improvement.</source>
        </trans-unit><trans-unit id="167" translate="yes" xml:space="preserve" uid="learn.intro-to-site-reliability-engineering.4-key-principles-1-virtuous-cycles">
          <source>If an organization learns from an incident instead of firing the people involved (the people who may understand best what happened), it can work directly on the reliability of its services, systems and products.</source>
        </trans-unit></group></body></file></xliff>