<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="7-bind-the-azure-function-to-twilio.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1931010" tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7-bind-the-azure-function-to-twilio.888a8eecb87c6fe857cff49162778ecf8c19436d.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b4ad7450dad46d949cfa8631fb1558b499f3c34</xliffext:ms.openlocfilehash><xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/13/2019</xliffext:ms.lasthandoff><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\advocates\send-location-over-sms-using-azure-functions-twilio\includes\7-bind-the-azure-function-to-twilio.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>At this point, the mobile app is complete and it can send the user's location and list of phone numbers to the Azure Functions that can deserialize the data.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>In this unit, you'll bind your function to Twilio to send SMS messages.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Azure Functions can be connected to other services, either in Azure or third-party.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>These connections, called bindings, exist in two forms - input and output bindings.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Input bindings provide data to your function and output bindings take data from your function and send it to another service.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can read about bindings in the <bpt id="p1">[</bpt>Azure Functions Binding docs<ept id="p1">](https://docs.microsoft.com/azure/azure-functions/functions-triggers-bindings?azure-portal=true)</ept>.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Bindings for Azure Functions created in Visual Studio are defined using parameters to the function, decorated with attributes.</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Bind the Azure Functions to Twilio</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Sending SMS messages via Twilio requires an output binding that is configured with your account subscription ID (SID) and Auth Token.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Stop the local Azure Functions runtime if it's still running from the previous unit.</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Add the "Microsoft.Azure.WebJobs.Extensions.Twilio" NuGet package to the <ph id="ph1">`ImHere.Functions`</ph> project.</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This NuGet package contains the relevant classes for the binding.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Make sure that you also have NuGet packages for Mcrosoft.Azure.WebJobs and latest .NET SDK installed in your function.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The NuGet section for your function should look like the screenshot below:</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Screenshot showing the function NuGet dependencies</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Open the SendLocation class in the ImHere.Functions project for editing.</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Add a using directive for <ph id="ph1">`Twilio.Rest.Api.V2010.Account`</ph> to the class.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Add a new parameter called <ph id="ph1">`messages`</ph> of type <ph id="ph2">`ICollector&lt;CreateMessageOptions&gt;`</ph> to the static <ph id="ph3">`Run`</ph> method.</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Decorate the new <ph id="ph1">`messages`</ph> parameter with the <ph id="ph2">`TwilioSms`</ph> attribute as follows:</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This attribute has three parameters you need to set:</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>AccountSidSetting<ept id="p1">**</ept> - set this to <ph id="ph1">`"TwilioAccountSid"`</ph></source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This is the SID for your Twilio account that you recorded earlier in the module.</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Rather than set the SID directly, this parameter is the name of a value in the function app settings that will be used to retrieve the SID.</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>We will define this parameter later.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>AuthTokenSetting<ept id="p1">**</ept> - set this to <ph id="ph1">`"TwilioAuthToken"`</ph></source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This is the Auth Token for your Twilio account that you recorded earlier in the module.</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Rather than set the Auth Token directly, this parameter is the name of a value in the function app settings that will be used to retrieve the Auth Token.</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>We will define this parameter later.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>From<ept id="p1">**</ept> - set this to your Twilio active phone number that you recorded earlier in the module.</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The Twilio phone number that the SMS messages will come from in international format (+<ph id="ph1">\&lt;</ph>country code<ph id="ph2">\&gt;</ph><ph id="ph3">\&lt;</ph>phone number<ph id="ph4">\&gt;</ph>, for example "+1555123456").</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Make sure to remove all spaces from the phone number.</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Define TwilioSMS variables in local settings</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Function app settings can be configured locally inside the <ph id="ph1">`local.settings.json`</ph> file.</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Add your Twilio account SID and Auth Token to this JSON file using the setting names that were passed to the <ph id="ph1">`TwilioSMS`</ph> attribute.</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Open the <ph id="ph1">`local.settings.json`</ph> file in the ImHere.Functions project and replace the existing code with the following:</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Replace <ph id="ph1">\&lt;</ph>Your SID<ph id="ph2">\&gt;</ph> and <ph id="ph3">\&lt;</ph>Your Auth Token<ph id="ph4">\&gt;</ph> with the values from your Twilio dashboard.</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>These local settings will be only for running locally.</source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In a production app, these values would be your local development or test account credentials.</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Once the Azure Functions has been deployed to Azure, you'll be able to configure the production values.</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If you check your code into source control, these local application setting values will be checked in, too, so be careful not to check in any actual values in these files if your code is open source or public in any form.</source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Create the SMS messages</source>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ICollector&lt;CreateMessageOptions&gt;`</ph> parameter is a collection of <ph id="ph2">`CreateMessageOptions`</ph> instances and is used to collect the SMS messages you want to send.</source>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>After the function has finished running, any instances of <ph id="ph1">`CreateMessageOptions`</ph> added to this collection are passed to Twilio and used to create messages to be sent to the relevant recipients.</source>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">`SendLocation' class`</ph> add a using directive for <ph id="ph2">`Twilio.Types`</ph> to the class.</source>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">`SendLocation`</ph> function, add code to loop through the phone numbers in the <ph id="ph2">`PostData`</ph> and create an SMS message for each one.</source>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The message needs the phone number to send to and a body that contains the Google Maps URL created from the user's location.</source>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Log each message, and then add it to the <ph id="ph1">`messages`</ph> collection.</source>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The complete <ph id="ph1">`SendLocation`</ph> method is shown below.</source>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Your active phone number would replace the placeholder in the <ph id="ph1">`From`</ph> parameter.</source>
        </trans-unit><trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Test it out</source>
        </trans-unit><trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">`ImHere.Functions`</ph> app as the startup project and start it without debugging.</source>
        </trans-unit><trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">`ImHere.UWP`</ph> app as the startup project and run it.</source>
        </trans-unit><trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Enter your own phone number in international format (+<ph id="ph1">\&lt;</ph>country code<ph id="ph2">\&gt;</ph><ph id="ph3">\&lt;</ph>phone number<ph id="ph4">\&gt;</ph>) into the Xamarin.Forms app.</source>
        </trans-unit><trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Twilio trial accounts can send  messages only to verified phone numbers, so for now, you'll only be able to message yourself unless you upgrade to a paid account or verify other numbers.</source>
        </trans-unit><trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Send Location<ept id="p1">**</ept> button.</source>
        </trans-unit><trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If the SMS message was sent successfully, you'll see a message in the Xamarin.Forms app saying, "Location sent successfully".</source>
        </trans-unit><trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The Xamarin.Forms app showing the location as sent</source>
        </trans-unit><trans-unit id="158" translate="yes" xml:space="preserve">
          <source>In the console logs for your function, you'll see the message being created and sent.</source>
        </trans-unit><trans-unit id="159" translate="yes" xml:space="preserve">
          <source>If any errors occur (such as, the number is in the wrong format), they will be logged out here.</source>
        </trans-unit><trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The Azure Functions console showing the message has been sent</source>
        </trans-unit><trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Check your phone for a message.</source>
        </trans-unit><trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Follow the link in the message to see your location.</source>
        </trans-unit><trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The SMS message received on a mobile phone</source>
        </trans-unit><trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The location you'll see is the location where the app is running, so will be near to the data center that the VM is running from.</source>
        </trans-unit><trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If this app was running on your local device then it would show your location.</source>
        </trans-unit><trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Summary</source>
        </trans-unit><trans-unit id="167" translate="yes" xml:space="preserve">
          <source>In this unit, you learned how to create a Twilio binding for the Azure Functions and send an SMS message with the user's location to a function that was running locally.</source>
        </trans-unit><trans-unit id="168" translate="yes" xml:space="preserve">
          <source>In the next unit, you publish the function to Azure.</source>
        </trans-unit></group></body></file></xliff>