<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="2-create-your-xamarin-forms-app-with-xamarin-essentials.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff"  tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2-create-your-xamarin-forms-app-with-xamarin-essentials.b69f58.67bd2935eea1dfa006f83d18b840016e65e44fd3.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">67bd2935eea1dfa006f83d18b840016e65e44fd3</xliffext:ms.openlocfilehash><xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba7e452ac39d7f09a5646044b44de0e1cdc54982</xliffext:ms.sourcegitcommit><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\advocates\send-location-over-sms-using-azure-functions-twilio\includes\2-create-your-xamarin-forms-app-with-xamarin-essentials.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The application you're building is a cross-platform mobile app that talks to the Azure Functions to share your location.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>In this unit, you'll create a blank mobile app using Visual Studio and install a NuGet package that has an API for getting the user's location.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>To complete the steps in this unit, you need Xamarin.Forms cross-platform UI toolkit installed in your Visual Studio.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If you do not have this already, visit <bpt id="p1">[</bpt>installing Xamarin<ept id="p1">](https://docs.microsoft.com/xamarin/get-started/installation/?tabs=windows)</ept>.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Create the Xamarin.Forms project</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>From Visual Studio, select <bpt id="p1">*</bpt>File &gt; New &gt; Project...<ept id="p1">*</ept>.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>From the tree on the left-hand side, select <bpt id="p1">*</bpt>Visual C# &gt; Cross-Platform<ept id="p1">*</ept> and then select <bpt id="p2">*</bpt>Mobile App (Xamarin.Forms)<ept id="p2">*</ept> from the panel in the center.</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Name the solution "ImHere".</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Choose an appropriate location for the solution.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The New Solution dialog</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p1">**</bpt>New Cross Platform App<ept id="p1">**</ept> dialog, select the <bpt id="p2">*</bpt>Blank App<ept id="p2">*</ept> template.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For this module you will build a UWP app, so uncheck iOS and Android and leave UWP checked.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For the <bpt id="p1">*</bpt>Code Sharing Strategy<ept id="p1">*</ept>, select <bpt id="p2">**</bpt>.NET Standard<ept id="p2">**</ept>.</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The configure new solution dialog</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Visual Studio will create two projects for you</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>a UWP app called <ph id="ph1">`ImHere.UWP`</ph></source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>a .NET Standard library, <ph id="ph1">`ImHere`</ph></source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Xamarin.Forms apps are made up of two parts</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>one or more platform-specific app projects, and</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>one (or more) .NET Standard libraries.</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The platform-specific app projects contain the platform-specific code needed to run an app on the relevant platform.</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>These projects then launch a Xamarin.Forms app that is defined in a cross-platform .NET Standard library.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You build your app in cross-platform code and, at runtime, any user interfaces you create are translated into the relevant platform-specific UI components.</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Adding Xamarin.Essentials</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The UWP, Android, and iOS platforms provide numerous similar capabilities that take advantage of the operating system and hardware.</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Despite these similarities, the APIs are very different.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Using these APIs from cross-platform code requires writing platform-specific code in your app projects that you expose to your .NET Standard libraries.</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Xamarin.Essentials<ept id="p1">](https://docs.microsoft.com/xamarin/essentials/?azure-portal=true)</ept> is a NuGet package that provides a cross-platform abstraction over a number of these APIs so that you don't need to write platform-specific code.</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This includes the geolocation APIs that you will use in your app to get the user's location.</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Right-click on the <ph id="ph1">`ImHere`</ph> solution (the top level solution, not the <ph id="ph2">`ImHere`</ph> .NET Standard project) in the Visual Studio Solution Explorer and select <bpt id="p1">*</bpt>Manage NuGet Packages for Solution...<ept id="p1">*</ept>.</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Browse<ept id="p1">**</ept> tab and search for "Xamarin.Essentials".</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This package is currently available as a prerelease NuGet package, so check the <bpt id="p1">*</bpt>include prelease<ept id="p1">*</ept> box.</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If you do not see the Xamarin.Essentials NuGet package, double check that <bpt id="p1">*</bpt>include prelease<ept id="p1">*</ept> is checked.</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Xamarin.Essentials<ept id="p1">**</ept> NuGet package.</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Check all your projects in the project list on the right-hand side.</source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Install<ept id="p1">**</ept> button to install the NuGet package.</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You'll need to accept the license to continue.</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Adding the Xamarin.Essentials NuGet package to all projects in the solution</source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Building and running the app</source>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Right-click on the <ph id="ph1">`ImHere.UWP`</ph> project in Solution Explorer and select <bpt id="p1">*</bpt>Set as StartUp project<ept id="p1">*</ept>.</source>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Set the build configuration to <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept>, the platform to <bpt id="p2">**</bpt>x86<ept id="p2">**</ept>, and the device to run on to <bpt id="p3">**</bpt>Local Machine<ept id="p3">**</ept>.</source>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Setting the Debug x86 configuration to run on the local device</source>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Start debugging the app.</source>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The app running</source>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Summary</source>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>In this unit, you created a new Xamarin.Forms cross-platform mobile app and added the Xamarin.Essentials NuGet package.</source>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Next, you'll learn how to build up the mobile app UI and logic.</source>
        </trans-unit></group></body></file></xliff>