<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="3-setup.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1931010" tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3-setup.623186559253ad975e15c0caa77d2e292f388cc2.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3d260dfe7e8d0734652d6fd7eac6c9b9bb7e3544</xliffext:ms.openlocfilehash><xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/13/2019</xliffext:ms.lasthandoff><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\advocates\replace-faces-with-emojis-matching-emotion\includes\3-setup.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Face API registration</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Once you have your Azure sandbox subscription, you can add a Face API resource and obtain the Face API URL and key needed to connect to this API.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Go to the <bpt id="p1">[</bpt>Azure Cognitive Services Face Service<ept id="p1">](https://azure.microsoft.com/services/cognitive-services/face?azure-portal=true)</ept> and click on <bpt id="p2">**</bpt>Try Face<ept id="p2">**</ept>.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Click on the <bpt id="p1">**</bpt>Sign In<ept id="p1">**</ept> button in the <bpt id="p2">**</bpt>Existing Azure Account<ept id="p2">**</ept> box.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This will take you to the Azure Portal and open the <bpt id="p1">**</bpt>Create Face<ept id="p1">**</ept> dialog box.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Enter the following information:</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>a name for the Azure Face resource</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Concierge Subscription`</ph> for the subscription</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>leave the location at its default value</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`F0`</ph> for pricing tier</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><bpt id="p2">&lt;rgn&gt;</bpt>Sandbox Resource Group<ept id="p2">&lt;/rgn&gt;</ept><ept id="p1">**</ept> for the Resource Group</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Once the Azure resource has been deployed successfully, go to this resource and make a note of the API <bpt id="p1">**</bpt>Endpoint<ept id="p1">**</ept> and <bpt id="p2">**</bpt>keys<ept id="p2">**</ept>.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You will need one of the keys to call the Face API.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can use either of the keys.</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Slack workspace</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To create a Slack command, you need administrator privileges for a Slack workspace.</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If you already have a Slack workspace where you have admin privileges, you can use that.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can also <bpt id="p1">[</bpt>create a brand new Slack workspace<ept id="p1">](https://slack.com/create?azure-portal=true)</ept>.</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Local setup</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You do most of the exercises in this module on your local machine, deploying to your Azure sandbox as the final step.</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Install Visual Studio Code</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you don't have it already, download and install <bpt id="p1">[</bpt>Visual Studio Code<ept id="p1">](https://code.visualstudio.com?azure-portal=true)</ept></source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Add Azure Extensions to Visual Studio Code</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If you don't have them already, install these VS Code extensions:</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Azure Account<ept id="p1">](https://marketplace.visualstudio.com/items?azure-portal=true&amp;itemName=ms-vscode.azure-account)</ept></source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Azure Functions<ept id="p1">](https://marketplace.visualstudio.com/items?azure-portal=true&amp;itemName=ms-azuretools.vscode-azurefunctions)</ept></source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Install node and npm</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If you don't already have them installed locally on your machine, Install <bpt id="p1">[</bpt>node and npm<ept id="p1">](https://nodejs.org/en/download?azure-portal=true)</ept> for your operating system.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Clone the starter code</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Cloning the starter code will help you get the most out of this module.</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>All of the code you need to complete the app, and some initial bootstrap code, is available for free to get you started.</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You should be able to complete the project using the code provided, but if you can't figure something out, then you can find the completed code in the <ph id="ph1">`completed`</ph> branch.</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Change into the directory containing the cloned source repository, then install the required packages:</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Compile the TypeScript code into JavaScript</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You are going to write your app using TypeScript.</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>TypeScript has support for type-checking and class definitions, which we will make use of in our Mojifier code.</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Node.js does not know how to run TypeScript, so as you develop, you'll need to convert your TypeScript code to JavaScript.</source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The TypeScript compiler <ph id="ph1">`tsc`</ph> is installed when you run the <ph id="ph2">`npm install`</ph> command above, and the <ph id="ph3">`package.json`</ph> is configured to run it in the build stage.</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Run the following command:</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Keep this command running in a terminal shell.</source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This watches for any changes to the TypeScript files and converts them to JavaScript files.</source>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If you aren't seeing the behavior you expect in the exercises, check the console output in the terminal window as there may be errors in your TypeScript code.</source>
        </trans-unit></group></body></file></xliff>