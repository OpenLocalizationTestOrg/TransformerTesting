<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="7-deploy-to-azure.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1931010" tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7-deploy-to-azure.cfb499dbe921f83b8142de3ebd3a759c1fe06bb6.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">29e9faf86478211c88400c99924aa40f7554595d</xliffext:ms.openlocfilehash><xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/24/2019</xliffext:ms.lasthandoff><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\advocates\replace-faces-with-emojis-matching-emotion\includes\7-deploy-to-azure.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>You've developed two Azure functions locally.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Let's now get your local functions running in the cloud so that you can call them from Slack.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Create an Azure Function App on Azure</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You're going to start by creating the Azure Function App using VS Code, and the Azure Functions extension.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Click on <bpt id="p1">**</bpt>View<ept id="p1">**</ept> then <bpt id="p2">**</bpt>Command Palette<ept id="p2">**</ept> and select <bpt id="p3">**</bpt>Azure Function: Deploy to Function App<ept id="p3">**</ept>.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Deploy To Function App dialog at the top of VS Code.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Confirm that you want to upload the current project.</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Select the folder that you want to deploy.</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can also browse to another folder if it's not open anymore by selecting browse underneath the demo-app folder.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Choose the <bpt id="p1">**</bpt>Concierge Subscription<ept id="p1">**</ept> sandbox subscription.</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Choose <bpt id="p1">**</bpt>+Create New Function App<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Create New Function App dialog.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Name your app.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Select a globally unique name.</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>We'll use <bpt id="p1">**</bpt>mojifier-slack-function-app<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Choose App Name dialog with the name described previously being typed in.</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Select your resource group.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The Azure sandbox has created a <bpt id="p1">_</bpt>resource group<ept id="p1">_</ept> into which can place your resources.</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The resource group name is <bpt id="p1">**</bpt><bpt id="p2">&lt;rgn&gt;</bpt>[sandbox resource group name]<ept id="p2">&lt;/rgn&gt;</ept><ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Choose the storage account associated with the sandbox.</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Once the upload completes, the output window should show a URL.</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Try it out</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You should expect the <ph id="ph1">`RespondToSlackCommand`</ph> function to work since it doesn't rely on any other dependencies.</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Visit</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You should see some json returned.</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Upload settings</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Remember, you have some settings we put in <ph id="ph1">`local.settings.json`</ph>.</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>These settings were the keys and URL for Cognitive Services.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Since <ph id="ph1">`local.settings.json`</ph> is local, it's never copied to production when you deploy.</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Usually, you would need to open the Azure portal and manually add the settings in the UI, or use <ph id="ph1">`func`</ph> in the Azure CLI.</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Since you're using VS Code, you can use the Azure Function extension and the command palette to upload your local settings!</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Click on <bpt id="p1">**</bpt>View<ept id="p1">**</ept> then <bpt id="p2">**</bpt>Command Palette<ept id="p2">**</ept> and select <bpt id="p3">**</bpt>Azure Functions: Upload Local Settings<ept id="p3">**</ept>.</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Upload Local Setting dialog in VS Code.</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>It says "&gt;upload local".</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Choose <ph id="ph1">`local.settings.json`</ph>.</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Choose local.settings.json from the file list.</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Choose the subscription that's associated with your function.</source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Select the function app that you want to upload settings to.</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In the example, it's called <bpt id="p1">**</bpt>mojifier-slack-function-app<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Try it out</source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If everything is working as expected, the MojifyImage endpoint should be working.</source>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Visit:</source>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>and you should see the mojified image in the window.</source>
        </trans-unit></group></body></file></xliff>