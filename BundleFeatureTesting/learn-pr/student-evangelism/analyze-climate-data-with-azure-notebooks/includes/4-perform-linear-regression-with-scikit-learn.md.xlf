<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="4-perform-linear-regression-with-scikit-learn.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1931010" tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4-perform-linear-regression-with-scikit-learn.f531fe87ee2cb3aa37341f3cdde5f245addf23a8.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f11348561b7e8f1f77abd608213f02c20d5906a0</xliffext:ms.openlocfilehash><xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/24/2019</xliffext:ms.lasthandoff><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">learn-pr\student-evangelism\analyze-climate-data-with-azure-notebooks\includes\4-perform-linear-regression-with-scikit-learn.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Another popular Python library that is widely used in the research community is <bpt id="p1">[</bpt>scikit-learn<ept id="p1">](http://scikit-learn.org/stable/)</ept>, which excels at building machine-learning models to help extract information from data.</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>In this exercise, you will use scikit-learn (which was already imported in Unit 2 to compute a trend line for the NASA climate data.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Place the cursor in the empty cell at the bottom of the notebook.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Change the cell type to <bpt id="p1">**</bpt>Markdown<ept id="p1">**</ept> and enter "Perform linear regression with scikit-learn" as the text.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Add a <bpt id="p1">**</bpt>Code<ept id="p1">**</ept> cell and paste in the following code.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Now run the cell to display a scatter plot with a regression line.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Scatter plot with regression line computed by sckikit-learn</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">_</bpt>Scatter plot with regression line computed by sckikit-learn<ept id="p1">_</ept></source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The output is almost identical to the output in the previous exercise.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The difference is that scikit-learn did more of the work for you.</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Specifically, you didn't have to code a line function as you did with NumPy; scikit-learn's <ph id="ph1">`LinearRegression`</ph> function did it for you.</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>scikit-learn supports <bpt id="p1">*</bpt>many<ept id="p1">*</ept> different types of regression, which comes in handy when building sophisticated machine-learning models.</source>
        </trans-unit></group></body></file></xliff>